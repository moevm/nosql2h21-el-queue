{"version":3,"sources":["fetchDefault.js","actions/user.js","components/containers/QueuePreview.js","components/routes/addqueue/containers/AddQueueForm.js","components/routes/addqueue/containers/AddQueueContainer.js","components/routes/addqueue/AddQueue.js","components/containers/QueueFilterForm.js","components/containers/QueuesFilterContainer.js","components/containers/ListQueues.js","WebSocket.js","components/routes/allqueues/containers/AllQueuesContainer.js","components/routes/allqueues/AllQueues.js","components/routes/queue/containers/QueueInfoContainer.js","components/routes/queue/containers/StudentActionsContainer.js","components/routes/queue/containers/StudentPreview.js","components/routes/queue/containers/ListStudentsDND.js","components/routes/queue/containers/ListStudents.js","components/routes/queue/containers/JoinQueueContainer.js","components/routes/queue/containers/StudentsListContainer.js","components/routes/queue/containers/QueueContainer.js","components/routes/queue/Queue.js","components/routes/profile/containers/ProfileInfoContainer.js","components/routes/profile/containers/ProfileListQueuesContainer.js","components/routes/profile/containers/ProfileActionsContainer.js","components/routes/profile/containers/ProfileContainer.js","components/routes/profile/Profile.js","components/routes/profile/containers/ProfileEditorForm.js","components/routes/profile/containers/ProfileEditorContainer.js","components/routes/profile/ProfileEditor.js","components/nav/CustomNavbar.js","components/routes/auth/signIn/SignInForm.js","components/routes/auth/oauth/OAuthContainer.js","components/routes/auth/signIn/SignIn.js","components/routes/auth/signUp/SignUpForm.js","components/routes/auth/signUp/SignUpGitForm.js","components/routes/auth/signUp/SignUpContainer.js","components/routes/auth/signUp/SignUp.js","components/notification/Notification.js","components/notification/NotificationManager.js","App.js","serviceWorker.js","index.js","reducers/user.js","reducers/index.js","Store.js"],"names":["originalFetch","fetch","window","apply","this","arguments","then","response","status","store","dispatch","type","catch","error","console","log","headersDefault","Authorization","localStorage","getItem","sign_in","data","sign_out","info_upd","QueuePreview","props","containerClass","started","deleteQueue","bind","user","id","Container","className","Col","Row","discipline","description","teacher","custom_start","OverlayTrigger","placement","overlay","Tooltip","start_date","start_time","Image","src","width","date","time","groups","map","elem","index","key","tags","author","role","delete","Dropdown","Toggle","variant","as","Menu","Popover","Title","Item","onClick","to","Component","AddQueueForm","getTeachersList","handleOnChange","handleSubmit","handleFullVerify","handleVerify","state","config","teachers","disciplines","values","Date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","errors","rules","v","length","advconfig","prevQueueId","saveStudents","success","event","name","target","value","setState","prevState","Object","entries","forEach","JSON","stringify","every","e","err","filter","method","headers","body","user_id","json","alert","causeOfError","preventDefault","hash","location","paramsStr","slice","indexOf","decodeURI","paramsObj","split","nextValues","keys","hasOwnProperty","getDisciplinesList","getUrlParams","Form","onSubmit","Group","controlId","Label","Control","isInvalid","placeholder","onChange","Feedback","InputGroup","Prepend","Text","height","viewBox","fill","xmlns","fillRule","d","FormControl","aria-label","Check","label","checked","rows","Button","reverse","join","connect","AddQueue","AddQueueContainer","QueueFilterForm","handleChange","selected","sendConfig","QueuesFilterContainer","filterFlag","filerStatus","ref","input","ListQueues","queue_id","queuesList","socket","openSocket","on","AllQueuesContainer","updateQueuesList","filterConfig","off","onSignOut","AllQueues","QueueInfoContainer","configs","updateInfo","redirectWithConfigs","curr_id","queryParams","prevProps","StudentActionsContainer","action","actionType","record_id","updateStudentList","allowMove","allowDelete","StudentPreview","updateCommentList","commentValue","comments","group","surname","task","count","login","comment","text","taskValue","onDragEnd","result","destination","draggableId","source","moved","loading","Spinner","animation","droppableId","provided","droppableProps","innerRef","studentList","item","draggableProps","dragHandleProps","JoinQueueContainer","joinQueue","taskCheck","taskError","taskRule","StudentsListContainer","list","emit","room","ListStudents","ListStudentsDND","QueueContainer","Queue","match","params","ProfileInfoContainer","userInfo","GitID","moodleID","ProfileListQueuesContainer","handleClick","queuesFlag","curr_login","componentDidMount","ProfileContainer","getInfo","URLlogin","res","Profile","ProfileEditorContainer","handleOnClick","email","GithubLogin","MoodleLogin","search","newData","onInfoUpd","newInfo","ProfileEditorForm","ProfileEditor","Navbar","collapseOnSelect","expand","Brand","aria-controls","Collapse","isAuth","Nav","Link","href","SignInForm","password","onSignIn","passwordInput","OAuthContainer","handleGitLogIn","mode","document","auth_url","SignIn","SignUpForm","password1","password2","curr_key","secretKey","replace","recaptcha","password1Input","regType","isReg","curr_role","includes","sitekey","SignUpGitForm","gitLogin","GithubId","gitId","SignUpContainer","handleGitChecker","currForm","queryString","code","URLSearchParams","get","history","pushState","Alert","needReg","SignUp","Notification","useState","show","setShow","xs","Toast","onClose","delay","autohide","Header","alt","head","Body","message","link","NotificationManager","notifications","unshift","t","setTimeout","pop","clearTimeout","removeAllListeners","AdminDB","React","lazy","App","basename","exact","path","component","fallback","strict","onLocalAuthCheck","local_auth_check","onInfoUpdate","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","initialState","combineReducers","setItem","access_token","undefined","removeItem","createStore","reducer","composeWithDevTools","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.7c9f5b9a.chunk.js","sourcesContent":["import store from './Store'\r\n\r\nvar originalFetch = fetch;\r\nwindow.fetch = function () {\r\n    return originalFetch.apply(this, arguments)\r\n        .then(response => {\r\n            if (response.status === 401)\r\n                store.dispatch({ type: 'SIGN_OUT' });\r\n\r\n            // if (response.ok === false)\r\n            //     return Promise.reject(response.json());\r\n            return response;\r\n        })\r\n        .catch(error => console.log(error))\r\n\r\n};\r\n\r\nvar headersDefault = () => ({\r\n    Authorization: \"JWT \" + localStorage.getItem(\"accesstoken\"),\r\n    'Content-Type': 'application/json;charset=utf-8'\r\n})\r\n\r\nexport default headersDefault\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nfunction myFetch(params){\r\n    return new Promise(function(resolve, reject){\r\n       const xhr = new XMLHttpRequest();\r\n        xhr.open(params.method, params.url, true);\r\n        xhr.send();\r\n        xhr.addEventListener('readystatechange', function(e){\r\n              if( xhr.readyState !== 4  ) return;\r\n              if( xhr.status == 200 ){\r\n                   resolve( xhr.responseText );\r\n               } else{ reject( xhr.statusText ); }\r\n        });\r\n}\r\n*/","export const sign_in = (data) => dispatch => {\r\n    dispatch({ type: 'SIGN_IN', data });\r\n};\r\nexport const sign_out = (data) => dispatch => {\r\n    dispatch({ type: 'SIGN_OUT', data });\r\n};\r\nexport const info_upd = (data) => dispatch => {\r\n    dispatch({ type: 'INFO_UPD', data });\r\n};\r\n\r\nexport const local_auth_check = (data) => dispatch => {\r\n    dispatch({ type: 'AUTH_CHECK', data });\r\n};\r\n","\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Container, Image, OverlayTrigger, Popover, Button, Dropdown, Tooltip} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass QueuePreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteQueue = this.deleteQueue.bind(this)\r\n    }\r\n\r\n    deleteQueue() {\r\n        this.props.deleteQueue(this.props.user.id, this.props.id)\r\n    }\r\n\r\n    containerClass = this.props.started ?\r\n        \"float-lg-right mb-2 p-3 d-flex flex-row align-items-center justify-content-between queue-active custom-block\"\r\n        :\r\n        \"float-lg-right mb-2 p-3 d-flex flex-row align-items-center justify-content-between bg-white custom-block\"\r\n\r\n    render() {\r\n        return (\r\n            <Container\r\n                className={this.containerClass}>\r\n                <Col>\r\n                    <Row>\r\n                        <h5 className=\"mb-0 mt-0 d-flex align-items-center\">\r\n                                    <span\r\n                                        className=\"badge custom-badge badge-primary mr-2 mb-1\">{this.props.discipline}</span>\r\n                            <b className=\"mb-1\">{this.props.description}</b>\r\n                        </h5>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className=\"mb-1\"><span\r\n                            className=\"text-muted\">Преподаватель: </span>{this.props.teacher}</div>\r\n                    </Row>\r\n                    <Row>\r\n                        {this.props.custom_start && !this.props.started &&\r\n                        <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Запись будет открыта\r\n                            с {this.props.start_date} &nbsp; {this.props.start_time}</Tooltip>}>\r\n                            <div className=\"mr-1 mr-lg-2\">\r\n                                <Image src=\"static/img/important.svg\" width=\"24\"/>\r\n                            </div>\r\n                        </OverlayTrigger>\r\n                        }\r\n                        <Col className=\"col-12 col-md-auto m-0 p-0\">\r\n                            <span\r\n                                className=\"badge custom-badge badge-info mr-1 mb-1\">{this.props.date} &nbsp; {this.props.time}</span>\r\n\r\n                        </Col>\r\n                        {this.props.groups && this.props.groups.map((elem, index) =>\r\n                                <span\r\n                                    key={\"group_\" + index}\r\n                                    className=\"badge badge-secondary custom-badge mr-1 mb-1\"\r\n                                >\r\n                            {elem}\r\n                        </span>\r\n                        )}\r\n                    </Row>\r\n                    <Row className=\"ml-3\">\r\n                        {this.props.tags && this.props.tags.map(elem => <span\r\n                            className=\"badge badge-pill badge-info\"\r\n                            key={`spanTag_${elem}`}\r\n                        >\r\n                            {elem}\r\n                        </span>)}\r\n                    </Row>\r\n                </Col>\r\n\r\n                {\r\n                    ((this.props.user.id === this.props.author || this.props.user.role === 'admin')) && this.props.delete &&\r\n                    <Dropdown className={\"mr-2 mr-lg-3\"}>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\" className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                            <Image src=\"static/img/delete.svg\" className=\"big-icon\" width=\"26\" />\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu className=\"drop-menu\">\r\n                            <Popover.Title as=\"h4\"><b>Подтвердите действие</b></Popover.Title>\r\n                            <Dropdown.Item className=\"drop-item mt-2\" onClick={this.deleteQueue}>\r\n                                Удалить запись <Image src=\"/static/img/delete.svg\" className=\"big-icon\" width=\"20\" />\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                }\r\n\r\n                {this.props.id === false ?\r\n                    <Image src=\"static/img/arrowRight.svg\" width=\"28\"/>\r\n                    :\r\n                    < Link className=\"btn custom-btn icon-btn btn-light mr-0 mr-lg-3\"\r\n                           to={`/queue/${this.props.id}`}>\r\n                        <Image src=\"static/img/arrowRight.svg\" width=\"28\"/>\r\n                    </Link>\r\n                }\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default QueuePreview;\r\n","\r\nimport React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    InputGroup,\r\n    FormControl,\r\n    Button,\r\n    Tooltip,\r\n    Image,\r\n    OverlayTrigger\r\n} from 'react-bootstrap'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { connect } from 'react-redux'\r\nimport QueuePreview from '../../../containers/QueuePreview'\r\nimport headersDefault from '../../../../fetchDefault'\r\n// import socket from '../../../../WebSocket'\r\nclass AddQueueForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getTeachersList = this.getTeachersList.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleFullVerify = this.handleFullVerify.bind(this)\r\n        this.handleVerify = this.handleVerify.bind(this)\r\n        this.state = {\r\n            config: {\r\n                teachers: [''],\r\n                disciplines: [''],\r\n            },\r\n            values: {\r\n                discipline: \"\",\r\n                date: `${(new Date()).getFullYear()}-${String((new Date()).getMonth() + 1).padStart(2, '0')}-${String((new Date()).getDate()).padStart(2, '0')}`,\r\n                time: `${String((new Date()).getHours()).padStart(2, '0')}:${String((new Date()).getMinutes()).padStart(2, '0')}`,\r\n                teacher: \"\",\r\n                groups: \"all\",\r\n                description: \"\",\r\n                custom_start: false,\r\n                start_date: `${(new Date()).getFullYear()}-${String((new Date()).getMonth()).padStart(2, '0')}-${String((new Date()).getDate()).padStart(2, '0')}`,\r\n                start_time: `${String((new Date()).getHours()).padStart(2, '0')}:${String((new Date()).getMinutes()).padStart(2, '0')}`\r\n            },\r\n            errors: {\r\n                discipline: false,\r\n                date: false,\r\n                time: false,\r\n                teacher: false,\r\n                groups: false,\r\n                description: false,\r\n                start_date: false,\r\n                start_time: false,\r\n                custom_start: false,\r\n            },\r\n            rules: {\r\n                discipline: [v => !!v || \"Введите дисциплину.\"],\r\n                date: [v => !!v || \"Введите дату.\"],\r\n                time: [v => !!v || \"Введите время.\"],\r\n                start_date: [v => !!v || \"Введите дату.\"],\r\n                start_time: [v => !!v || \"Введите время.\"],\r\n                custom_start: [],\r\n                teacher: [v => !!v || \"Введите преподаватля.\"],\r\n                groups: [v => !!v || \"Введите группы.\"],\r\n                description: [\r\n                    v => !!v || \"Введите описание.\",\r\n                    v => v.length < 50 || \"Максимальный размер описания 50 символов.\"\r\n                ],\r\n            },\r\n            advconfig: {\r\n                prevQueueId: false,\r\n                saveStudents: false,\r\n\r\n            },\r\n            success: false,\r\n        }\r\n\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState(prevState => {\r\n            prevState.values[name] = value\r\n            return prevState\r\n        })\r\n        this.handleVerify(name, value)\r\n    }\r\n    async handleFullVerify() {\r\n\r\n        await Object.entries(this.state.values).forEach(([key, value]) => {\r\n            if (key === \"teacher\" && this.props.user.role !== \"admin\")\r\n                return\r\n            else\r\n                this.handleVerify(key, value)\r\n        })\r\n        console.log(JSON.stringify(this.state.errors))\r\n        return Object.values(this.state.errors).every(e => !e)\r\n    }\r\n\r\n    handleVerify(name, value) {\r\n        this.setState(prevState => {\r\n            const errors = prevState.rules[name].map(e => {\r\n                let err = e(value)\r\n                return err !== true ? err : null\r\n            })\r\n                .filter(function (e) {\r\n                    return e !== null\r\n                })\r\n                .map(e => <p className=\"p-0 m-0\">{e}</p>)\r\n            prevState.errors[name] = errors.length === 0 ? false : errors\r\n            return prevState\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        console.log(this.state.values)\r\n        this.handleFullVerify()\r\n            .then((data) => {\r\n                if (data) {\r\n                    console.log(this.state.values)\r\n                    fetch('/addNewQueue', {\r\n                        method: 'POST',\r\n                        headers: headersDefault(),\r\n\r\n                        body: JSON.stringify({\r\n                            ...this.state.values,\r\n                            user_id: this.props.user.id,\r\n                            advconfig: this.state.advconfig,\r\n                        })\r\n                    })\r\n                        .then(data => data.json())\r\n                        .then(data => {\r\n                            console.log(data)\r\n\r\n                            if (data.success) {\r\n                                this.setState({ success: true })\r\n                            }\r\n                            else {\r\n                                alert(data.causeOfError)\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n        event.preventDefault();\r\n    }\r\n\r\n    getTeachersList() {\r\n        fetch('/config/teachers')\r\n            .then(data => data.json())\r\n            .then((data) => this.setState(prevState => ({\r\n                config: {\r\n                    ...prevState.config,\r\n                    teachers: data\r\n                },\r\n                values: {\r\n                    ...prevState.values,\r\n                    teacher: prevState.values.teacher || data[0],\r\n                }\r\n            })))\r\n    }\r\n\r\n    getDisciplinesList() {\r\n        fetch('/config/disciplines')\r\n            .then(data => data.json())\r\n            .then((data) => this.setState(prevState => ({\r\n                config: {\r\n                    ...prevState.config,\r\n                    disciplines: data\r\n                },\r\n                values: {\r\n                    ...prevState.values,\r\n                    discipline: prevState.values.discipline || data[0],\r\n                }\r\n            })))\r\n    }\r\n\r\n    getUrlParams() {\r\n        let hash = window.location.hash\r\n        let paramsStr = hash.slice(hash.indexOf('?') + 1)\r\n        paramsStr = decodeURI(paramsStr)\r\n        var paramsObj = {}\r\n        paramsStr.split('&').forEach(elem => paramsObj[elem.split('=')[0]] = elem.split('=')[1])\r\n        debugger\r\n        this.setState(prevState => {\r\n            let nextValues = prevState.values\r\n            Object.keys(paramsObj).forEach(key => { if (prevState.values.hasOwnProperty(key)) nextValues[key] = paramsObj[key] })\r\n            return { ...prevState, values: nextValues }\r\n        })\r\n        if (paramsObj.hasOwnProperty(\"prevQueueId\"))\r\n            this.setState(prevState => {\r\n                prevState.advconfig.prevQueueId = paramsObj.prevQueueId\r\n                return prevState\r\n            })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user.role === \"admin\")\r\n            this.getTeachersList()\r\n        this.getDisciplinesList()\r\n        this.getUrlParams();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.success)\r\n            return (<Redirect to=\"/\" />)\r\n        return (\r\n            <>\r\n\r\n                <Container className=\"p-3 bg-light custom-paper\">\r\n                    <p className=\"h5 mb-3\">Выберите конфигурацию для очереди</p>\r\n                    <Col>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Row className=\"mb-2\">\r\n                                <Form.Group as={Col} controlId=\"formGridDiscipline\" className=\"col-12 col-lg-4\">\r\n\r\n                                    <Form.Label className=\"m-1\">Предмет</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.discipline}\r\n                                        name={\"discipline\"}\r\n                                        placeholder=\"Введите предмет\"\r\n                                        className=\"custom-select\"\r\n                                        // type=\"text\"\r\n                                        as=\"select\"\r\n                                        onChange={this.handleOnChange}\r\n                                        value={this.state.values.discipline}>\r\n                                        {this.state.config.disciplines.map((elem) => <option\r\n                                            key={\"disciplineOption_\" + elem}>{elem}</option>)}\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.discipline}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                {\r\n                                    this.props.user.role === \"admin\" &&\r\n                                    <Form.Group as={Col} controlId=\"formGridTeacher\" className=\"col-12 col-lg-4\">\r\n                                        <Form.Label className=\"m-1\">Преподаватель</Form.Label>\r\n                                        <Form.Control\r\n\r\n                                            isInvalid={!!this.state.errors.teacher}\r\n                                            name={\"teacher\"}\r\n                                            as=\"select\"\r\n                                            className=\"custom-select\"\r\n                                            onChange={this.handleOnChange}\r\n                                            value={this.state.values.teacher}>\r\n                                            >\r\n                                            {this.state.config.teachers.map((elem) => <option\r\n                                                key={\"teacherOption_\" + elem}>{elem}</option>)}\r\n\r\n                                        </Form.Control>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {this.state.errors.teacher}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                }\r\n                                <Form.Group as={Col} controlId=\"formGridGroup\" className=\" col-12 col-lg-4\">\r\n                                    <Form.Label className=\"m-1\">Группы</Form.Label>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text id=\"Date-addon1\" className=\"custom-form\">\r\n                                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-people-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path fillRule=\"evenodd\" d=\"M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-5.784 6A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216zM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z\" />\r\n                                                </svg>\r\n                                            </InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl\r\n                                            isInvalid={!!this.state.errors.groups}\r\n                                            name={\"groups\"}\r\n                                            placeholder=\"Группы\"\r\n                                            className=\"custom-endform\"\r\n                                            type=\"text\"\r\n                                            value={this.state.values.groups}\r\n                                            onChange={this.handleOnChange}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {this.state.errors.groups}\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} controlId=\"formGridGroup\" className=\" col-12 col-md-6 col-lg-4\">\r\n\r\n                                    <Form.Label className=\"m-1\">Дата занятия</Form.Label>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text id=\"Date-addon1\" className=\"custom-form\">\r\n                                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-calendar-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path fillRule=\"evenodd\" d=\"M8 7a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5H6a.5.5 0 0 1 0-1h1.5V7.5A.5.5 0 0 1 8 7z\" />\r\n                                                    <path fillRule=\"evenodd\" d=\"M7.5 9.5A.5.5 0 0 1 8 9h2a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0v-2z\" />\r\n                                                    <path fillRule=\"evenodd\" d=\"M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1zm1-3a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2z\" />\r\n                                                    <path fillRule=\"evenodd\" d=\"M3.5 0a.5.5 0 0 1 .5.5V1a.5.5 0 0 1-1 0V.5a.5.5 0 0 1 .5-.5zm9 0a.5.5 0 0 1 .5.5V1a.5.5 0 0 1-1 0V.5a.5.5 0 0 1 .5-.5z\" />\r\n                                                </svg>\r\n                                            </InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl\r\n                                            isInvalid={!!this.state.errors.date}\r\n                                            name={\"date\"}\r\n                                            placeholder=\"Date\"\r\n                                            className=\"custom-form\"\r\n                                            aria-label=\"date\"\r\n                                            type=\"date\"\r\n                                            value={this.state.values.date}\r\n                                            onChange={this.handleOnChange}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.date}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridTime\" className=\" col-12 col-md-6 col-lg-4\">\r\n                                    <Form.Label className=\"m-1\">Время начала</Form.Label>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text id=\"Time-addon1\" className=\"custom-form\">\r\n                                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\r\n                                                    className=\"bi bi-clock\" fill=\"currentColor\"\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path fillRule=\"evenodd\"\r\n                                                        d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm8-7A8 8 0 1 1 0 8a8 8 0 0 1 16 0z\" />\r\n                                                    <path fillRule=\"evenodd\"\r\n                                                        d=\"M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z\" />\r\n                                                </svg>\r\n                                            </InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl\r\n                                            isInvalid={!!this.state.errors.time}\r\n                                            name={\"time\"}\r\n                                            placeholder=\"Time\"\r\n                                            className=\"custom-form\"\r\n                                            aria-label=\"time\"\r\n                                            type=\"time\"\r\n                                            value={this.state.values.time}\r\n                                            onChange={this.handleOnChange}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.time}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            {this.state.advconfig.prevQueueId &&\r\n                                <Row>\r\n                                    <Container className=\"col-12\">\r\n                                        <Form.Group className=\"d-flex\">\r\n                                            <Form.Check\r\n                                                type=\"switch\"\r\n                                                id=\"custom-switch1\"\r\n                                                label=\"Перенести студентов с прошлой очереди\"\r\n                                                name=\"saveStudents\"\r\n                                                value={this.state.advconfig.saveStudents}\r\n                                                onChange={(event) => {\r\n                                                    var value = event.target.checked\r\n                                                    this.setState(prevState => {\r\n                                                        debugger\r\n                                                        prevState.advconfig.saveStudents = value\r\n                                                        return prevState\r\n                                                    })\r\n                                                }}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Container>\r\n                                </Row>\r\n                            }\r\n                            <Row>\r\n                                <Container className=\"col-12\">\r\n                                    <Form.Group className=\"d-flex\">\r\n                                        <Form.Check\r\n                                            type=\"switch\"\r\n                                            id=\"custom-switch2\"\r\n                                            label=\"Отдельное время для открытия записи\"\r\n                                            name=\"custom_start\"\r\n                                            value={this.state.values.custom_start}\r\n                                            onChange={(event) => {\r\n                                                var value = event.target.checked\r\n                                                this.setState(prevState => {\r\n                                                    debugger\r\n                                                    prevState.values['custom_start'] = value\r\n                                                    return prevState\r\n                                                })\r\n                                            }}\r\n                                        />\r\n                                        <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Если выключено, запись в очередь будет доступна с даты начала занятия</Tooltip>}>\r\n                                            <div className=\"ml-2 ml-lg-3\">\r\n                                                <Image src=\"static/img/info.svg\" width=\"20\" />\r\n                                            </div>\r\n                                        </OverlayTrigger>\r\n                                    </Form.Group>\r\n                                    {this.state.values.custom_start === true &&\r\n                                        <Row>\r\n                                            <Form.Group as={Col} controlId=\"formGridGroup\" className=\" col-12 col-md-6 col-lg-4\">\r\n                                                <Form.Label className=\"m-1\">Дата открытия</Form.Label>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <InputGroup.Prepend>\r\n                                                        <InputGroup.Text id=\"Date-addon1\" className=\"custom-form\">\r\n                                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\r\n                                                                className=\"bi bi-calendar-plus\" fill=\"currentColor\"\r\n                                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path fillRule=\"evenodd\"\r\n                                                                    d=\"M8 7a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5H6a.5.5 0 0 1 0-1h1.5V7.5A.5.5 0 0 1 8 7z\" />\r\n                                                                <path fillRule=\"evenodd\"\r\n                                                                    d=\"M7.5 9.5A.5.5 0 0 1 8 9h2a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0v-2z\" />\r\n                                                                <path fillRule=\"evenodd\"\r\n                                                                    d=\"M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1zm1-3a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2z\" />\r\n                                                                <path fillRule=\"evenodd\"\r\n                                                                    d=\"M3.5 0a.5.5 0 0 1 .5.5V1a.5.5 0 0 1-1 0V.5a.5.5 0 0 1 .5-.5zm9 0a.5.5 0 0 1 .5.5V1a.5.5 0 0 1-1 0V.5a.5.5 0 0 1 .5-.5z\" />\r\n                                                            </svg>\r\n                                                        </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <FormControl\r\n                                                        isInvalid={!!this.state.errors.start_date}\r\n                                                        name={\"start_date\"}\r\n                                                        placeholder=\"Date\"\r\n                                                        className=\"custom-form\"\r\n                                                        aria-label=\"date\"\r\n                                                        value={this.state.values.start_date}\r\n                                                        onChange={this.handleOnChange}\r\n                                                        type=\"date\"\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} controlId=\"formGridTime\" className=\" col-12 col-md-6 col-lg-4\">\r\n                                                <Form.Label className=\"m-1\">Время</Form.Label>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <InputGroup.Prepend>\r\n                                                        <InputGroup.Text id=\"Time-addon1\" className=\"custom-form\">\r\n                                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\r\n                                                                className=\"bi bi-clock\" fill=\"currentColor\"\r\n                                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path fillRule=\"evenodd\"\r\n                                                                    d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm8-7A8 8 0 1 1 0 8a8 8 0 0 1 16 0z\" />\r\n                                                                <path fillRule=\"evenodd\"\r\n                                                                    d=\"M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z\" />\r\n                                                            </svg>\r\n                                                        </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <FormControl\r\n                                                        isInvalid={!!this.state.errors.start_time}\r\n                                                        name={\"start_time\"}\r\n                                                        placeholder=\"Time\"\r\n                                                        className=\"custom-form\"\r\n                                                        aria-label=\"time\"\r\n                                                        value={this.state.values.start_time}\r\n                                                        onChange={this.handleOnChange}\r\n                                                        type=\"time\"\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Row>\r\n                                    }\r\n                                </Container>\r\n\r\n                            </Row>\r\n                            <Form.Group controlId=\"formGridDescription\">\r\n                                <Form.Label>Описание</Form.Label>\r\n                                <Form.Control\r\n                                    isInvalid={!!this.state.errors.description}\r\n                                    name={\"description\"}\r\n                                    as=\"textarea\"\r\n                                    className=\"custom-form\"\r\n                                    rows=\"3\"\r\n                                    placeholder=\"Описание\"\r\n                                    value={this.state.values.description}\r\n                                    onChange={this.handleOnChange} />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.errors.description}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Button className=\"mt-3 custom-btn\" type=\"submit\">\r\n                                Создать очередь\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n\r\n                </Container >\r\n                <Container className=\"mt-3 p-3 bg-light custom-paper\">\r\n                    <Row>\r\n                        <Col>\r\n                            <h5>Предпросмотр:</h5>\r\n                            <QueuePreview\r\n                                id={false}\r\n                                discipline={this.state.values.discipline}\r\n                                teacher={this.state.values.teacher}\r\n                                groups={this.state.values.groups.split(',')}\r\n                                date={this.state.values.date.split('-').reverse().join(' : ')}\r\n                                time={this.state.values.time}\r\n                                description={this.state.values.description}\r\n                                user={this.props.user}\r\n                                delete={false}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default AddQueueForm;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(AddQueueForm)\r\n\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport AddQueueForm from './AddQueueForm'\r\n\r\nclass AddQueue extends Component {\r\n    render() {\r\n        return (\r\n            <Container className=\"p-3 mt-1 mt-lg-2\">\r\n                <AddQueueForm />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AddQueue;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport AddQueueContainer from './containers/AddQueueContainer'\r\n\r\nclass AddQueue extends Component {\r\n    render() {\r\n        return (\r\n            <AddQueueContainer />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AddQueue;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nclass QueueFilterForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getTeachersList = this.getTeachersList.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.state = {\r\n            config: {\r\n                teachers: [\"\"]\r\n            },\r\n            selected: {\r\n                discipline: \"\",\r\n                teacher: \"\"\r\n            }\r\n        }\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n\r\n\r\n        this.setState((prevState) => {\r\n            prevState.selected[name] = value\r\n            return prevState\r\n        })\r\n    }\r\n    handleSubmit(event) {\r\n        this.props.sendConfig(this.state.selected)\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    getTeachersList() {\r\n        fetch('/config/teachers')\r\n            .then(data => data.json())\r\n            .then((data) => this.setState(prevState => ({\r\n                config: {\r\n                    teachers: data\r\n                },\r\n                selected: {\r\n                    ...prevState.selected,\r\n                    teacher: data[0],\r\n                }\r\n            })))\r\n            .catch(console.log)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.teacher)\r\n            this.getTeachersList()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Col>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Row className=\"mb-2\">\r\n                            {\r\n                                this.props.discipline &&\r\n                                <Form.Group className=\"col-12 col-lg-4\">\r\n                                    <Form.Label className=\"m-1\">Дисциплина</Form.Label>\r\n                                    <Form.Control\r\n                                        name={\"discipline\"}\r\n                                        className=\"custom-textform\"\r\n                                        type=\"text\"\r\n                                        onChange={this.handleChange}\r\n                                        value={this.state.selected.discipline}\r\n                                    />\r\n                                </Form.Group>\r\n                            }\r\n                            {\r\n                                this.props.teacher &&\r\n                                <Form.Group className=\"col-12 col-lg-4\">\r\n                                    <Form.Label className=\"m-1\">Преподаватель</Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"custom-select\"\r\n                                        name={\"teacher\"}\r\n                                        as=\"select\"\r\n                                        onChange={this.handleChange}\r\n                                        value={this.state.selected.teacher}>\r\n                                        >\r\n                                        {this.state.config.teachers.map((elem) => <option\r\n                                            key={\"disciplineOption_\" + elem}>{elem}</option>)}\r\n\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            }\r\n                        </Row>\r\n                        <Button className=\"mt-3 custom-btn\" type=\"submit\">\r\n                            Отфильтровать\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default QueueFilterForm;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Container, Form } from 'react-bootstrap'\r\nimport QueueFilterForm from './QueueFilterForm'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n// import socket from '../../../../WebSocket'\r\n\r\nclass QueuesFilterContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.state = {\r\n            filterFlag: false,\r\n        }\r\n    }\r\n    handleChange() {\r\n        this.setState({ filterFlag: this.filerStatus.checked })\r\n        if (this.filerStatus.checked === false)\r\n            this.props.sendConfig({})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container className=\"p-3 bg-white custom-block col-12\">\r\n                    <Form.Group>\r\n                        <Form.Check\r\n                            type=\"switch\"\r\n                            id=\"custom-switch\"\r\n                            label=\"Фильтрация\"\r\n                            // checked=\"true\"\r\n                            ref={(input) => this.filerStatus = input}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    {this.state.filterFlag &&\r\n                        <QueueFilterForm\r\n                            discipline={this.props.discipline}\r\n                            teacher={this.props.teacher}\r\n                            sendConfig={this.props.sendConfig}\r\n                        />\r\n                    }\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default QueuesFilterContainer;\r\n","import React, {Component} from 'react';\r\nimport { Col, Row, Container } from 'react-bootstrap'\r\nimport QueuePreview from \"./QueuePreview\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport headersDefault from \"../../fetchDefault\";\r\n\r\n\r\nclass ListQueues extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteQueue = this.deleteQueue.bind(this)\r\n    }\r\n\r\n    deleteQueue(user_id, queue_id) {\r\n        this.props.deleteQueue(user_id, queue_id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-3 p-1 bg-light col-12\" >\r\n                <Row>\r\n                    {this.props.queuesList && this.props.queuesList.map(elem =>\r\n                        <Col\r\n                            className=\"col-12 col-lg-6\"\r\n                            key={`RowQueueContainer_${elem.id}`}\r\n                        >\r\n                            <QueuePreview\r\n                                key={`QueueContainer_${elem.id}`}\r\n                                id={elem.id}\r\n                                discipline={elem.discipline}\r\n                                teacher={elem.teacher}\r\n                                description={elem.description}\r\n                                author={elem.author}\r\n                                date={elem.date}\r\n                                groups={elem.groups}\r\n                                time={elem.time}\r\n                                index={elem.index}\r\n                                tags={elem.tags}\r\n                                custom_start={elem.custom_start}\r\n                                start_date={elem.start_date}\r\n                                start_time={elem.start_time}\r\n                                started={elem.started}\r\n                                user={this.props.user}\r\n                                deleteQueue={this.deleteQueue}\r\n                                delete={true}\r\n                            />\r\n                        </Col>\r\n                    )}\r\n                </Row>\r\n\r\n            </Container >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListQueues;","import openSocket from 'socket.io-client';\r\n\r\n// const socket = openSocket('163.172.163.152:3999');\r\n// const socket = openSocket(\"localhost:3030\")\r\nconst socket = openSocket(\"localhost:8091\")\r\n\r\nsocket.on('disconnect', () => {\r\n    console.log(\"disconnect\");\r\n    console.log(\"waiting...\");\r\n});\r\nsocket.on('connection', () => {\r\n    console.log(\"connection\");\r\n});\r\n\r\n\r\nexport default socket;","import React, { Component } from 'react';\r\nimport { Container, OverlayTrigger, Tooltip, Image } from 'react-bootstrap'\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport QueuesFilterContainer from \"../../../containers/QueuesFilterContainer\"\r\nimport ListQueues from \"../../../containers/ListQueues\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux'\r\nimport socket from '../../../../WebSocket'\r\nimport { sign_out } from \"../../../../actions/user\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass AllQueuesContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateQueuesList = this.updateQueuesList.bind(this)\r\n        this.deleteQueue = this.deleteQueue.bind(this)\r\n        this.state = {\r\n            queuesList: [{}],\r\n            filterConfig: {}\r\n        }\r\n    }\r\n\r\n    updateQueuesList(data) {\r\n        this.setState({\r\n            filterConfig: data\r\n        })\r\n        fetch('/allqueues', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n            body: JSON.stringify({\r\n                discipline: '',\r\n                user_id: this.props.user.id,\r\n                ...data,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({ queuesList: data })\r\n            })\r\n    }\r\n\r\n    deleteQueue(user_id, queue_id) {\r\n        fetch('/deletequeue', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n\r\n            body: JSON.stringify({\r\n                queue_id: queue_id,\r\n                user_id: user_id,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(this.updateQueuesList)\r\n    }\r\n\r\n    componentDidMount() {\r\n        socket.on(\"allqueue updated\", (data) => {\r\n            console.log(\"run\")\r\n            this.updateQueuesList(this.state.filterConfig)\r\n        })\r\n        this.updateQueuesList(this.state.filterConfig)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.off(\"allqueue updated\")\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"p-3 mt-1 mt-lg-2 col-12\">\r\n                <Container className=\"p-2 p-lg-3 custom-paper bg-light col-12\">\r\n                    <div className=\"h5 ml-2 mb-3 d-flex justify-content-between\">\r\n                        <div>Очереди</div>\r\n                        <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Очереди, в которые уже можно записаться, имеют фиолетовую тень</Tooltip>}>\r\n                            <div className=\"mr-0 mr-lg-3\">\r\n                                <Image src=\"static/img/info.svg\" width=\"24\" />\r\n                            </div>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                    <QueuesFilterContainer\r\n                        discipline={true}\r\n                        teacher={this.props.user.role === \"admin\"}\r\n                        sendConfig={this.updateQueuesList}\r\n                    />\r\n                    <ListQueues\r\n                        queuesList={this.state.queuesList} user={this.props.user}\r\n                        deleteQueue={this.deleteQueue}\r\n                    />\r\n                </Container>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default AllQueuesContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(AllQueuesContainer)","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport AllQueuesContainer from './containers/AllQueuesContainer'\r\n\r\nclass AllQueues extends Component {\r\n    render() {\r\n        return (\r\n                <AllQueuesContainer />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AllQueues;\r\n","import React, {Component} from 'react';\r\nimport {Container, Row, Col, Image, Button, Dropdown, Popover} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport {sign_out} from \"../../../../actions/user\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass QueueInfoContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            configs:{\r\n                discipline:\"\",\r\n                groups:[\"\"],\r\n                date:\"\",\r\n                time:\"\",\r\n                teacher:\"\",\r\n                description:\"\",\r\n                custom_start:false,\r\n                start_date:\"\",\r\n                start_time:\"\"\r\n            }\r\n        }\r\n\r\n        this.updateInfo = this.updateInfo.bind(this)\r\n        this.redirectWithConfigs = this.redirectWithConfigs.bind(this)\r\n    }\r\n\r\n    updateInfo() {\r\n        fetch('/queueInfo', {\r\n            method:'POST',\r\n            headers:headersDefault(),\r\n\r\n            body:JSON.stringify({id:this.props.curr_id})\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                this.setState({configs:data})\r\n            })\r\n    }\r\n\r\n    redirectWithConfigs() {\r\n        let configs = this.state.configs\r\n        configs.prevQueueId = this.props.curr_id\r\n        let queryParams = Object.entries(configs).map(([key, value]) => `${key}=${value}`).join('&')\r\n        let a = window.location.hash = '/addqueue?' + queryParams\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.updateInfo()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.curr_id !== this.props.curr_id)\r\n            this.updateInfo()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dropdown as=\"Container\" className=\"col-12 col-lg-6 p-0 m-0\">\r\n                <Dropdown.Toggle as=\"div\"  className=\"p-2 p-lg-4 col-12 drop\">\r\n                    <Container className=\"custom-paper p-3 bg-light click-reaction\">\r\n                        <Row>\r\n                            <Col className=\"col-2 col-lg-2 d-flex justify-content-end align-items-start\">\r\n                                <Image className=\"mt-2 custom-queue-icon\" src=\"static/img/queue.svg\" width=\"90%\"/>\r\n                            </Col>\r\n                            <Col className=\"col-10 col-lg-5\">\r\n                                <Row>\r\n                                    <Col className=\"col-12\">\r\n                                        <div className=\"mt-2\">\r\n                                            <div\r\n                                                className=\"mb-2 text-secondary font-weight-bold\">{this.state.configs.date} {this.state.configs.time}</div>\r\n                                            <h5 className=\"mb-0 d-flex align-items-center\">\r\n                                                <span\r\n                                                    className=\"badge custom-badge badge-primary mr-2 mb-1\">{this.state.configs.discipline}</span>\r\n                                                <b className=\"mb-1\">{this.state.configs.description}</b>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col className=\"col-10 col-lg-5 d-flex flex-column justify-content-center\">\r\n                                <Row>\r\n                                    <Col className=\"col-12 d-flex\">\r\n                                        <div className=\"text-muted mr-2\">Преподаватель:</div>\r\n                                        {this.state.configs.teacher}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className=\"col-12  d-flex\">\r\n                                        <div className=\"text-muted mr-2\">Группы:</div>\r\n                                        {this.state.configs.groups.join(', ')}\r\n                                    </Col>\r\n                                </Row>\r\n                                {\r\n                                    this.state.configs.custom_start &&\r\n                                    <Row>\r\n                                        <Col className=\"col-12  d-flex\">\r\n                                            <div className=\"text-muted mr-2\">Открытие:</div>\r\n                                            <b className=\"text-info\">{this.state.configs.start_date} {this.state.configs.start_time}</b>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Dropdown.Toggle>\r\n                {this.props.user.role !== 'student' &&\r\n                <Dropdown.Menu className=\"drop-menu ml-4\">\r\n                    <Popover.Title as=\"h4\"><b>Опции</b></Popover.Title>\r\n                    <Dropdown.Item className=\"drop-item mt-2\" onClick={this.redirectWithConfigs}>\r\n                        Создать копию <Image src=\"/static/img/copy.svg\" className=\"big-icon ml-1\" width=\"24\"/>\r\n                    </Dropdown.Item>\r\n                </Dropdown.Menu>}\r\n\r\n            </Dropdown>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n        user:state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut:(data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(QueueInfoContainer);\r\n","import React from 'react';\r\nimport {Dropdown, Image, Popover} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport headersDefault from '../../../../fetchDefault'\r\n\r\nfunction StudentActionsContainer(props) {\r\n\r\n    function action(actionType) {\r\n        console.log(actionType)\r\n        fetch('/queue/action',\r\n            {\r\n                method:\"POST\",\r\n                headers:headersDefault(),\r\n\r\n                body:JSON.stringify({\r\n                    action:actionType,\r\n                    queue_id:window.location.hash.split('/')[2],\r\n                    record_id:props.record_id\r\n                })\r\n            })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                props.updateStudentList()\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.allowMove &&\r\n                <Dropdown className={\"mr-2\"}>\r\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\"\r\n                                     className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                        <Image src=\"static/img/arrowBoth.svg\" width=\"28\"/>\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu className=\"drop-menu\">\r\n                        <Dropdown.Item className=\"drop-item\" onClick={() => action(1)}>\r\n                            В начало <Image src=\"/static/img/arrowTop.svg\" width=\"25\"/>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"drop-item\" onClick={() => action(2)}>\r\n                            Выше на 1 <Image src=\"/static/img/arrowUp.svg\" width=\"20\"/>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"drop-item\" onClick={() => action(3)}>\r\n                            Ниже на 1 <Image src=\"/static/img/arrowDown.svg\" width=\"20\"/>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"drop-item\" onClick={() => action(4)}>\r\n                            В конец <Image src=\"/static/img/arrowLast.svg\" width=\"23\"/>\r\n                        </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            }\r\n            {\r\n                props.allowDelete &&\r\n                <Dropdown className={\"mr-2\"}>\r\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\"\r\n                                     className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                        <Image src=\"static/img/delete.svg\" className=\"big-icon\" width=\"26\"/>\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu className=\"drop-menu\">\r\n                        <Popover.Title as=\"h4\"><b>Подтвердите действие</b></Popover.Title>\r\n                        <Dropdown.Item className=\"drop-item mt-2\" onClick={() => action(5)}>\r\n                            Удалить запись <Image src=\"/static/img/delete.svg\" className=\"big-icon\" width=\"20\"/>\r\n                        </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default StudentActionsContainer;\r\n","import React, { Component, useState } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Image,\r\n    Button,\r\n    DropdownButton,\r\n    Dropdown,\r\n    Popover,\r\n    OverlayTrigger,\r\n    Form\r\n} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { connect } from 'react-redux'\r\nimport StudentModalActionsContainer from './StudentModalActionsContainer'\r\nimport StudentActionsContainer from './StudentActionsContainer'\r\nimport headersDefault from \"../../../../fetchDefault\";\r\nimport socket from \"../../../../WebSocket\";\r\nimport { sign_out } from \"../../../../actions/user\";\r\n\r\n\r\nclass StudentPreview extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.action = this.action.bind(this)\r\n        this.updateCommentList = this.updateCommentList.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.state = {\r\n            commentValue: \"\",\r\n            comments: []\r\n        }\r\n        console.log(\"constr\")\r\n    }\r\n\r\n    updateCommentList() {\r\n        fetch('/comments', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n            body: JSON.stringify({\r\n                queue_id: window.location.hash.split('/')[2],\r\n                record_id: this.props.id,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                this.setState({ comments: data })\r\n                console.log(this.state.comments)\r\n            })\r\n    }\r\n\r\n    action() {\r\n        fetch('/queue/comment',\r\n            {\r\n                method: \"POST\",\r\n                headers: headersDefault(),\r\n\r\n                body: JSON.stringify({\r\n                    queue_id: window.location.hash.split('/')[2],\r\n                    record_id: this.props.id,\r\n                    value: this.state.commentValue,\r\n                    author: this.props.user.id\r\n                })\r\n            })\r\n            .then(data => data.json())\r\n            .then(this.updateCommentList)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.updateCommentList()\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        const value = event.target.value\r\n        this.setState({ commentValue: value })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"0-----------0\")\r\n        return (\r\n            <Container className=\"bg-white col-12 custom-block queue-element p-2 mb-2\">\r\n                <Row>\r\n                    <Col className=\"col-12 col-lg-4 d-flex align-items-center\">\r\n                        <div>\r\n                            <span className=\"badge custom-badge badge-primary mr-1 mr-lg-3 ml-0 ml-lg-2\">\r\n                                <big className=\"font-weight-bold\">{this.props.index || \"0\"}</big>\r\n                            </span>\r\n                            {this.props.group && <>\r\n                                <span className=\"badge custom-badge badge-info mr-1 mr-lg-2\">\r\n                                    <big className=\"font-weight-lighter\">{this.props.group}</big>\r\n                                </span>\r\n                            </>}\r\n                            <big className=\"align-middle\">\r\n                                {this.props.name} {this.props.surname}\r\n                            </big>\r\n\r\n                        </div>\r\n                    </Col>\r\n                    <Col className=\"col-auto mt-2 mb-2 mt-lg-0 mb-lg-0 col-lg-4 d-flex align-items-center\">\r\n                        <big className=\"ml-2\"><b>{this.props.task}</b></big>\r\n                    </Col>\r\n                    <Col className=\"col-12 col-lg-3 d-flex justify-content-start align-items-center\">\r\n                        <Dropdown className=\"mr-1 mr-lg-2\">\r\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\"\r\n                                className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                                <Image src=\"static/img/dots.svg\" className=\"big-icon\" width=\"26\" />\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu className=\"drop-menu\">\r\n                                <Container>\r\n                                    <div>\r\n                                        <span className=\"text-muted\">Дата:</span> {this.props.date}\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className=\"text-muted\">Кол-во записей:</span> {this.props.count}\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className=\"text-muted\">Логин:</span> {this.props.login}\r\n                                    </div>\r\n                                </Container>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        {\r\n                            (this.props.user.role !== 'student' || this.props.user.id === this.props.author) &&\r\n                            <Dropdown className=\"mr-1 mr-lg-2\">\r\n                                <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\"\r\n                                    className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                                    <Image src=\"static/img/comments.svg\" className=\"big-icon\" width=\"26\" />\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu className=\"comments\">\r\n                                    <Container className=\"mt-2\">\r\n                                        {\r\n                                            this.state.comments && this.state.comments.map(comment =>\r\n                                                <div className=\"mb-1 custom-card border bg-light p-2\">\r\n                                                    <div className=\"text-info m-0 p-0\">{comment.author}</div>\r\n                                                    <div>{comment.text}</div>\r\n                                                    <small className=\"text-muted\">{comment.date}</small>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n\r\n                                        <hr />\r\n                                        <Form.Group controlId=\"formGridDescription\"\r\n                                            className=\"d-flex align-items-center\">\r\n                                            <Form.Control\r\n                                                name={\"description\"}\r\n                                                as=\"textarea\"\r\n                                                className=\"custom-form locked-height form-control-sm\"\r\n                                                rows=\"2\"\r\n                                                placeholder=\"Оставьте комментарий...\"\r\n                                                value={this.state.taskValue}\r\n                                                onChange={this.handleOnChange}\r\n                                            />\r\n                                            <Button className=\"ml-2 btn btn-light custom-btn icon-btn\"\r\n                                                onClick={this.action}>\r\n                                                <Image src=\"static/img/send.svg\" className=\"big-icon\" width=\"28\" />\r\n                                            </Button>\r\n                                        </Form.Group>\r\n                                    </Container>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        }\r\n\r\n                        {\r\n                            <StudentActionsContainer\r\n                                record_id={this.props.id}\r\n                                updateStudentList={this.props.updateStudentList}\r\n                                allowDelete={this.props.user.role !== 'student' || this.props.user.id === this.props.author}\r\n                                allowMove={this.props.user.role !== 'student'}\r\n                            />\r\n                        }\r\n                        {/* <Dropdown className={\"mr-2\"}>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\"\r\n                            className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                            <Image src=\"static/img/arrowBoth.svg\" width=\"28\" />\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu className=\"drop-menu\">\r\n                            <Dropdown.Item className=\"drop-item\">\r\n                                В начало <Image src=\"/static/img/arrowTop.svg\" width=\"25\" />\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"drop-item\">\r\n                                Выше на 1 <Image src=\"/static/img/arrowUp.svg\" width=\"20\" />\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"drop-item\">\r\n                                Ниже на 1 <Image src=\"/static/img/arrowDown.svg\" width=\"20\" />\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"drop-item\">\r\n                                В конец <Image src=\"/static/img/arrowLast.svg\" width=\"23\" />\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    */}\r\n                        {\r\n                            /*\r\n                            <Button\r\n                            className=\"btn custom-btn icon-btn mr-2\"\r\n                            variant=\"link\"\r\n                            onClick={() => setModalShow(true)}>\r\n                            <Image src=\"static/img/caretRight.svg\"/>\r\n                        </Button>\r\n                        <StudentModalActionsContainer\r\n                            login={props.login}\r\n                            show={modalShow}\r\n                            onHide={() => {\r\n                                setModalShow(false)\r\n                            }}\r\n                            />\r\n                            */\r\n                        }\r\n\r\n                    </Col>\r\n\r\n                    {/*<Col>\r\n                    {props.tags && props.tags.map(elem =>\r\n                        <span\r\n                            className=\"badge custom-badge badge-primary\"\r\n                            key={\"spanStudentTag_\" + elem}\r\n                        >\r\n                            {elem}\r\n                        </span>\r\n                    )}\r\n                </Col>*/}\r\n                </Row>\r\n            </Container >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default StudentPreview;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(StudentPreview)\r\n","import React, { Component, useState } from 'react';\r\nimport { Col, Row, Container, Spinner } from 'react-bootstrap'\r\nimport StudentPreview from \"./StudentPreview\"\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nclass ListQueues extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        };\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        console.log(result)\r\n        console.log(\"item id\", result.draggableId)\r\n        console.log(\"from\", result.source.index)\r\n        console.log(\"to\", result.destination.index)\r\n        this.moved(result.draggableId, result.destination.index)\r\n    }\r\n\r\n    moved(record_id, to) {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        fetch('/queue/action',\r\n            {\r\n                method: \"POST\",\r\n                headers: headersDefault(),\r\n                body: JSON.stringify({\r\n                    action: 6,\r\n                    queue_id: window.location.hash.split('/')[2],\r\n                    record_id,\r\n                    to\r\n                })\r\n            })\r\n            .then(data => {\r\n                this.props.updateStudentList()\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            }\r\n            )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.loading)\r\n            return (\r\n                <Container className=\"col-12 d-flex justify-content-center align-items-center\">\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </Container>\r\n            )\r\n        else\r\n            return (\r\n                <Container className=\"p-3 col-12\">\r\n                    <DragDropContext onDragEnd={this.onDragEnd}>\r\n                        <Droppable\r\n                            droppableId=\"droppable\">\r\n                            {provided => (\r\n                                <Col\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}\r\n                                >\r\n                                    {this.props.studentList && this.props.studentList.map((item, index) => (\r\n                                        <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                            {provided => (\r\n                                                <Row\r\n                                                    ref={provided.innerRef}\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                >\r\n\r\n                                                    <StudentPreview\r\n                                                        key={`QueueContainer_${item.id}`}\r\n                                                        id={item.id}\r\n                                                        name={item.name}\r\n                                                        surname={item.surname}\r\n                                                        login={item.login}\r\n                                                        task={item.task}\r\n                                                        index={item.index}\r\n                                                        tags={item.tags}\r\n                                                        author={item.author}\r\n                                                        group={item.group}\r\n                                                        count={item.count}\r\n                                                        date={item.date}\r\n                                                        updateStudentList={this.updateStudentList}\r\n                                                    />\r\n                                                </Row>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </Col>\r\n                            )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                </Container>\r\n\r\n            );\r\n    }\r\n}\r\n\r\n\r\nexport default ListQueues;","import React from 'react';\r\nimport { Col, Row, Container } from 'react-bootstrap'\r\nimport StudentPreview from \"./StudentPreview\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction ListQueues(props) {\r\n    return (\r\n        <Container className=\"p-3 col-12\" >\r\n            <Col>\r\n                {props.studentList && props.studentList.map(elem =>\r\n                    <Row\r\n                        key={`RowQueueContainer_${elem.id}`}\r\n                    >\r\n                        <StudentPreview\r\n                            key={`QueueContainer_${elem.id}`}\r\n                            id={elem.id}\r\n                            name={elem.name}\r\n                            surname={elem.surname}\r\n                            login={elem.login}\r\n                            task={elem.task}\r\n                            index={elem.index}\r\n                            tags={elem.tags}\r\n                            author={elem.author}\r\n                            group={elem.group}\r\n                            count={elem.count}\r\n                            date={elem.date}\r\n                            updateStudentList={props.updateStudentList}\r\n                        />\r\n                    </Row>\r\n                )}\r\n            </Col>\r\n\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default ListQueues;","import React, {Component} from 'react';\r\nimport {Row, Col, Container, Image, Button, Form, Dropdown, Popover} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {connect} from 'react-redux'\r\n\r\nclass JoinQueueContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.joinQueue = this.joinQueue.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.taskCheck = this.taskCheck.bind(this)\r\n        this.state = {\r\n            taskValue:\"\",\r\n            taskError:false,\r\n            taskRule:[\r\n                v => !!v || \"Введите значение.\",\r\n                v => v.length > 2 || \"Миниальная длина: 2 символа\",\r\n            ]\r\n        }\r\n\r\n    }\r\n\r\n    async joinQueue() {\r\n        await this.taskCheck(this.state.taskValue)\r\n        if (!this.state.taskError)\r\n            this.props.joinQueue(this.props.user.id, this.state.taskValue)\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        const value = event.target.value\r\n        this.taskCheck(value)\r\n        this.setState({taskValue:value})\r\n    }\r\n\r\n    taskCheck(value) {\r\n        this.setState(prevState => {\r\n            const errors = prevState.taskRule.map(e => {\r\n                let err = e(value)\r\n                return err !== true ? err : null\r\n            })\r\n                .filter(function (e) {\r\n                    return e !== null\r\n                })\r\n                .map(e => <p className=\"p-0 m-0\">{e}</p>)\r\n            prevState.taskError = errors.length === 0 ? false : errors\r\n            return prevState\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"p-2 p-lg-4 col-12 col-lg-6\">\r\n                <Container className=\"p-3 custom-paper bg-light\">\r\n\r\n                    {\r\n                        this.props.started ?\r\n                            <Row>\r\n                                <Col className=\"d-flex align-items-end col-12 col-lg-3\">\r\n                                    <h5> Записаться </h5>\r\n                                </Col>\r\n                                <Col className=\"d-flex flex-row align-items-end col-12 col-lg-7\">\r\n                                    <Form.Label className=\"mr-3 d-none d-lg-block\"> Работа: </Form.Label>\r\n                                    <Form.Group controlId=\"exampleForm.ControlSelect2\" className=\"p-0 m-0 w-100\">\r\n                                        <Form.Control\r\n                                            isInvalid={!!this.state.taskError}\r\n                                            placeholder=\"Введите значение\"\r\n                                            className=\"custom-textform\"\r\n                                            type=\"text\"\r\n                                            value={this.state.taskValue}\r\n                                            onChange={this.handleOnChange}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {this.state.taskError}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col className=\"d-flex align-items-center justify-content-center mt-2 mt-lg-0\">\r\n                                    <Dropdown className={\"mr-2 mr-lg-3\"}>\r\n                                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\"\r\n                                                         className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                                            <Image src=\"static/img/plusBlack.svg\" className=\"big-icon\" width=\"28\"/>\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu className=\"drop-menu\">\r\n                                            <Popover.Title as=\"h4\"><b>Подтвердите действие</b></Popover.Title>\r\n                                            <Dropdown.Item className=\"drop-item mt-2\" onClick={this.joinQueue}>\r\n                                                Записаться <Image src=\"/static/img/accept.svg\" width=\"24\"/>\r\n                                            </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </Col>\r\n                            </Row>\r\n                            :\r\n                            <Row>\r\n                                <Col className=\"d-flex align-items-end col-12\">\r\n                                    <h5> Запись в очередь еще не доступна </h5>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                </Container>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default JoinQueueContainer;\r\nexport default connect(\r\n    state => ({\r\n        user:state.user\r\n    }),\r\n    dispatch => ({})\r\n)(JoinQueueContainer)\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Row, Container } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport ListStudentsDND from './ListStudentsDND'\r\nimport ListStudents from './ListStudents'\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport JoinQueueContainer from './JoinQueueContainer'\r\nimport socket from '../../../../WebSocket'\r\nimport { sign_out } from \"../../../../actions/user\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass StudentsListContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.updateStudentList = this.updateStudentList.bind(this)\r\n        this.joinQueue = this.joinQueue.bind(this)\r\n        this.state = {\r\n            studentList: [],\r\n            started: false\r\n        }\r\n    }\r\n\r\n    joinQueue(user_id, task) {\r\n        fetch('/joinqueue', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n            body: JSON.stringify({\r\n                user_id,\r\n                task,\r\n                queue_id: this.props.curr_id,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.success === \"false\")\r\n                    alert(data.causeOfError)\r\n            })\r\n            .then(this.updateStudentList)\r\n    }\r\n\r\n    updateStudentList() {\r\n        fetch('/queuestudents', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n            body: JSON.stringify({ id: this.props.curr_id })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({ studentList: data.list, started: data.started })\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        socket.emit(\"join\", { room: this.props.curr_id })\r\n        socket.on(\"queue updated\", (data) => {\r\n            this.updateStudentList()\r\n        })\r\n        this.updateStudentList()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        socket.emit(\"leave\", { room: this.props.curr_id })\r\n        socket.off(\"queue updated\")\r\n        if (prevProps.curr_id !== this.props.curr_id)\r\n            this.updateStudentList()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <JoinQueueContainer joinQueue={this.joinQueue} started={this.state.started} />\r\n                <Container className=\"p-2 p-lg-4 col-12\">\r\n                    <Container className=\"p-3 custom-paper bg-light col-12\">\r\n                        <Row>\r\n                            {this.props.user.role === \"student\" &&\r\n                                < ListStudents\r\n                                    studentList={this.state.studentList}\r\n                                    updateStudentList={this.updateStudentList}\r\n                                />}\r\n                            {(this.props.user.role === \"admin\" || this.props.user.role === \"teacher\") &&\r\n                                < ListStudentsDND\r\n                                    studentList={this.state.studentList}\r\n                                    updateStudentList={this.updateStudentList}\r\n                                />}\r\n                        </Row>\r\n\r\n                    </Container>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(StudentsListContainer);\r\n","import React, { Component } from 'react';\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport QueueInfoContainer from './QueueInfoContainer'\r\nimport StudentsListContainer from './StudentsListContainer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\nclass QueueContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Container className=\"p-3 col-12\">\r\n                <Row>\r\n                    <QueueInfoContainer curr_id={this.props.curr_id} />\r\n                    <StudentsListContainer curr_id={this.props.curr_id} />\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default QueueContainer;\r\n","\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport QueueContainer from './containers/QueueContainer'\r\n\r\nclass Queue extends Component {\r\n    render() {\r\n        return (\r\n            <QueueContainer curr_id={this.props.match.params.curr_id}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Queue;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Container, Image } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass ProfileInfoContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Container className=\"mb-3 p-0 col-12\">\r\n                <Container className=\"custom-paper p-3 bg-light\">\r\n                    <Row>\r\n                        <Col className=\"col-10 col-lg-8\">\r\n                            <Row>\r\n                                <Col className=\"col-12\">\r\n                                    <div className=\"mt-2 mb-2\">\r\n                                        <h3 className=\"mb-0\">{this.props.userInfo.name} {this.props.userInfo.surname}</h3>\r\n                                        <div className=\"text-muted\">{this.props.userInfo.login}</div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-2\">\r\n                                <Col className=\"col-12 d-flex\">\r\n                                    <div className=\"text-muted mr-2\">Роль:</div>\r\n                                    {this.props.userInfo.role}\r\n                                </Col>\r\n                                {\r\n                                    this.props.user.role === \"student\" &&\r\n                                    < Col className=\"col-12  d-flex\">\r\n                                        <div className=\"text-muted mr-2\">Группа:</div>\r\n                                        {this.props.userInfo.group}\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className=\"col-12  d-flex mb-1\">\r\n                                    <Image src=\"static/img/profile/github.png\" width=\"20\" height=\"20\" />\r\n                                    <div className=\"text-muted mr-2 ml-1\">Github:</div>\r\n                                    {this.props.userInfo.GitID}\r\n                                </Col>\r\n                                <Col className=\"col-12 d-flex\">\r\n                                    <Image src=\"static/img/profile/moodle.png\" className=\"\" width=\"24\" height=\"24\" />\r\n                                    <div className=\"text-muted mr-2\">oodle:</div>\r\n                                    {this.props.userInfo.moodleID}\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col className=\"col-2 col-lg-4\">\r\n                            <Image className=\"mt-2\" src=\"static/img/profile/avatar.png\" width=\"90%\" />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Container >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default ProfileInfoContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(ProfileInfoContainer)\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Col, Row, Container } from 'react-bootstrap'\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport QueuesFilterContainer from \"../../../containers/QueuesFilterContainer\"\r\nimport ListQueues from '../../../containers/ListQueues'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux'\r\nimport { sign_out } from \"../../../../actions/user\";\r\n\r\n\r\nclass ProfileListQueuesContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.sendConfig = this.sendConfig.bind(this)\r\n        this.state = {\r\n            queuesList: [],\r\n            queuesFlag: false,\r\n        }\r\n\r\n    }\r\n    handleClick() {\r\n        this.setState(({ queuesFlag }) => ({ queuesFlag: !queuesFlag }))\r\n    }\r\n\r\n    sendConfig(data) {\r\n        fetch('/profilequeues', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n\r\n            body: JSON.stringify({\r\n                ...data,\r\n                login: this.props.curr_login,\r\n                role: this.props.user.role,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({ queuesList: data })\r\n            })\r\n\r\n    }\r\n\r\n    deleteQueue(user_id, queue_id) {\r\n        fetch('/deletequeue', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n\r\n            body: JSON.stringify({\r\n                queue_id: queue_id,\r\n                user_id: user_id,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(this.componentDidMount)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.sendConfig({ teacher: '' })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container className=\"p-0\">\r\n                    <Container className=\"p-3 bg-light custom-paper\" >\r\n                        <Row>\r\n                            <Col>\r\n                                <h5 className=\"mb-1\">\r\n                                    Список активных очередей\r\n                                </h5>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"p-1 p-lg-3\">\r\n\r\n                            <QueuesFilterContainer\r\n                                discipline={true}\r\n                                sendConfig={this.sendConfig} />\r\n\r\n                            <ListQueues queuesList={this.state.queuesList} user={this.props.user} deleteQueue={this.deleteQueue} />\r\n                        </Row>\r\n\r\n                    </Container >\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default ProfileListQueuesContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(ProfileListQueuesContainer)","import React from 'react';\r\nimport { Container, Image, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { sign_out } from '../../../../actions/user';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction ProfileActionsContainer(props) {\r\n\r\n    return (\r\n        <Container className=\"mb-3 p-0 col-12\">\r\n            <Container className=\"custom-paper p-3 bg-light\">\r\n                <p className=\"h5 mb-3 text-center\">Панель управления</p>\r\n                <Row>\r\n                    <Col className=\"col-12 m-2 d-flex flex-column align-items-center\">\r\n                        <Link className=\"mr-3\" to=\"/enqueue\">\r\n                            <div className=\"btn custom-btn  p-2\">\r\n                                Cписок очередей\r\n                                <Image src=\"static/img/list.svg\" width=\"26\" className=\"ml-3 custom-icon\" />\r\n                            </div>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col className=\"col-12 m-2 d-flex flex-column align-items-center\">\r\n                        <Link className=\"mr-3\" to=\"/profile/editor\">\r\n                            <div className=\"btn custom-btn p-2\">\r\n                                Редактировать профиль\r\n                                <Image src=\"static/img/edit.svg\" width=\"26\" className=\"ml-3 custom-icon\" />\r\n                            </div>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col className=\"col-12 m-2 d-flex flex-column align-items-center\">\r\n                        <Link onClick={props.onSignOut} to=\"/auth/signin\">\r\n                            <div className=\"btn custom-btn  p-2\">\r\n                                Выйти\r\n                                <Image src=\"static/img/logout.svg\" width=\"26\" className=\"ml-3 custom-icon\" />\r\n                            </div>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(ProfileActionsContainer);\r\n","import React, { Component } from 'react';\r\nimport { Row, Container, Col } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ProfileInfoContainer from './ProfileInfoContainer'\r\nimport ProfileQueuesListContainer from './ProfileListQueuesContainer'\r\nimport ProfileActionsContainer from \"./ProfileActionsContainer\";\r\nimport headersDefault from \"../../../../fetchDefault\"\r\nimport { sign_out } from \"../../../../actions/user\";\r\n\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getInfo = this.getInfo.bind(this)\r\n        this.state = {\r\n            userInfo: {\r\n                login: \"\",\r\n                role: \"\",\r\n                name: \"\",\r\n                surname: \"\",\r\n                GitID: \"\",\r\n                moodleID: \"\",\r\n                group: \"\",\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getInfo() {\r\n        this.setState({ URLlogin: this.props.curr_login })\r\n        fetch(\"/profile\", {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n            body: JSON.stringify({ login: this.props.curr_login })\r\n        })\r\n            .then(data => data.json())\r\n            .then(res => {\r\n                console.log(res)\r\n                this.setState(prevState => {\r\n                    prevState.userInfo = res\r\n                    return prevState\r\n                })\r\n                if (res === \"NotFounded\") {\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getInfo()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.curr_login !== this.props.curr_login)\r\n            this.getInfo()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"col-12 mt-3 mt-lg-0 p-lg-4\">\r\n                <Row>\r\n                    <Col className=\"col-12 col-lg-4\">\r\n                        <ProfileInfoContainer\r\n                            userInfo={this.state.userInfo}\r\n                        />\r\n                        {(this.props.curr_login === this.props.user.login) &&\r\n                            <ProfileActionsContainer />}\r\n                    </Col>\r\n                    <Col className=\"col-12 col-lg-8\">\r\n                        {\r\n                            (this.props.curr_login === this.props.user.login || this.props.user.role === \"admin\" || this.props.user.role === \"student\") &&\r\n                            <ProfileQueuesListContainer curr_login={this.props.curr_login} />\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default ProfileContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(ProfileContainer)\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ProfileContainer from './containers/ProfileContainer'\r\n\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n        return (\r\n            <ProfileContainer curr_login={this.props.match.params.curr_login} />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Profile;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Container, Button, FormControl, InputGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux'\r\nimport { info_upd } from '../../../../actions/user';\r\nimport headersDefault from \"../../../../fetchDefault\"\r\n\r\n\r\n\r\nclass ProfileEditorContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.handleOnClick = this.handleOnClick.bind(this)\r\n        this.handleVerify = this.handleVerify.bind(this)\r\n        this.handleFullVerify = this.handleFullVerify.bind(this)\r\n\r\n        this.state = {\r\n            values: {\r\n                email: '',\r\n                login: '',\r\n                name: '',\r\n                surname: '',\r\n                GithubLogin: '',\r\n                MoodleLogin: '',\r\n            },\r\n            errors: {\r\n                login: false,\r\n                email: false,\r\n                name: false,\r\n                surname: false,\r\n                GithubLogin: false,\r\n                MoodleLogin: false,\r\n\r\n            },\r\n            rules: {\r\n                email: [\r\n                    v => !v || v.search(/^(([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6})$/g) !== -1 || \"Формат почты не верный\"\r\n                ],\r\n                login: [\r\n                    v => !v || v.length > 5 || \"Логин должен быть длиннее 5 символов.\",\r\n                    v => !v || v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"Логин может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => !v || v.search(/^[a-zA-Z]/) !== -1 || \"Логин может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                name: [\r\n                    v => !v || v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Имя может содержать только символы - а-я А-Я a-z A-Z\"\r\n                ],\r\n                surname: [\r\n                    v => !v || v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Фамилия может содержать только символы - а-я А-Я a-z A-Z\"\r\n                ],\r\n                GithubLogin: [\r\n                    v => !v || v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"GithubLogin может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => !v || v.search(/^[a-zA-Z]/) !== -1 || \"GithubLogin может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                MoodleLogin: [\r\n                    v => !v || v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"MoodleLogin может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => !v || v.search(/^[a-zA-Z]/) !== -1 || \"MoodleLogin может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n            },\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleOnChange(event) {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState(prevState => {\r\n            prevState.values[name] = value\r\n            return prevState\r\n        })\r\n        this.handleVerify(name, value)\r\n    }\r\n\r\n    handleVerify(name, value) {\r\n        this.setState(prevState => {\r\n            const errors = prevState.rules[name].map(e => {\r\n                let err = e(value)\r\n                return err !== true ? err : null\r\n            })\r\n                .filter(function (e) {\r\n                    return e !== null\r\n                })\r\n                .map(e => <p className=\"p-0 m-0\">{e}</p>)\r\n            prevState.errors[name] = errors.length === 0 ? false : errors\r\n            return prevState\r\n        })\r\n    }\r\n    async handleFullVerify() {\r\n\r\n        await Object.entries(this.state.values).forEach(([key, value]) => {\r\n            this.handleVerify(key, value)\r\n        })\r\n        console.log(JSON.stringify(this.state.errors))\r\n        return Object.values(this.state.errors).every(e => !e)\r\n    }\r\n    handleOnClick() {\r\n        this.handleFullVerify()\r\n            .then(data => {\r\n                if (data)\r\n                    fetch(\"/profile/editor/updateinfo\", {\r\n                        method: 'POST',\r\n                        headers: headersDefault(),\r\n\r\n                        body: JSON.stringify({\r\n                            user_id: this.props.user.id,\r\n                            newData: {\r\n                                ...this.state.values\r\n                            }\r\n                        })\r\n                    })\r\n                        .then(data => data.json())\r\n                        .then(data => {\r\n                            if (data.success === true) {\r\n                                this.props.onInfoUpd(data.newInfo)\r\n                            }\r\n                            console.log(data)\r\n                        })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"m-3 p-0 col-12\">\r\n                <Container className=\"custom-paper p-3 bg-light\">\r\n                    <Col className=\"col-12 m-2 d-flex flex-column align-items-center\">\r\n                        <h5> Редактировать профиль</h5>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <p className=\"mb-0\">Сейчас Имя и Фамилия: <b> {this.props.userInfo.name} {this.props.userInfo.surname}</b></p>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новое Имя</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.name}\r\n                                    name={\"name\"}\r\n                                    value={this.state.values.name}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Новое имя\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.name}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новая Фамилия</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.surname}\r\n                                    name={\"surname\"}\r\n                                    value={this.state.values.surname}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Новая фамилия\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.surname}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <p className=\"mb-0\">Сейчас Почта: <b>{this.props.userInfo.email}</b></p>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новая Почта</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.email}\r\n                                    name={\"email\"}\r\n                                    value={this.state.values.email}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"email\"\r\n                                    placeholder=\"Новая почта\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.email}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <p className=\"mb-0\">Сейчас Логин: <b>{this.props.userInfo.login}</b> </p>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новый Логин</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.login}\r\n                                    name={\"login\"}\r\n                                    value={this.state.values.login}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Новый логин\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.login}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <p className=\"mb-0\">Сейчас GithubLogin: <b>{this.props.userInfo.GithubLogin}</b></p>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новый GithubLogin</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.GithubLogin}\r\n                                    name={\"GithubLogin\"}\r\n                                    value={this.state.values.GithubLogin}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Новый GithubLogin\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.GithubLogin}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <p className=\"mb-0\">Сейчас MoodleLogin: <b> {this.props.userInfo.MoodleLogin}</b> </p>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новый MoodleLogin</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.MoodleLogin}\r\n                                    name={\"MoodleLogin\"}\r\n                                    value={this.state.values.MoodleLogin}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Новый MoodleLogin\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.MoodleLogin}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                        </Row>\r\n                    </Col>\r\n                    <Link\r\n                        className=\"btn icon-btn mr-3\"\r\n                        to={`/profile/${this.props.user.login}`}>\r\n                        <Button\r\n                            variant=\"danger\"\r\n                            className=\"custom-btn mr-3 mb-2\"\r\n                        >\r\n                            Отмена\r\n                        </Button>\r\n                    </Link>\r\n                    <Link\r\n                        className=\"btn icon-btn mr-3\"\r\n                        to={`/profile/${this.props.user.login}`}>\r\n                        <Button\r\n                            variant=\"success\"\r\n                            className=\"custom-btn mr-3 mb-2\"\r\n                            onClick={this.handleOnClick}\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                    </Link>\r\n\r\n                </Container>\r\n            </Container >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default ProfileEditorContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onInfoUpd: (data) => {\r\n            dispatch(info_upd(data))\r\n        }\r\n    })\r\n)(ProfileEditorContainer)\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ProfileEditorForm from './ProfileEditorForm'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux'\r\nimport headersDefault from \"../../../../fetchDefault\"\r\n\r\n\r\nclass ProfileEditorContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.getInfo = this.getInfo.bind(this)\r\n        this.state = {\r\n            userInfo: {}\r\n        }\r\n    }\r\n\r\n    getInfo() {\r\n        fetch(\"/profile/editor/needinfo\", {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n\r\n            body: JSON.stringify({\r\n                user_id: this.props.user.id,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                if (data.error)\r\n                    console.error(data.error)\r\n                else {\r\n                    this.setState({ userInfo: data.userInfo })\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getInfo()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ProfileEditorForm userInfo={this.state.userInfo} />\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default ProfileEditorContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({})\r\n)(ProfileEditorContainer)\r\n\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ProfileEditorContainer from './containers/ProfileEditorContainer'\r\n\r\n\r\nclass ProfileEditor extends Component {\r\n    render() {\r\n        return (\r\n            <ProfileEditorContainer />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileEditor;\r\n\r\n","\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { sign_out } from '../../actions/user';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, Image, Nav } from 'react-bootstrap'\r\n\r\nimport \"../styles/styles.css\"\r\n// import NavDropdown from 'react-bootstrap/NavDropdown'\r\n\r\n\r\n\r\nfunction CustomNavbar(props) {\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" variant=\"light\" className=\"custom-nav\">\r\n            <Link to=\"/\" >\r\n                <Navbar.Brand className=\"p-0\">\r\n                    <Image src=\"static/img/logo.png\" width=\"45\" height=\"45\" className=\"p-0 mr-3\" />\r\n                    <b className=\"custom-logoname mr-1\">El Queue</b>\r\n                </Navbar.Brand>\r\n            </Link>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                {\r\n                    props.user.isAuth ?\r\n                        <>\r\n                            <Nav className=\"mr-auto\">\r\n                                <Nav.Link className=\"mr-2\" href=\"#/\">Очереди</Nav.Link>\r\n                                {props.user.role !== \"student\" && <Nav.Link className=\"mr-2\" href=\"#/addqueue\">Создать очередь</Nav.Link>}\r\n                                {props.user.role === \"admin\" && <Nav.Link className=\"mr-2\" href=\"#/admindb\">Администрирование</Nav.Link>}\r\n                            </Nav>\r\n                            <Nav>\r\n                                <Nav.Link href={`#/profile/${props.user.login}`}>Профиль: {props.user.login}</Nav.Link>\r\n                            </Nav>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Nav className=\"mr-auto\" />\r\n                            <Nav>\r\n                                <Nav.Link href=\"#/auth/signin\">Вход</Nav.Link>\r\n                                <Nav.Link href=\"#/auth/signup\">Регистрация</Nav.Link>\r\n                            </Nav>\r\n                        </>\r\n                }\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\n\r\n// export default CustomNavbar;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(CustomNavbar)","import { Col, Container, Form, Button } from 'react-bootstrap'\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport { sign_in } from '../../../../actions/user';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import socket from '../../../WebSocket'\r\n\r\n\r\nclass SignInForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleFullVerify = this.handleFullVerify.bind(this)\r\n        this.handleVerify = this.handleVerify.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.state = {\r\n            values: {\r\n                login: '',\r\n                password: '',\r\n            },\r\n            errors: {\r\n                login: false,\r\n                password: false,\r\n\r\n            },\r\n            rules: {\r\n                login: [\r\n                    v => !!v || \"Введите логин.\",\r\n                ],\r\n                password: [\r\n                    v => !!v || \"Введите пароль.\",\r\n                ],\r\n\r\n            }\r\n        }\r\n    }\r\n    handleOnChange(event) {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState(prevState => {\r\n            prevState.values[name] = value\r\n            return prevState\r\n        })\r\n        this.handleVerify(name, value)\r\n    }\r\n    async handleFullVerify() {\r\n\r\n        await Object.entries(this.state.values).forEach(([key, value]) => {\r\n            if (key === \"secretKey\")\r\n                if (this.state.values.role === \"Студент\")\r\n                    return\r\n            if (key === \"group\")\r\n                if (this.state.values.role !== \"Студент\")\r\n                    return\r\n\r\n            this.handleVerify(key, value)\r\n        })\r\n        console.log(JSON.stringify(this.state.errors))\r\n        return Object.values(this.state.errors).every(e => !e)\r\n    }\r\n\r\n    handleVerify(name, value) {\r\n        this.setState(prevState => {\r\n            const errors = prevState.rules[name].map(e => {\r\n                let err = e(value)\r\n                return err !== true ? err : null\r\n            })\r\n                .filter(function (e) {\r\n                    return e !== null\r\n                })\r\n                .map(e => <p className=\"p-0 m-0\">{e}</p>)\r\n            prevState.errors[name] = errors.length === 0 ? false : errors\r\n            return prevState\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        this.handleFullVerify()\r\n            .then((data) => {\r\n                if (data) {\r\n                    fetch('/signin', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            Authorization:\"JWT \" + localStorage.getItem(\"accesstoken\"),\r\n                            'Content-Type':'application/json;charset=utf-8'\r\n                        },\r\n                        body: JSON.stringify(this.state.values)\r\n                    })\r\n                        .then(data => data.json())\r\n                        .then(data => {\r\n                            console.log(data)\r\n                            if (data.isAuth) {\r\n                                this.props.onSignIn(data)\r\n                                window.location.hash = \"#/\"\r\n                            }\r\n                            else {\r\n                                alert(\"Неверный логин или пароль\")\r\n                            }\r\n\r\n                        })\r\n                    event.preventDefault();\r\n                }\r\n            })\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"col-12 col-lg-6 p-3 \">\r\n                <Container className=\"custom-paper bg-light p-3\">\r\n                    <p className=\"h5 mb-3 text-center\">Авторизация</p>\r\n                    <Col>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"formBasicLogin\">\r\n                                <Form.Label>Логин</Form.Label>\r\n                                <Form.Control\r\n                                    isInvalid={!!this.state.errors.login}\r\n                                    name={\"login\"}\r\n                                    value={this.state.values.login}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите логин\"\r\n                                    className=\"custom-textform\"\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.errors.login}\r\n                                </Form.Control.Feedback>\r\n                                <Form.Text className=\"text-muted\">\r\n                                    Ваш логин не будет передан третьим лицам.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Пароль</Form.Label>\r\n                                <Form.Control\r\n                                    isInvalid={!!this.state.errors.password}\r\n                                    name={\"password\"}\r\n                                    value={this.state.values.password}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Введите пароль\"\r\n                                    className=\"custom-textform\"\r\n                                    ref={(input) => this.passwordInput = input}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.errors.password}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" className=\"custom-btn mr-3 mb-2\">\r\n                                Войти\r\n                            </Button>\r\n                            <Link className=\"btn custom-btn icon-btn mr-3\" to=\"/auth/signup\">\r\n                                <Button variant=\"secondary\" className=\"custom-btn mr-3 mb-2\">\r\n                                    Регистрация\r\n                                </Button>\r\n                            </Link>\r\n                        </Form>\r\n                    </Col>\r\n                </Container>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default SignInForm;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignIn: (data) => {\r\n            dispatch(sign_in(data))\r\n        }\r\n    })\r\n)(SignInForm)\r\n","import { Container, Button, Image } from 'react-bootstrap'\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import socket from '../../../WebSocket'\r\n\r\n\r\nclass OAuthContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleGitLogIn = this.handleGitLogIn.bind(this)\r\n        this.state = {\r\n        }\r\n    }\r\n    handleGitLogIn() {\r\n        fetch('/githubauth', { mode: \"no-cors\" })\r\n            .then(data => {\r\n                if (data.status === 302)\r\n                    return data.json()\r\n            })\r\n            .then(data => {\r\n                document.location = data.auth_url;\r\n            })\r\n        // not completed\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"col-12 col-lg-3 p-3 \" >\r\n                <Container className=\"p-3 d-flex justify-content-center\">\r\n                    <Button className=\"custom-btn bg-white text-secondary custom-block pr-3 pl-3\" onClick={this.handleGitLogIn}>\r\n                        <Image src=\"static/img/profile/github.png\" className=\"mr-2\" width=\"30\" height=\"30\" />\r\n                        Войти через GitHub\r\n                    </Button>\r\n                </Container>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default OAuthContainer;\r\n","\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SignInForm from './SignInForm'\r\nimport OAuthContainer from '../oauth/OAuthContainer'\r\n\r\n\r\nclass SignIn extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <SignInForm />\r\n                <OAuthContainer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignIn;\r\n","import {Col, Container, Form, Button} from 'react-bootstrap'\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import socket from '../../../WebSocket'\r\n\r\n\r\nclass SignUpForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleFullVerify = this.handleFullVerify.bind(this)\r\n        this.handleVerify = this.handleVerify.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.state = {\r\n            values:{\r\n                login:'',\r\n                email:'',\r\n                password1:'',\r\n                password2:'',\r\n                name:'',\r\n                surname:'',\r\n                role:(props.curr_key && props.curr_key.match(/^curr_key/)) ? 'Преподаватель' : 'Студент',\r\n                group:'',\r\n                secretKey:(props.curr_key && props.curr_key.match(/^curr_key/)) ? props.curr_key.replace(/curr_key/, '') : '',\r\n                GithubLogin:'',\r\n                MoodleLogin:'',\r\n                recaptcha:'',\r\n            },\r\n            errors:{\r\n                login:false,\r\n                email:false,\r\n                password1:false,\r\n                password2:false,\r\n                name:false,\r\n                surname:false,\r\n                role:false,\r\n                group:false,\r\n                secretKey:false,\r\n                GithubLogin:false,\r\n                MoodleLogin:false,\r\n                recaptcha:false,\r\n            },\r\n            rules:{\r\n                email:[v => v.search(/^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/g) !== -1 || \"Формат почты не верный\"],\r\n                login:[\r\n                    v => !!v || \"Введите логин.\",\r\n                    v => v.length > 5 || \"Логин должен быть длиннее 5 символов.\",\r\n                    v => v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"Логин может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => v.search(/^[a-zA-Z]/) !== -1 || \"Логин может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                password1:[\r\n                    v => !!v || \"Введите пароль.\",\r\n                    v => v.length > 8 || \"Пароль должен быть длиннее 8 символов.\",\r\n                    v => v.search(/(?=.*[0-9])/g) !== -1 || \"Пароль должен содержать хотя бы одну цифру.\",\r\n                    v => v.search(/(?=.*[!@#$%^&*])/g) !== -1 || \"Пароль должен содержать хотя бы один специмвол (!@#$%^&*).\",\r\n                    v => v.search(/(?=.*[a-z])/g) !== -1 || \"Пароль должен содержать хотя бы одну латинскую букву в нижнем регистре.\",\r\n                    v => v.search(/(?=.*[A-Z])/g) !== -1 || \"Пароль должен содержать хотя бы одну латинскую букву в верхнем регистре.\",\r\n                    v => v.search(/[!@#$%^&*0-9a-zA-Z]/g) !== -1 || \"Пароль может содержать только !@#$%^&*0-9a-zA-Z.\"],\r\n                password2:[\r\n                    v => !!v || \"Введите пароль.\",\r\n                    v => v === this.password1Input.value || \"Пароли не соовпадают.\"],\r\n                name:[\r\n                    v => !!v || \"Введите имя.\",\r\n                    v => v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Имя может содержать только символы - а-я А-Я a-z A-Z\"],\r\n                surname:[\r\n                    v => v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Фамилия может содержать только символы - а-я А-Я a-z A-Z\",\r\n                    v => !!v || \"Введите имя.\"],\r\n                role:[v => !!v || \"Выберите тип.\"],\r\n                group:[\r\n                    v => !!v || \"Выберите группу.\",\r\n                    v => v.search(/^[0-9]{4}$/) !== -1 || \"Группа должна состоять только из 4 цифр\",\r\n\r\n                ],\r\n                secretKey:[v => !!v || \"Введите секретный ключ.\"],\r\n                GithubLogin:[\r\n                    v => !!v || \"Введите GithubLogin.\",\r\n                    v => v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"GithubLogin может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => v.search(/^[a-zA-Z]/) !== -1 || \"GithubLogin может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                MoodleLogin:[\r\n                    v => !!v || \"Введите MoodleLogin.\",\r\n                    v => v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"MoodleLogin может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => v.search(/^[a-zA-Z]/) !== -1 || \"MoodleLogin может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                recaptcha:[v => !!v || \"Введите recaptcha.\"],\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState(prevState => {\r\n            prevState.values[name] = value\r\n            return prevState\r\n        })\r\n        this.handleVerify(name, value)\r\n    }\r\n\r\n    async handleFullVerify() {\r\n\r\n        await Object.entries(this.state.values).forEach(([key, value]) => {\r\n            if (key === \"secretKey\")\r\n                if (this.state.values.role === \"Студент\")\r\n                    return\r\n            if (key === \"group\")\r\n                if (this.state.values.role !== \"Студент\")\r\n                    return\r\n\r\n            this.handleVerify(key, value)\r\n        })\r\n        console.log(JSON.stringify(this.state.errors))\r\n        return Object.values(this.state.errors).every(e => !e)\r\n    }\r\n\r\n    handleVerify(name, value) {\r\n\r\n        this.setState(prevState => {\r\n            const errors = prevState.rules[name].map(e => {\r\n                let err = e(value)\r\n                return err !== true ? err : null\r\n            })\r\n                .filter(function (e) {\r\n                    return e !== null\r\n                })\r\n                .map(e => <p className=\"p-0 m-0\">{e}</p>)\r\n            prevState.errors[name] = errors.length === 0 ? false : errors\r\n            return prevState\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        console.log(this.state.values)\r\n        this.handleFullVerify()\r\n            .then((data) => {\r\n                if (data) {\r\n                    fetch('/signup', {\r\n                        method:'POST',\r\n                        headers:headersDefault(),\r\n\r\n                        body:JSON.stringify({\r\n                            ...this.state.values,\r\n                            regType:\"USUAL\"\r\n                        })\r\n                    })\r\n                        .then(data => data.json())\r\n                        .then(data => {\r\n                            console.log(data)\r\n                            if (data.isReg) {\r\n                                window.location.hash = \"#/auth/signin\"\r\n                            } else {\r\n                                alert(data.causeOfError)\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"col-12 col-lg-6 p-3 \">\r\n                <Container className=\"custom-paper bg-light p-3\">\r\n                    <Col>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridLogin\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Логин</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.login}\r\n                                        name={\"login\"}\r\n                                        value={this.state.values.login}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите логин\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.login}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Почта</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.email}\r\n                                        name={\"email\"}\r\n                                        value={this.state.values.email}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"email\"\r\n                                        placeholder=\"Введите почту\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.email}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridPassword1\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Пароль</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.password1}\r\n                                        name={\"password1\"}\r\n                                        value={this.state.values.password1}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Введите пароль\"\r\n                                        className=\"custom-textform\"\r\n                                        ref={(input) => this.password1Input = input}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.password1}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridPassword2\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Повторить пароль</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.password2}\r\n                                        name={\"password2\"}\r\n                                        value={this.state.values.password2}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Повторите пароль\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.password2}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridName\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Имя</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.name}\r\n                                        name={\"name\"}\r\n                                        value={this.state.values.name}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите полное имя\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.name}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridSurname\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Фамилия</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.surname}\r\n                                        name={\"surname\"}\r\n                                        value={this.state.values.surname}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите фамилию\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.surname}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridRole\">\r\n                                    <Form.Label>Тип пользователя</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.role}\r\n                                        name={\"role\"}\r\n                                        value={this.state.values.role}\r\n                                        as=\"select\"\r\n                                        className=\"custom-select\"\r\n                                        onChange={event => {\r\n                                            const curr_role = event.target.value\r\n                                            this.setState(prevState => {\r\n                                                if (!([\"Преподаватель\", \"Администратор\"].includes(prevState.role) &&\r\n                                                    [\"Преподаватель\", \"Администратор\"].includes(curr_role))) {\r\n                                                    prevState.errors.secretKey = false\r\n                                                    prevState.errors.group = false\r\n                                                }\r\n                                                return prevState\r\n                                            })\r\n                                            this.handleOnChange(event)\r\n\r\n                                        }}\r\n                                    >\r\n                                        <option className=\"custom-option\">Студент</option>\r\n                                        <option className=\"custom-option\">Преподаватель</option>\r\n                                        <option className=\"custom-option\">Администратор</option>\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.role}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            {\r\n                                this.state.values.role === \"Студент\" &&\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridGroup\">\r\n                                        <Form.Label>Группа</Form.Label>\r\n                                        <Form.Control\r\n                                            isInvalid={!!this.state.errors.group}\r\n                                            name={\"group\"}\r\n                                            value={this.state.values.group}\r\n                                            onChange={this.handleOnChange}\r\n                                            className=\"custom-textform\"\r\n                                        >\r\n                                        </Form.Control>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {this.state.errors.group}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            }\r\n                            < Form.Group controlId=\"formGridSecretKey\">\r\n                                <Form.Label>Секретный код</Form.Label>\r\n                                <Form.Control\r\n                                    isInvalid={!!this.state.errors.secretKey}\r\n                                    name={\"secretKey\"}\r\n                                    value={this.state.values.secretKey}\r\n                                    onChange={this.handleOnChange}\r\n                                    placeholder=\"Введите секретный код\"\r\n                                    className=\"custom-textform\"\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.errors.secretKey}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridGithubLogin\">\r\n                                    <Form.Label>GithubLogin</Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"custom-textform\"\r\n                                        placeholder=\"Введите GithubLogin\"\r\n                                        isInvalid={!!this.state.errors.GithubLogin}\r\n                                        name={\"GithubLogin\"}\r\n                                        value={this.state.values.GithubLogin}\r\n                                        onChange={this.handleOnChange}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.GithubLogin}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridMoodleLogin\">\r\n                                    <Form.Label>MoodleLogin</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.MoodleLogin}\r\n                                        name={\"MoodleLogin\"}\r\n                                        value={this.state.values.MoodleLogin}\r\n                                        onChange={this.handleOnChange}\r\n                                        placeholder=\"Введите MoodleLogin\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.MoodleLogin}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row className=\"mb-3\">\r\n\r\n                                <ReCAPTCHA\r\n                                    sitekey=\"6LctlLAZAAAAAHE2Zj-yKvioQcPNa1ZBOhqujNdK\"\r\n                                    onChange={(value) => {\r\n                                        this.setState(prevState => {\r\n                                            prevState.values.recaptcha = value\r\n                                            return prevState\r\n                                        })\r\n                                        this.handleVerify(\"recaptcha\", value)\r\n                                    }}\r\n                                />\r\n                                {this.state.errors.recaptcha && <label>{this.state.errors.recaptcha}</label>}\r\n\r\n\r\n                            </Form.Row>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                type=\"submit\"\r\n                                className=\"custom-btn mr-3 mb-2\"\r\n                            >\r\n                                Зарегистрироваться\r\n                            </Button>\r\n                            <Link\r\n                                className=\"mr-3\"\r\n                                to=\"/auth/signin\">\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    className=\"custom-btn mr-3 mb-2\"\r\n                                >\r\n                                    Вход\r\n                                </Button>\r\n                            </Link>\r\n                        </Form>\r\n                    </Col>\r\n                </Container>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignUpForm;\r\n","import {Col, Container, Form, Button} from 'react-bootstrap'\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import socket from '../../../WebSocket'\r\n\r\n\r\nclass SignUpGitForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleFullVerify = this.handleFullVerify.bind(this)\r\n        this.handleVerify = this.handleVerify.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.state = {\r\n            values:{\r\n                email:props.email,\r\n                login:'',\r\n                name:'',\r\n                surname:'',\r\n                role:(props.curr_key && props.curr_key.match(/^curr_key/)) ? 'Преподаватель' : 'Студент',\r\n                group:'',\r\n                secretKey:(props.curr_key && props.curr_key.match(/^curr_key/)) ? props.curr_key.replace(/curr_key/, '') : '',\r\n                GithubLogin:props.gitLogin,\r\n                GithubId:props.gitId,\r\n                MoodleLogin:'',\r\n                recaptcha:'',\r\n            },\r\n            errors:{\r\n                email:false,\r\n                login:false,\r\n                name:false,\r\n                surname:false,\r\n                role:false,\r\n                group:false,\r\n                secretKey:false,\r\n                MoodleLogin:false,\r\n                recaptcha:false,\r\n            },\r\n            rules:{\r\n                email:[v => v.search(/^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/g) !== -1 || \"Формат почты не верный\"],\r\n                login:[\r\n                    v => !!v || \"Введите логин.\",\r\n                    v => v.length > 5 || \"Логин должен быть длиннее 5 символов.\",\r\n                    v => v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"Логин может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => v.search(/^[a-zA-Z]/) !== -1 || \"Логин может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                name:[\r\n                    v => !!v || \"Введите имя.\",\r\n                    v => v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Имя может содержать только символы - а-я А-Я a-z A-Z\"],\r\n                surname:[\r\n                    v => v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Фамилия может содержать только символы - а-я А-Я a-z A-Z\",\r\n                    v => !!v || \"Введите имя.\"],\r\n                role:[v => !!v || \"Выберите тип.\"],\r\n                group:[v => !!v || \"Выберите группу.\"],\r\n                secretKey:[v => !!v || \"Введите секретный ключ.\"],\r\n                MoodleLogin:[\r\n                    v => !!v || \"Введите MoodleLogin.\",\r\n                    v => v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"MoodleLogin может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => v.search(/^[a-zA-Z]/) !== -1 || \"MoodleLogin может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                recaptcha:[v => !!v || \"Введите recaptcha.\"],\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        console.log(event)\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState(prevState => {\r\n            prevState.values[name] = value\r\n            return prevState\r\n        })\r\n        this.handleVerify(name, value)\r\n    }\r\n\r\n    async handleFullVerify() {\r\n\r\n        await Object.keys(this.state.errors).forEach(key => {\r\n            if (key === \"secretKey\")\r\n                if (this.state.values.role === \"Студент\")\r\n                    return\r\n            if (key === \"group\")\r\n                if (this.state.values.role !== \"Студент\")\r\n                    return\r\n\r\n            this.handleVerify(key, this.state.values[key])\r\n        })\r\n        console.log(JSON.stringify(this.state.errors))\r\n        return Object.values(this.state.errors).every(e => !e)\r\n    }\r\n\r\n    handleVerify(name, value) {\r\n\r\n        this.setState(prevState => {\r\n            const errors = prevState.rules[name].map(e => {\r\n                let err = e(value)\r\n                return err !== true ? err : null\r\n            })\r\n                .filter(function (e) {\r\n                    return e !== null\r\n                })\r\n                .map(e => <p className=\"p-0 m-0\">{e}</p>)\r\n            prevState.errors[name] = errors.length === 0 ? false : errors\r\n            return prevState\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        console.log(this.state.values)\r\n        this.handleFullVerify()\r\n            .then((data) => {\r\n                if (data) {\r\n                    fetch('/signup', {\r\n                        method:'POST',\r\n                        headers:headersDefault(),\r\n\r\n                        body:JSON.stringify({\r\n                            ...this.state.values,\r\n                            regType:\"GIT\"\r\n                        })\r\n                    })\r\n                        .then(data => data.json())\r\n                        .then(data => {\r\n                            console.log(data)\r\n                            if (data.isReg) {\r\n                                window.location.hash = \"#/auth/signin\"\r\n                            } else {\r\n                                alert(data.causeOfError)\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"col-12 col-lg-6 p-3 \">\r\n                <Container className=\"custom-paper bg-light p-3\">\r\n                    <Col>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridLogin\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Логин</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.login}\r\n                                        name={\"login\"}\r\n                                        value={this.state.values.login}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите логин\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.login}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Почта</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.email}\r\n                                        name={\"email\"}\r\n                                        value={this.state.values.email}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"email\"\r\n                                        placeholder=\"Введите почту\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.email}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridName\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Имя</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.name}\r\n                                        name={\"name\"}\r\n                                        value={this.state.values.name}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите полное имя\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.name}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridSurname\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Фамилия</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.surname}\r\n                                        name={\"surname\"}\r\n                                        value={this.state.values.surname}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите фамилию\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.surname}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridRole\">\r\n                                    <Form.Label>Тип пользователя</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.role}\r\n                                        name={\"role\"}\r\n                                        value={this.state.values.role}\r\n                                        as=\"select\"\r\n                                        className=\"custom-select\"\r\n                                        onChange={event => {\r\n                                            const curr_role = event.target.value\r\n                                            this.setState(prevState => {\r\n                                                if (!([\"Преподаватель\", \"Администратор\"].includes(prevState.role) &&\r\n                                                    [\"Преподаватель\", \"Администратор\"].includes(curr_role))) {\r\n                                                    prevState.errors.secretKey = false\r\n                                                    prevState.errors.group = false\r\n                                                }\r\n                                                return prevState\r\n                                            })\r\n                                            this.handleOnChange(event)\r\n\r\n                                        }}\r\n                                    >\r\n                                        <option className=\"custom-option\">Студент</option>\r\n                                        <option className=\"custom-option\">Преподаватель</option>\r\n                                        <option className=\"custom-option\">Администратор</option>\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.role}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            {\r\n                                this.state.values.role === \"Студент\" &&\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridGroup\">\r\n                                        <Form.Label>Группа</Form.Label>\r\n                                        <Form.Control\r\n                                            isInvalid={!!this.state.errors.group}\r\n                                            name={\"group\"}\r\n                                            value={this.state.values.group}\r\n                                            onChange={this.handleOnChange}\r\n                                            className=\"custom-textform\"\r\n                                        >\r\n                                        </Form.Control>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {this.state.errors.group}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            }\r\n                            <Form.Group controlId=\"formGridSecretKey\">\r\n                                <Form.Label>Секретный код</Form.Label>\r\n                                <Form.Control\r\n                                    isInvalid={!!this.state.errors.secretKey}\r\n                                    name={\"secretKey\"}\r\n                                    value={this.state.values.secretKey}\r\n                                    onChange={this.handleOnChange}\r\n                                    placeholder=\"Введите секретный код\"\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.errors.secretKey}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridMoodleLogin\">\r\n                                    <Form.Label>MoodleLogin</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.MoodleLogin}\r\n                                        name={\"MoodleLogin\"}\r\n                                        value={this.state.values.MoodleLogin}\r\n                                        onChange={this.handleOnChange}\r\n                                        placeholder=\"Введите MoodleLogin\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.MoodleLogin}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n\r\n                                <ReCAPTCHA\r\n                                    sitekey=\"6LctlLAZAAAAAHE2Zj-yKvioQcPNa1ZBOhqujNdK\"\r\n                                    onChange={(value) => {\r\n                                        this.setState(prevState => {\r\n                                            prevState.values.recaptcha = value\r\n                                            return prevState\r\n                                        })\r\n                                        this.handleVerify(\"recaptcha\", value)\r\n                                    }}\r\n                                />\r\n                                {this.state.errors.recaptcha && <label>{this.state.errors.recaptcha}</label>}\r\n\r\n\r\n                            </Form.Row>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                type=\"submit\"\r\n                                className=\"custom-btn mr-3 mb-2\"\r\n                            >\r\n                                Зарегистрироваться\r\n                            </Button>\r\n                            <Link\r\n                                className=\"btn icon-btn mr-3\"\r\n                                to=\"/auth/signin\">\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    className=\"custom-btn mr-3 mb-2\"\r\n                                >\r\n                                    Вход\r\n                                </Button>\r\n                            </Link>\r\n                        </Form>\r\n                    </Col>\r\n                </Container>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignUpGitForm;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Spinner, Container, Alert } from 'react-bootstrap'\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport { sign_in } from '../../../../actions/user';\r\nimport { connect } from 'react-redux'\r\nimport SignUpForm from './SignUpForm'\r\nimport SignUpGitForm from './SignUpGitForm'\r\nimport OAuthContainer from '../oauth/OAuthContainer'\r\n\r\n\r\n// import socket from '../../../WebSocket'\r\n\r\n\r\nclass SignUpContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleGitChecker = this.handleGitChecker.bind(this)\r\n        this.state = {\r\n            currForm:\r\n                <>\r\n                    <SignUpForm curr_key={this.props.curr_key} />\r\n                    <OAuthContainer />\r\n                </>\r\n        }\r\n    }\r\n\r\n    handleGitChecker() {\r\n\r\n        let queryString = window.location.search\r\n        let urlParams = new URLSearchParams(queryString);\r\n        let code = urlParams.get(\"code\")\r\n        if (code) {\r\n            this.setState({\r\n                currForm:\r\n                    <Container className=\"d-flex justify-content-center m-5 p-5\">\r\n                        <Spinner animation=\"border\" />\r\n                    </Container>\r\n            })\r\n            window.history.pushState({}, null, '/' + window.location.hash)\r\n            fetch('/authenticate', {\r\n                method: \"POST\",\r\n                headers: headersDefault(),\r\n\r\n                body: JSON.stringify({ code })\r\n            })\r\n                .then(data => data.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    if (data.error) {\r\n                        console.error(data.error)\r\n                        this.setState({\r\n                            currForm:\r\n                                <Container className=\"col-12 col-lg-6 p-3 \">\r\n                                    <Alert variant=\"danger\">\r\n                                        Ошибка: {data.error}. Нажмите\r\n                                        <Alert.Link href=\"#/auth/signin\"> тут </Alert.Link>\r\n                                        чтобы перейти на страницу авторизации.\r\n                                    </Alert>\r\n                                </Container>\r\n                        })\r\n                    }\r\n                    else if (data.needReg)\r\n                        this.setState({\r\n                            currForm: <SignUpGitForm\r\n                                email={data.email}\r\n                                gitLogin={data.gitLogin}\r\n                                gitId={data.gitId}\r\n                            />\r\n                        })\r\n                    else if (data.isAuth) {\r\n                        delete data.needReg\r\n                        fetch('/signin', {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                Authorization:\"JWT \" + localStorage.getItem(\"accesstoken\"),\r\n                                'Content-Type':'application/json;charset=utf-8'\r\n                            },\r\n                            body: JSON.stringify({\r\n                                login:data.login,\r\n                                password:\"github\"\r\n                            })\r\n                        })\r\n                            .then(data => data.json())\r\n                            .then(data => {\r\n                                console.log(\"SSS\" + data)\r\n                                if (data.isAuth) {\r\n                                    this.props.onSignIn(data)\r\n                                    window.location.hash = \"#/\"\r\n                                }\r\n                                else {\r\n                                    alert(data.causeOfError)\r\n                                }\r\n                            })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGitChecker();\r\n    }\r\n    render() {\r\n        return this.state.currForm\r\n    }\r\n}\r\n// export default SignUpContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignIn: (data) => {\r\n            dispatch(sign_in(data))\r\n        }\r\n    })\r\n)(SignUpContainer)\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SignUpContainer from './SignUpContainer'\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n    render() {\r\n        console.log(\"111111111111\")\r\n        return (\r\n            <>\r\n                <SignUpContainer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp;\r\n","import React, {useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Row, Col, Toast, Image} from 'react-bootstrap'\r\n\r\nimport \"../styles/styles.css\"\r\n\r\n\r\nfunction Notification(props) {\r\n    const [show, setShow] = useState(true);\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => {\r\n                    setShow(false)\r\n                }}\r\n                       className=\"custom-paper m-3\"\r\n                       show={show}\r\n                       delay={3000}\r\n                       autohide\r\n                >\r\n                    <Toast.Header>\r\n                        <img\r\n                            className=\"rounded mr-2\"\r\n                            alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">{props.head}</strong>\r\n                        <small>{props.type}</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>\r\n                        <Col>\r\n                            {props.message}\r\n                            <Row>\r\n                                {props.tags && props.tags.map((elem, index) =>\r\n                                        <span\r\n                                            key={\"nottag_\" + index}\r\n                                            className=\"badge badge-secondary custom-badge mr-1 mb-1\"\r\n                                        >\r\n                    {elem}\r\n                  </span>\r\n                                )}\r\n                                {props.link &&\r\n                                < a href={props.link} className=\"btn custom-btn icon-btn mr-3\">\r\n                                    <Image src=\"static/img/arrowRight.svg\" width=\"28\"/>\r\n                                </a>\r\n                                }\r\n                            </Row>\r\n                        </Col>\r\n                    </Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Notification","\r\nimport React, { Component } from 'react';\r\nimport Notification from './Notification'\r\nimport socket from '../../WebSocket'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nimport \"../styles/styles.css\"\r\n\r\n\r\nclass NotificationManager extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            notifications: [],\r\n            count: 0,\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        socket.on(\"notification\", (data) => {\r\n            this.setState(prevState => {\r\n                prevState.notifications.unshift(\r\n                    <Notification\r\n                        key={\"Notification\" + prevState.count}\r\n                        type={data.type || false}\r\n                        message={data.message || false}\r\n                        tags={data.tags || false}\r\n                        link={data.link || false}\r\n                        head={data.head || false}\r\n                    />\r\n                )\r\n                prevState.count++\r\n                return prevState\r\n            })\r\n            var t = setTimeout(() => {\r\n                this.setState(prevState => {\r\n                    prevState.notifications.pop()\r\n                    return prevState\r\n                })\r\n                clearTimeout(t)\r\n            }, 3500)\r\n        }\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.removeAllListeners(\"notification\");\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.notifications}\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NotificationManager;","import React, { Component, Suspense } from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport {\r\n    local_auth_check,\r\n    info_upd,\r\n    sign_out\r\n} from './actions/user';\r\nimport { connect } from 'react-redux'\r\nimport AddQueue from './components/routes/addqueue/AddQueue'\r\nimport AllQueues from './components/routes/allqueues/AllQueues'\r\nimport Queue from './components/routes/queue/Queue'\r\nimport Profile from './components/routes/profile/Profile'\r\nimport ProfileEditor from './components/routes/profile/ProfileEditor'\r\nimport CustomNavbar from \"./components/nav/CustomNavbar\"\r\nimport SignIn from './components/routes/auth/signIn/SignIn'\r\nimport SignUp from './components/routes/auth/signUp/SignUp'\r\nimport NotificationManager from './components/notification/NotificationManager';\r\nimport headersDefault from './fetchDefault'\r\n\r\nconst AdminDB = React.lazy(() => import('./components/routes/admindb/AdminDB'));\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        /*this.props.onLocalAuthCheck()\r\n        fetch('/auth/check',\r\n            {\r\n                headers: headersDefault(),\r\n            })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                if (data.isAuth === true)\r\n                    this.props.onInfoUpdate(data)\r\n                else if (data.isAuth === false)\r\n                    this.props.sign_out()\r\n                else\r\n                    console.log(\"hm hmm... error... but why?\")\r\n                    \r\n            })*/\r\n\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <Router basename='/'  >\r\n                <CustomNavbar />\r\n                {this.props.user.isAuth ?\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <AllQueues />\r\n                        </Route>\r\n                        {\r\n                            this.props.user.role !== \"student\" &&\r\n                            < Route path=\"/addqueue\" component={AddQueue} />\r\n                        }\r\n                        <Route path=\"/queue/:curr_id\" component={Queue} />\r\n                        <Route path=\"/profile/editor/\" component={ProfileEditor} />\r\n                        <Route path=\"/profile/:curr_login\" component={Profile} />\r\n                        <Route path=\"/admindb\">\r\n                            {\r\n                                this.props.user.role === \"admin\" &&\r\n                                <Suspense\r\n                                    fallback={\r\n                                        <div></div>\r\n                                    }\r\n                                >\r\n                                    <AdminDB />\r\n                                </Suspense>\r\n                            }\r\n                        </Route>\r\n                        <Redirect strict to=\"/\" />\r\n                    </Switch >\r\n                    :\r\n                    <>\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <Redirect strict to=\"auth/signin\" />\r\n                            </Route>\r\n                            <Route path=\"/auth/signin\" component={SignIn} />\r\n                            <Route path=\"/auth/signup/:curr_key\" component={SignUp} />\r\n                            <Route path=\"/auth/signup/\" component={SignUp} />\r\n                            <Redirect strict to=\"/\" />\r\n                        </Switch >\r\n                    </>\r\n                }\r\n\r\n                <NotificationManager />\r\n            </Router >\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n// export default App;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onLocalAuthCheck: (data) => {\r\n            dispatch(local_auth_check(data))\r\n        },\r\n        onInfoUpdate: (data) => {\r\n            dispatch(info_upd(data))\r\n        },\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        },\r\n    })\r\n)(App)\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { Provider } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './Store'\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","const isAuth = localStorage.getItem(\"userisauth\");\r\nconst login = localStorage.getItem(\"userlogin\");\r\nconst role = localStorage.getItem(\"userrole\");\r\nconst id = localStorage.getItem(\"userid\");\r\nconst initialState = {\r\n    isAuth,\r\n    login,\r\n    role,\r\n    id\r\n}\r\n\r\nexport default function user(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SIGN_IN':\r\n            localStorage.setItem(\"accesstoken\", action.data.access_token)\r\n            localStorage.setItem(\"userisauth\", action.data.isAuth)\r\n            localStorage.setItem(\"userid\", action.data.id)\r\n            localStorage.setItem(\"userlogin\", action.data.login)\r\n            localStorage.setItem(\"userrole\", action.data.role)\r\n            delete action.data.access_token\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case 'INFO_UPD':\r\n            action.data.access_token !== undefined && localStorage.setItem(\"accesstoken\", action.data.access_token)\r\n            action.data.access_token !== undefined && delete action.data.access_token\r\n            action.data.isAuth !== undefined && localStorage.setItem(\"userisauth\", action.data.isAuth);\r\n            action.data.id !== undefined && localStorage.setItem(\"userid\", action.data.id);\r\n            action.data.login !== undefined && localStorage.setItem(\"userlogin\", action.data.login);\r\n            action.data.role !== undefined && localStorage.setItem(\"userrole\", action.data.role);\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case 'SIGN_OUT':\r\n            localStorage.removeItem(\"accessToken\")\r\n            localStorage.removeItem(\"userisauth\")\r\n            localStorage.removeItem(\"userid\")\r\n            localStorage.removeItem(\"userlogin\")\r\n            localStorage.removeItem(\"userrole\")\r\n\r\n            return {\r\n                isAuth: null\r\n            }\r\n        case 'AUTH_CHECK':\r\n\r\n            return state\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\n\r\nexport default combineReducers({\r\n    user\r\n});\r\n","import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store"],"sourceRoot":""}