{"version":3,"sources":["reducers/user.js","reducers/index.js","Store.js","fetchDefault.js","actions/user.js","components/containers/QueuePreview.js","components/routes/addqueue/containers/AddQueueForm.js","components/routes/addqueue/containers/AddQueueContainer.js","components/routes/addqueue/AddQueue.js","components/containers/QueueFilterForm.js","components/containers/QueuesFilterContainer.js","components/containers/ListQueues.js","WebSocket.js","components/routes/allqueues/containers/AllQueuesContainer.js","components/routes/allqueues/AllQueues.js","components/routes/queue/containers/QueueInfoContainer.js","components/routes/queue/containers/StudentActionsContainer.js","components/routes/queue/containers/StudentPreview.js","components/routes/queue/containers/ListStudentsDND.js","components/routes/queue/containers/ListStudents.js","components/routes/queue/containers/JoinQueueContainer.js","components/routes/queue/containers/StudentsListContainer.js","components/routes/queue/containers/QueueContainer.js","components/routes/queue/Queue.js","components/routes/stats/Stats.js","components/routes/profile/containers/ProfileInfoContainer.js","components/routes/profile/containers/ProfileListQueuesContainer.js","components/routes/profile/containers/ProfileActionsContainer.js","components/routes/profile/containers/ProfileContainer.js","components/routes/profile/Profile.js","components/routes/profile/containers/ProfileEditorForm.js","components/routes/profile/containers/ProfileEditorContainer.js","components/routes/profile/ProfileEditor.js","components/nav/CustomNavbar.js","components/routes/auth/signIn/SignInForm.js","components/routes/auth/oauth/OAuthContainer.js","components/routes/auth/signIn/SignIn.js","components/routes/auth/signUp/SignUpForm.js","components/routes/auth/signUp/SignUpGitForm.js","components/routes/auth/signUp/SignUpContainer.js","components/routes/auth/signUp/SignUp.js","components/notification/Notification.js","components/notification/NotificationManager.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isAuth","localStorage","getItem","login","role","id","combineReducers","user","state","action","type","setItem","data","access_token","undefined","removeItem","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","originalFetch","fetch","window","apply","this","arguments","then","response","status","dispatch","catch","error","console","log","headersDefault","Authorization","sign_in","sign_out","info_upd","QueuePreview","props","containerClass","started","deleteQueue","bind","Container","className","Col","Row","discipline","description","teacher","custom_start","OverlayTrigger","placement","overlay","Tooltip","start_date","start_time","Image","src","width","date","time","groups","map","elem","index","key","tags","author","delete","Dropdown","Toggle","variant","as","Menu","Popover","Title","Item","onClick","to","Component","AddQueueForm","getTeachersList","handleOnChange","handleSubmit","handleFullVerify","handleVerify","config","teachers","disciplines","values","Date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","errors","rules","v","length","advconfig","prevQueueId","saveStudents","success","event","name","target","value","setState","prevState","a","Object","entries","forEach","JSON","stringify","every","e","err","filter","method","headers","body","user_id","json","alert","causeOfError","preventDefault","hash","location","paramsStr","slice","indexOf","decodeURI","paramsObj","split","nextValues","keys","hasOwnProperty","getDisciplinesList","getUrlParams","Form","onSubmit","Group","controlId","Label","Control","isInvalid","placeholder","onChange","Feedback","InputGroup","Prepend","Text","height","viewBox","fill","xmlns","fillRule","d","FormControl","aria-label","Check","label","checked","rows","Button","reverse","join","connect","AddQueue","AddQueueContainer","QueueFilterForm","handleChange","selected","sendConfig","QueuesFilterContainer","filterFlag","filerStatus","ref","input","ListQueues","queue_id","queuesList","socket","openSocket","on","AllQueuesContainer","updateQueuesList","filterConfig","off","onSignOut","AllQueues","QueueInfoContainer","configs","updateInfo","redirectWithConfigs","curr_id","queryParams","prevProps","StudentActionsContainer","actionType","record_id","updateStudentList","allowMove","allowDelete","StudentPreview","updateCommentList","commentValue","comments","group","surname","task","count","comment","text","taskValue","onDragEnd","result","destination","draggableId","source","moved","loading","Spinner","animation","droppableId","provided","droppableProps","innerRef","studentList","item","draggableProps","dragHandleProps","JoinQueueContainer","joinQueue","taskCheck","taskError","taskRule","StudentsListContainer","list","emit","room","ListStudents","ListStudentsDND","QueueContainer","Queue","match","params","Stats","updateStats","formatSeconds","statsInfo","avgQueueTime","avgRecords","avgRecordTime","stats","Math","round","timestamp","hours","floor","minutes","seconds","toString","ProfileInfoContainer","userInfo","patronymic","GitID","moodleID","ProfileListQueuesContainer","handleClick","queuesFlag","curr_login","componentDidMount","ProfileContainer","getInfo","URLlogin","res","Profile","ProfileEditorContainer","handleOnClick","email","GithubLogin","MoodleLogin","search","newData","onInfoUpd","newInfo","ProfileEditorForm","ProfileEditor","Navbar","collapseOnSelect","expand","Brand","aria-controls","Collapse","Nav","Link","href","SignInForm","password","onSignIn","passwordInput","OAuthContainer","handleGitLogIn","mode","document","auth_url","SignIn","SignUpForm","password1","password2","curr_key","secretKey","replace","recaptcha","password1Input","regType","isReg","curr_role","includes","sitekey","SignUpGitForm","gitLogin","GithubId","gitId","SignUpContainer","handleGitChecker","currForm","queryString","code","URLSearchParams","get","history","pushState","Alert","needReg","SignUp","Notification","useState","show","setShow","xs","Toast","onClose","delay","autohide","Header","alt","head","Body","message","link","NotificationManager","notifications","unshift","t","setTimeout","pop","clearTimeout","removeAllListeners","AdminDB","React","lazy","App","basename","exact","path","component","fallback","strict","onLocalAuthCheck","local_auth_check","onInfoUpdate","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea7eb585.chunk.js","sourcesContent":["const isAuth = localStorage.getItem(\"userisauth\");\r\nconst login = localStorage.getItem(\"userlogin\");\r\nconst role = localStorage.getItem(\"userrole\");\r\nconst id = localStorage.getItem(\"userid\");\r\nconst initialState = {\r\n    isAuth,\r\n    login,\r\n    role,\r\n    id\r\n}\r\n\r\nexport default function user(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SIGN_IN':\r\n            localStorage.setItem(\"accesstoken\", action.data.access_token)\r\n            localStorage.setItem(\"userisauth\", action.data.isAuth)\r\n            localStorage.setItem(\"userid\", action.data.id)\r\n            localStorage.setItem(\"userlogin\", action.data.login)\r\n            localStorage.setItem(\"userrole\", action.data.role)\r\n            delete action.data.access_token\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case 'INFO_UPD':\r\n            action.data.access_token !== undefined && localStorage.setItem(\"accesstoken\", action.data.access_token)\r\n            action.data.access_token !== undefined && delete action.data.access_token\r\n            action.data.isAuth !== undefined && localStorage.setItem(\"userisauth\", action.data.isAuth);\r\n            action.data.id !== undefined && localStorage.setItem(\"userid\", action.data.id);\r\n            action.data.login !== undefined && localStorage.setItem(\"userlogin\", action.data.login);\r\n            action.data.role !== undefined && localStorage.setItem(\"userrole\", action.data.role);\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case 'SIGN_OUT':\r\n            localStorage.removeItem(\"accessToken\")\r\n            localStorage.removeItem(\"userisauth\")\r\n            localStorage.removeItem(\"userid\")\r\n            localStorage.removeItem(\"userlogin\")\r\n            localStorage.removeItem(\"userrole\")\r\n\r\n            return {\r\n                isAuth: null\r\n            }\r\n        case 'AUTH_CHECK':\r\n\r\n            return state\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\n\r\nexport default combineReducers({\r\n    user\r\n});\r\n","import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store","import store from './Store'\r\n\r\nvar originalFetch = fetch;\r\nwindow.fetch = function () {\r\n    return originalFetch.apply(this, arguments)\r\n        .then(response => {\r\n            if (response.status === 401)\r\n                store.dispatch({ type: 'SIGN_OUT' });\r\n\r\n            // if (response.ok === false)\r\n            //     return Promise.reject(response.json());\r\n            return response;\r\n        })\r\n        .catch(error => console.log(error))\r\n\r\n};\r\n\r\nvar headersDefault = () => ({\r\n    Authorization: \"JWT \" + localStorage.getItem(\"accesstoken\"),\r\n    'Content-Type': 'application/json;charset=utf-8'\r\n})\r\n\r\nexport default headersDefault\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nfunction myFetch(params){\r\n    return new Promise(function(resolve, reject){\r\n       const xhr = new XMLHttpRequest();\r\n        xhr.open(params.method, params.url, true);\r\n        xhr.send();\r\n        xhr.addEventListener('readystatechange', function(e){\r\n              if( xhr.readyState !== 4  ) return;\r\n              if( xhr.status == 200 ){\r\n                   resolve( xhr.responseText );\r\n               } else{ reject( xhr.statusText ); }\r\n        });\r\n}\r\n*/","export const sign_in = (data) => dispatch => {\r\n    dispatch({ type: 'SIGN_IN', data });\r\n};\r\nexport const sign_out = (data) => dispatch => {\r\n    dispatch({ type: 'SIGN_OUT', data });\r\n};\r\nexport const info_upd = (data) => dispatch => {\r\n    dispatch({ type: 'INFO_UPD', data });\r\n};\r\n\r\nexport const local_auth_check = (data) => dispatch => {\r\n    dispatch({ type: 'AUTH_CHECK', data });\r\n};\r\n","\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Container, Image, OverlayTrigger, Popover, Button, Dropdown, Tooltip} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass QueuePreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteQueue = this.deleteQueue.bind(this)\r\n    }\r\n\r\n    deleteQueue() {\r\n        this.props.deleteQueue(this.props.user.id, this.props.id)\r\n    }\r\n\r\n    containerClass = this.props.started ?\r\n        \"float-lg-right mb-2 p-3 d-flex flex-row align-items-center justify-content-between queue-active custom-block\"\r\n        :\r\n        \"float-lg-right mb-2 p-3 d-flex flex-row align-items-center justify-content-between bg-white custom-block\"\r\n\r\n    render() {\r\n        return (\r\n            <Container\r\n                className={this.containerClass}>\r\n                <Col>\r\n                    <Row>\r\n                        <h5 className=\"mb-0 mt-0 d-flex align-items-center\">\r\n                                    <span\r\n                                        className=\"badge custom-badge badge-primary mr-2 mb-1\">{this.props.discipline}</span>\r\n                            <b className=\"mb-1\">{this.props.description}</b>\r\n                        </h5>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className=\"mb-1\"><span\r\n                            className=\"text-muted\">Преподаватель: </span>{this.props.teacher}</div>\r\n                    </Row>\r\n                    <Row>\r\n                        {this.props.custom_start && !this.props.started &&\r\n                        <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Запись будет открыта\r\n                            с {this.props.start_date} &nbsp; {this.props.start_time}</Tooltip>}>\r\n                            <div className=\"mr-1 mr-lg-2\">\r\n                                <Image src=\"static/img/important.svg\" width=\"24\"/>\r\n                            </div>\r\n                        </OverlayTrigger>\r\n                        }\r\n                        <Col className=\"col-12 col-md-auto m-0 p-0\">\r\n                            <span\r\n                                className=\"badge custom-badge badge-info mr-1 mb-1\">{this.props.date} &nbsp; {this.props.time}</span>\r\n\r\n                        </Col>\r\n                        {this.props.groups && this.props.groups.map((elem, index) =>\r\n                                <span\r\n                                    key={\"group_\" + index}\r\n                                    className=\"badge badge-secondary custom-badge mr-1 mb-1\"\r\n                                >\r\n                            {elem}\r\n                        </span>\r\n                        )}\r\n                    </Row>\r\n                    <Row className=\"ml-3\">\r\n                        {this.props.tags && this.props.tags.map(elem => <span\r\n                            className=\"badge badge-pill badge-info\"\r\n                            key={`spanTag_${elem}`}\r\n                        >\r\n                            {elem}\r\n                        </span>)}\r\n                    </Row>\r\n                </Col>\r\n\r\n                {\r\n                    ((this.props.user.id === this.props.author || this.props.user.role === 'admin')) && this.props.delete &&\r\n                    <Dropdown className={\"mr-2 mr-lg-3\"}>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\" className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                            <Image src=\"static/img/delete.svg\" className=\"big-icon\" width=\"26\" />\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu className=\"drop-menu\">\r\n                            <Popover.Title as=\"h4\"><b>Подтвердите действие</b></Popover.Title>\r\n                            <Dropdown.Item className=\"drop-item mt-2\" onClick={this.deleteQueue}>\r\n                                Удалить запись <Image src=\"/static/img/delete.svg\" className=\"big-icon\" width=\"20\" />\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                }\r\n\r\n                {this.props.id === false ?\r\n                    <Image src=\"static/img/arrowRight.svg\" width=\"28\"/>\r\n                    :\r\n                    < Link className=\"btn custom-btn icon-btn btn-light mr-0 mr-lg-3\"\r\n                           to={`/queue/${this.props.id}`}>\r\n                        <Image src=\"static/img/arrowRight.svg\" width=\"28\"/>\r\n                    </Link>\r\n                }\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default QueuePreview;\r\n","\r\nimport React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    InputGroup,\r\n    FormControl,\r\n    Button,\r\n    Tooltip,\r\n    Image,\r\n    OverlayTrigger\r\n} from 'react-bootstrap'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { connect } from 'react-redux'\r\nimport QueuePreview from '../../../containers/QueuePreview'\r\nimport headersDefault from '../../../../fetchDefault'\r\n// import socket from '../../../../WebSocket'\r\nclass AddQueueForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getTeachersList = this.getTeachersList.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleFullVerify = this.handleFullVerify.bind(this)\r\n        this.handleVerify = this.handleVerify.bind(this)\r\n        this.state = {\r\n            config: {\r\n                teachers: [''],\r\n                disciplines: [''],\r\n            },\r\n            values: {\r\n                discipline: \"\",\r\n                date: `${(new Date()).getFullYear()}-${String((new Date()).getMonth() + 1).padStart(2, '0')}-${String((new Date()).getDate()).padStart(2, '0')}`,\r\n                time: `${String((new Date()).getHours()).padStart(2, '0')}:${String((new Date()).getMinutes()).padStart(2, '0')}`,\r\n                teacher: \"\",\r\n                groups: \"all\",\r\n                description: \"\",\r\n                custom_start: false,\r\n                start_date: `${(new Date()).getFullYear()}-${String((new Date()).getMonth()).padStart(2, '0')}-${String((new Date()).getDate()).padStart(2, '0')}`,\r\n                start_time: `${String((new Date()).getHours()).padStart(2, '0')}:${String((new Date()).getMinutes()).padStart(2, '0')}`\r\n            },\r\n            errors: {\r\n                discipline: false,\r\n                date: false,\r\n                time: false,\r\n                teacher: false,\r\n                groups: false,\r\n                description: false,\r\n                start_date: false,\r\n                start_time: false,\r\n                custom_start: false,\r\n            },\r\n            rules: {\r\n                discipline: [v => !!v || \"Введите дисциплину.\"],\r\n                date: [v => !!v || \"Введите дату.\"],\r\n                time: [v => !!v || \"Введите время.\"],\r\n                start_date: [v => !!v || \"Введите дату.\"],\r\n                start_time: [v => !!v || \"Введите время.\"],\r\n                custom_start: [],\r\n                teacher: [v => !!v || \"Введите преподаватля.\"],\r\n                groups: [v => !!v || \"Введите группы.\"],\r\n                description: [\r\n                    v => !!v || \"Введите описание.\",\r\n                    v => v.length < 50 || \"Максимальный размер описания 50 символов.\"\r\n                ],\r\n            },\r\n            advconfig: {\r\n                prevQueueId: false,\r\n                saveStudents: false,\r\n\r\n            },\r\n            success: false,\r\n        }\r\n\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState(prevState => {\r\n            prevState.values[name] = value\r\n            return prevState\r\n        })\r\n        this.handleVerify(name, value)\r\n    }\r\n    async handleFullVerify() {\r\n\r\n        await Object.entries(this.state.values).forEach(([key, value]) => {\r\n            if (key === \"teacher\" && this.props.user.role !== \"admin\")\r\n                return\r\n            else\r\n                this.handleVerify(key, value)\r\n        })\r\n        console.log(JSON.stringify(this.state.errors))\r\n        return Object.values(this.state.errors).every(e => !e)\r\n    }\r\n\r\n    handleVerify(name, value) {\r\n        this.setState(prevState => {\r\n            const errors = prevState.rules[name].map(e => {\r\n                let err = e(value)\r\n                return err !== true ? err : null\r\n            })\r\n                .filter(function (e) {\r\n                    return e !== null\r\n                })\r\n                .map(e => <p className=\"p-0 m-0\">{e}</p>)\r\n            prevState.errors[name] = errors.length === 0 ? false : errors\r\n            return prevState\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        console.log(this.state.values)\r\n        this.handleFullVerify()\r\n            .then((data) => {\r\n                if (data) {\r\n                    console.log(this.state.values)\r\n                    fetch('/addNewQueue', {\r\n                        method: 'POST',\r\n                        headers: headersDefault(),\r\n\r\n                        body: JSON.stringify({\r\n                            ...this.state.values,\r\n                            user_id: this.props.user.id,\r\n                            advconfig: this.state.advconfig,\r\n                        })\r\n                    })\r\n                        .then(data => data.json())\r\n                        .then(data => {\r\n                            console.log(data)\r\n\r\n                            if (data.success) {\r\n                                this.setState({ success: true })\r\n                            }\r\n                            else {\r\n                                alert(data.causeOfError)\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n        event.preventDefault();\r\n    }\r\n\r\n    getTeachersList() {\r\n        fetch('/config/teachers')\r\n            .then(data => data.json())\r\n            .then((data) => this.setState(prevState => ({\r\n                config: {\r\n                    ...prevState.config,\r\n                    teachers: data\r\n                },\r\n                values: {\r\n                    ...prevState.values,\r\n                    teacher: prevState.values.teacher || data[0],\r\n                }\r\n            })))\r\n    }\r\n\r\n    getDisciplinesList() {\r\n        fetch('/config/disciplines')\r\n            .then(data => data.json())\r\n            .then((data) => this.setState(prevState => ({\r\n                config: {\r\n                    ...prevState.config,\r\n                    disciplines: data\r\n                },\r\n                values: {\r\n                    ...prevState.values,\r\n                    discipline: prevState.values.discipline || data[0],\r\n                }\r\n            })))\r\n    }\r\n\r\n    getUrlParams() {\r\n        let hash = window.location.hash\r\n        let paramsStr = hash.slice(hash.indexOf('?') + 1)\r\n        paramsStr = decodeURI(paramsStr)\r\n        var paramsObj = {}\r\n        paramsStr.split('&').forEach(elem => paramsObj[elem.split('=')[0]] = elem.split('=')[1])\r\n        debugger\r\n        this.setState(prevState => {\r\n            let nextValues = prevState.values\r\n            Object.keys(paramsObj).forEach(key => { if (prevState.values.hasOwnProperty(key)) nextValues[key] = paramsObj[key] })\r\n            return { ...prevState, values: nextValues }\r\n        })\r\n        if (paramsObj.hasOwnProperty(\"prevQueueId\"))\r\n            this.setState(prevState => {\r\n                prevState.advconfig.prevQueueId = paramsObj.prevQueueId\r\n                return prevState\r\n            })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user.role === \"admin\")\r\n            this.getTeachersList()\r\n        this.getDisciplinesList()\r\n        this.getUrlParams();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.success)\r\n            return (<Redirect to=\"/\" />)\r\n        return (\r\n            <>\r\n\r\n                <Container className=\"p-3 bg-light custom-paper\">\r\n                    <p className=\"h5 mb-3\">Выберите конфигурацию для очереди</p>\r\n                    <Col>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Row className=\"mb-2\">\r\n                                <Form.Group as={Col} controlId=\"formGridDiscipline\" className=\"col-12 col-lg-4\">\r\n\r\n                                    <Form.Label className=\"m-1\">Предмет</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.discipline}\r\n                                        name={\"discipline\"}\r\n                                        placeholder=\"Введите предмет\"\r\n                                        className=\"custom-select\"\r\n                                        // type=\"text\"\r\n                                        as=\"select\"\r\n                                        onChange={this.handleOnChange}\r\n                                        value={this.state.values.discipline}>\r\n                                        {this.state.config.disciplines.map((elem) => <option\r\n                                            key={\"disciplineOption_\" + elem}>{elem}</option>)}\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.discipline}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                {\r\n                                    this.props.user.role === \"admin\" &&\r\n                                    <Form.Group as={Col} controlId=\"formGridTeacher\" className=\"col-12 col-lg-4\">\r\n                                        <Form.Label className=\"m-1\">Преподаватель</Form.Label>\r\n                                        <Form.Control\r\n\r\n                                            isInvalid={!!this.state.errors.teacher}\r\n                                            name={\"teacher\"}\r\n                                            as=\"select\"\r\n                                            className=\"custom-select\"\r\n                                            onChange={this.handleOnChange}\r\n                                            value={this.state.values.teacher}>\r\n                                            >\r\n                                            {this.state.config.teachers.map((elem) => <option\r\n                                                key={\"teacherOption_\" + elem}>{elem}</option>)}\r\n\r\n                                        </Form.Control>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {this.state.errors.teacher}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                }\r\n                                <Form.Group as={Col} controlId=\"formGridGroup\" className=\" col-12 col-lg-4\">\r\n                                    <Form.Label className=\"m-1\">Группы</Form.Label>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text id=\"Date-addon1\" className=\"custom-form\">\r\n                                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-people-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path fillRule=\"evenodd\" d=\"M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-5.784 6A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216zM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z\" />\r\n                                                </svg>\r\n                                            </InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl\r\n                                            isInvalid={!!this.state.errors.groups}\r\n                                            name={\"groups\"}\r\n                                            placeholder=\"Группы\"\r\n                                            className=\"custom-endform\"\r\n                                            type=\"text\"\r\n                                            value={this.state.values.groups}\r\n                                            onChange={this.handleOnChange}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {this.state.errors.groups}\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} controlId=\"formGridGroup\" className=\" col-12 col-md-6 col-lg-4\">\r\n\r\n                                    <Form.Label className=\"m-1\">Дата занятия</Form.Label>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text id=\"Date-addon1\" className=\"custom-form\">\r\n                                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-calendar-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path fillRule=\"evenodd\" d=\"M8 7a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5H6a.5.5 0 0 1 0-1h1.5V7.5A.5.5 0 0 1 8 7z\" />\r\n                                                    <path fillRule=\"evenodd\" d=\"M7.5 9.5A.5.5 0 0 1 8 9h2a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0v-2z\" />\r\n                                                    <path fillRule=\"evenodd\" d=\"M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1zm1-3a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2z\" />\r\n                                                    <path fillRule=\"evenodd\" d=\"M3.5 0a.5.5 0 0 1 .5.5V1a.5.5 0 0 1-1 0V.5a.5.5 0 0 1 .5-.5zm9 0a.5.5 0 0 1 .5.5V1a.5.5 0 0 1-1 0V.5a.5.5 0 0 1 .5-.5z\" />\r\n                                                </svg>\r\n                                            </InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl\r\n                                            isInvalid={!!this.state.errors.date}\r\n                                            name={\"date\"}\r\n                                            placeholder=\"Date\"\r\n                                            className=\"custom-form\"\r\n                                            aria-label=\"date\"\r\n                                            type=\"date\"\r\n                                            value={this.state.values.date}\r\n                                            onChange={this.handleOnChange}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.date}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridTime\" className=\" col-12 col-md-6 col-lg-4\">\r\n                                    <Form.Label className=\"m-1\">Время начала</Form.Label>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text id=\"Time-addon1\" className=\"custom-form\">\r\n                                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\r\n                                                    className=\"bi bi-clock\" fill=\"currentColor\"\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path fillRule=\"evenodd\"\r\n                                                        d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm8-7A8 8 0 1 1 0 8a8 8 0 0 1 16 0z\" />\r\n                                                    <path fillRule=\"evenodd\"\r\n                                                        d=\"M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z\" />\r\n                                                </svg>\r\n                                            </InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl\r\n                                            isInvalid={!!this.state.errors.time}\r\n                                            name={\"time\"}\r\n                                            placeholder=\"Time\"\r\n                                            className=\"custom-form\"\r\n                                            aria-label=\"time\"\r\n                                            type=\"time\"\r\n                                            value={this.state.values.time}\r\n                                            onChange={this.handleOnChange}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.time}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            {this.state.advconfig.prevQueueId &&\r\n                                <Row>\r\n                                    <Container className=\"col-12\">\r\n                                        <Form.Group className=\"d-flex\">\r\n                                            <Form.Check\r\n                                                type=\"switch\"\r\n                                                id=\"custom-switch1\"\r\n                                                label=\"Перенести студентов с прошлой очереди\"\r\n                                                name=\"saveStudents\"\r\n                                                value={this.state.advconfig.saveStudents}\r\n                                                onChange={(event) => {\r\n                                                    var value = event.target.checked\r\n                                                    this.setState(prevState => {\r\n                                                        debugger\r\n                                                        prevState.advconfig.saveStudents = value\r\n                                                        return prevState\r\n                                                    })\r\n                                                }}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Container>\r\n                                </Row>\r\n                            }\r\n                            <Row>\r\n                                <Container className=\"col-12\">\r\n                                    <Form.Group className=\"d-flex\">\r\n                                        <Form.Check\r\n                                            type=\"switch\"\r\n                                            id=\"custom-switch2\"\r\n                                            label=\"Отдельное время для открытия записи\"\r\n                                            name=\"custom_start\"\r\n                                            value={this.state.values.custom_start}\r\n                                            onChange={(event) => {\r\n                                                var value = event.target.checked\r\n                                                this.setState(prevState => {\r\n                                                    debugger\r\n                                                    prevState.values['custom_start'] = value\r\n                                                    return prevState\r\n                                                })\r\n                                            }}\r\n                                        />\r\n                                        <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Если выключено, запись в очередь будет доступна с даты начала занятия</Tooltip>}>\r\n                                            <div className=\"ml-2 ml-lg-3\">\r\n                                                <Image src=\"static/img/info.svg\" width=\"20\" />\r\n                                            </div>\r\n                                        </OverlayTrigger>\r\n                                    </Form.Group>\r\n                                    {this.state.values.custom_start === true &&\r\n                                        <Row>\r\n                                            <Form.Group as={Col} controlId=\"formGridGroup\" className=\" col-12 col-md-6 col-lg-4\">\r\n                                                <Form.Label className=\"m-1\">Дата открытия</Form.Label>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <InputGroup.Prepend>\r\n                                                        <InputGroup.Text id=\"Date-addon1\" className=\"custom-form\">\r\n                                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\r\n                                                                className=\"bi bi-calendar-plus\" fill=\"currentColor\"\r\n                                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path fillRule=\"evenodd\"\r\n                                                                    d=\"M8 7a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5H6a.5.5 0 0 1 0-1h1.5V7.5A.5.5 0 0 1 8 7z\" />\r\n                                                                <path fillRule=\"evenodd\"\r\n                                                                    d=\"M7.5 9.5A.5.5 0 0 1 8 9h2a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0v-2z\" />\r\n                                                                <path fillRule=\"evenodd\"\r\n                                                                    d=\"M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1zm1-3a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2z\" />\r\n                                                                <path fillRule=\"evenodd\"\r\n                                                                    d=\"M3.5 0a.5.5 0 0 1 .5.5V1a.5.5 0 0 1-1 0V.5a.5.5 0 0 1 .5-.5zm9 0a.5.5 0 0 1 .5.5V1a.5.5 0 0 1-1 0V.5a.5.5 0 0 1 .5-.5z\" />\r\n                                                            </svg>\r\n                                                        </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <FormControl\r\n                                                        isInvalid={!!this.state.errors.start_date}\r\n                                                        name={\"start_date\"}\r\n                                                        placeholder=\"Date\"\r\n                                                        className=\"custom-form\"\r\n                                                        aria-label=\"date\"\r\n                                                        value={this.state.values.start_date}\r\n                                                        onChange={this.handleOnChange}\r\n                                                        type=\"date\"\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} controlId=\"formGridTime\" className=\" col-12 col-md-6 col-lg-4\">\r\n                                                <Form.Label className=\"m-1\">Время</Form.Label>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <InputGroup.Prepend>\r\n                                                        <InputGroup.Text id=\"Time-addon1\" className=\"custom-form\">\r\n                                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\r\n                                                                className=\"bi bi-clock\" fill=\"currentColor\"\r\n                                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path fillRule=\"evenodd\"\r\n                                                                    d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm8-7A8 8 0 1 1 0 8a8 8 0 0 1 16 0z\" />\r\n                                                                <path fillRule=\"evenodd\"\r\n                                                                    d=\"M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z\" />\r\n                                                            </svg>\r\n                                                        </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <FormControl\r\n                                                        isInvalid={!!this.state.errors.start_time}\r\n                                                        name={\"start_time\"}\r\n                                                        placeholder=\"Time\"\r\n                                                        className=\"custom-form\"\r\n                                                        aria-label=\"time\"\r\n                                                        value={this.state.values.start_time}\r\n                                                        onChange={this.handleOnChange}\r\n                                                        type=\"time\"\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Row>\r\n                                    }\r\n                                </Container>\r\n\r\n                            </Row>\r\n                            <Form.Group controlId=\"formGridDescription\">\r\n                                <Form.Label>Описание</Form.Label>\r\n                                <Form.Control\r\n                                    isInvalid={!!this.state.errors.description}\r\n                                    name={\"description\"}\r\n                                    as=\"textarea\"\r\n                                    className=\"custom-form\"\r\n                                    rows=\"3\"\r\n                                    placeholder=\"Описание\"\r\n                                    value={this.state.values.description}\r\n                                    onChange={this.handleOnChange} />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.errors.description}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Button className=\"mt-3 custom-btn\" type=\"submit\">\r\n                                Создать очередь\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n\r\n                </Container >\r\n                <Container className=\"mt-3 p-3 bg-light custom-paper\">\r\n                    <Row>\r\n                        <Col>\r\n                            <h5>Предпросмотр:</h5>\r\n                            <QueuePreview\r\n                                id={false}\r\n                                discipline={this.state.values.discipline}\r\n                                teacher={this.state.values.teacher}\r\n                                groups={this.state.values.groups.split(',')}\r\n                                date={this.state.values.date.split('-').reverse().join(' : ')}\r\n                                time={this.state.values.time}\r\n                                description={this.state.values.description}\r\n                                user={this.props.user}\r\n                                delete={false}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default AddQueueForm;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(AddQueueForm)\r\n\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport AddQueueForm from './AddQueueForm'\r\n\r\nclass AddQueue extends Component {\r\n    render() {\r\n        return (\r\n            <Container className=\"p-3 mt-1 mt-lg-2\">\r\n                <AddQueueForm />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AddQueue;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport AddQueueContainer from './containers/AddQueueContainer'\r\n\r\nclass AddQueue extends Component {\r\n    render() {\r\n        return (\r\n            <AddQueueContainer />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AddQueue;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nclass QueueFilterForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getTeachersList = this.getTeachersList.bind(this)\r\n        this.getDisciplinesList = this.getDisciplinesList.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.state = {\r\n            config: {\r\n                teachers: [\"\"],\r\n                disciplines: [\"\"]\r\n            },\r\n            selected: {\r\n                discipline: \"\",\r\n                teacher: \"\"\r\n            }\r\n        }\r\n    }\r\n    handleChange(event) {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n\r\n\r\n        this.setState((prevState) => {\r\n            prevState.selected[name] = value\r\n            return prevState\r\n        })\r\n    }\r\n    handleSubmit(event) {\r\n        this.props.sendConfig(this.state.selected)\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    getTeachersList() {\r\n        fetch('/config/teachers')\r\n            .then(data => data.json())\r\n            .then((data) => this.setState(prevState => ({\r\n                config: {\r\n                    ...prevState.config,\r\n                    teachers: data\r\n                },\r\n                selected: {\r\n                    ...prevState.selected,\r\n                    teacher: data[0],\r\n                }\r\n            })))\r\n            .catch(console.log)\r\n    }\r\n\r\n    getDisciplinesList() {\r\n        fetch('/config/disciplines')\r\n            .then(data => data.json())\r\n            .then((data) => this.setState(prevState => ({\r\n                config: {\r\n                    ...prevState.config,\r\n                    disciplines: data\r\n                },\r\n                values: {\r\n                    ...prevState.selected,\r\n                    discipline: data[0],\r\n                }\r\n            })))\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.teacher)\r\n            this.getTeachersList()\r\n        if (this.props.discipline)\r\n            this.getDisciplinesList()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Col>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Row className=\"mb-2\">\r\n                            {\r\n                                this.props.discipline &&\r\n                                <Form.Group className=\"col-12 col-lg-4\">\r\n                                    <Form.Label className=\"m-1\">Дисциплина</Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"custom-select\"\r\n                                        name={\"discipline\"}\r\n                                        as=\"select\"\r\n                                        onChange={this.handleChange}\r\n                                        value={this.state.selected.discipline}\r\n                                    >\r\n                                        {this.state.config.disciplines.map((elem) => <option\r\n                                            key={\"disciplineOption_\" + elem}>{elem}</option>)}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            }\r\n                            {\r\n                                this.props.teacher &&\r\n                                <Form.Group className=\"col-12 col-lg-4\">\r\n                                    <Form.Label className=\"m-1\">Преподаватель</Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"custom-select\"\r\n                                        name={\"teacher\"}\r\n                                        as=\"select\"\r\n                                        onChange={this.handleChange}\r\n                                        value={this.state.selected.teacher}>\r\n                                        >\r\n                                        {this.state.config.teachers.map((elem) => <option\r\n                                            key={\"teacherOption_\" + elem}>{elem}</option>)}\r\n\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            }\r\n                        </Row>\r\n                        <Button className=\"mt-3 custom-btn\" type=\"submit\">\r\n                            Отфильтровать\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default QueueFilterForm;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Container, Form } from 'react-bootstrap'\r\nimport QueueFilterForm from './QueueFilterForm'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n// import socket from '../../../../WebSocket'\r\n\r\nclass QueuesFilterContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.state = {\r\n            filterFlag: false,\r\n        }\r\n    }\r\n    handleChange() {\r\n        this.setState({ filterFlag: this.filerStatus.checked })\r\n        if (this.filerStatus.checked === false)\r\n            this.props.sendConfig({})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container className=\"p-3 bg-white custom-block col-12\">\r\n                    <Form.Group>\r\n                        <Form.Check\r\n                            type=\"switch\"\r\n                            id=\"custom-switch\"\r\n                            label=\"Фильтрация\"\r\n                            // checked=\"true\"\r\n                            ref={(input) => this.filerStatus = input}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    {this.state.filterFlag &&\r\n                        <QueueFilterForm\r\n                            discipline={this.props.discipline}\r\n                            teacher={this.props.teacher}\r\n                            sendConfig={this.props.sendConfig}\r\n                        />\r\n                    }\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default QueuesFilterContainer;\r\n","import React, {Component} from 'react';\r\nimport { Col, Row, Container } from 'react-bootstrap'\r\nimport QueuePreview from \"./QueuePreview\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport headersDefault from \"../../fetchDefault\";\r\n\r\n\r\nclass ListQueues extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteQueue = this.deleteQueue.bind(this)\r\n    }\r\n\r\n    deleteQueue(user_id, queue_id) {\r\n        this.props.deleteQueue(user_id, queue_id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-3 p-1 bg-light col-12\" >\r\n                <Row>\r\n                    {this.props.queuesList && this.props.queuesList.map(elem =>\r\n                        <Col\r\n                            className=\"col-12 col-lg-6\"\r\n                            key={`RowQueueContainer_${elem.id}`}\r\n                        >\r\n                            <QueuePreview\r\n                                key={`QueueContainer_${elem.id}`}\r\n                                id={elem.id}\r\n                                discipline={elem.discipline}\r\n                                teacher={elem.teacher}\r\n                                description={elem.description}\r\n                                author={elem.author}\r\n                                date={elem.date}\r\n                                groups={elem.groups}\r\n                                time={elem.time}\r\n                                index={elem.index}\r\n                                tags={elem.tags}\r\n                                custom_start={elem.custom_start}\r\n                                start_date={elem.start_date}\r\n                                start_time={elem.start_time}\r\n                                started={elem.started}\r\n                                user={this.props.user}\r\n                                deleteQueue={this.deleteQueue}\r\n                                delete={true}\r\n                            />\r\n                        </Col>\r\n                    )}\r\n                </Row>\r\n\r\n            </Container >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListQueues;","import openSocket from 'socket.io-client';\r\n\r\n// const socket = openSocket('163.172.163.152:3999');\r\n// const socket = openSocket(\"localhost:3030\")\r\nconst socket = openSocket(\"localhost:8091\")\r\n\r\nsocket.on('disconnect', () => {\r\n    console.log(\"disconnect\");\r\n    console.log(\"waiting...\");\r\n});\r\nsocket.on('connection', () => {\r\n    console.log(\"connection\");\r\n});\r\n\r\n\r\nexport default socket;","import React, { Component } from 'react';\r\nimport { Container, OverlayTrigger, Tooltip, Image } from 'react-bootstrap'\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport QueuesFilterContainer from \"../../../containers/QueuesFilterContainer\"\r\nimport ListQueues from \"../../../containers/ListQueues\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux'\r\nimport socket from '../../../../WebSocket'\r\nimport { sign_out } from \"../../../../actions/user\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass AllQueuesContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateQueuesList = this.updateQueuesList.bind(this)\r\n        this.deleteQueue = this.deleteQueue.bind(this)\r\n        this.state = {\r\n            queuesList: [{}],\r\n            filterConfig: {\r\n                discipline: '',\r\n                teacher: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    updateQueuesList(data) {\r\n        this.setState({\r\n            filterConfig: data\r\n        })\r\n        fetch('/allqueues', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n            body: JSON.stringify({\r\n                user_id: this.props.user.id,\r\n                ...data,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({ queuesList: data })\r\n            })\r\n    }\r\n\r\n    deleteQueue(user_id, queue_id) {\r\n        fetch('/deletequeue', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n\r\n            body: JSON.stringify({\r\n                queue_id: queue_id,\r\n                user_id: user_id,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(this.updateQueuesList)\r\n    }\r\n\r\n    componentDidMount() {\r\n        socket.on(\"allqueue updated\", (data) => {\r\n            console.log(\"run\")\r\n            this.updateQueuesList(this.state.filterConfig)\r\n        })\r\n        this.updateQueuesList(this.state.filterConfig)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.off(\"allqueue updated\")\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"p-3 mt-1 mt-lg-2 col-12\">\r\n                <Container className=\"p-2 p-lg-3 custom-paper bg-light col-12\">\r\n                    <div className=\"h5 ml-2 mb-3 d-flex justify-content-between\">\r\n                        <div>Очереди</div>\r\n                        <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Очереди, в которые уже можно записаться, имеют фиолетовую тень</Tooltip>}>\r\n                            <div className=\"mr-0 mr-lg-3\">\r\n                                <Image src=\"static/img/info.svg\" width=\"24\" />\r\n                            </div>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                    <QueuesFilterContainer\r\n                        discipline={true}\r\n                        teacher={this.props.user.role === \"admin\"}\r\n                        sendConfig={this.updateQueuesList}\r\n                    />\r\n                    <ListQueues\r\n                        queuesList={this.state.queuesList} user={this.props.user}\r\n                        deleteQueue={this.deleteQueue}\r\n                    />\r\n                </Container>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default AllQueuesContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(AllQueuesContainer)\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport AllQueuesContainer from './containers/AllQueuesContainer'\r\n\r\nclass AllQueues extends Component {\r\n    render() {\r\n        return (\r\n                <AllQueuesContainer />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AllQueues;\r\n","import React, {Component} from 'react';\r\nimport {Container, Row, Col, Image, Button, Dropdown, Popover} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport {sign_out} from \"../../../../actions/user\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass QueueInfoContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            configs:{\r\n                discipline:\"\",\r\n                groups:[\"\"],\r\n                date:\"\",\r\n                time:\"\",\r\n                teacher:\"\",\r\n                description:\"\",\r\n                custom_start:false,\r\n                start_date:\"\",\r\n                start_time:\"\"\r\n            }\r\n        }\r\n\r\n        this.updateInfo = this.updateInfo.bind(this)\r\n        this.redirectWithConfigs = this.redirectWithConfigs.bind(this)\r\n    }\r\n\r\n    updateInfo() {\r\n        fetch('/queueInfo', {\r\n            method:'POST',\r\n            headers:headersDefault(),\r\n\r\n            body:JSON.stringify({id:this.props.curr_id})\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                this.setState({configs:data})\r\n            })\r\n    }\r\n\r\n    redirectWithConfigs() {\r\n        let configs = this.state.configs\r\n        configs.prevQueueId = this.props.curr_id\r\n        let queryParams = Object.entries(configs).map(([key, value]) => `${key}=${value}`).join('&')\r\n        let a = window.location.hash = '/addqueue?' + queryParams\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.updateInfo()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.curr_id !== this.props.curr_id)\r\n            this.updateInfo()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dropdown as=\"Container\" className=\"col-12 col-lg-6 p-0 m-0\">\r\n                <Dropdown.Toggle as=\"div\"  className=\"p-2 p-lg-4 col-12 drop\">\r\n                    <Container className=\"custom-paper p-3 bg-light click-reaction\">\r\n                        <Row>\r\n                            <Col className=\"col-2 col-lg-2 d-flex justify-content-end align-items-start\">\r\n                                <Image className=\"mt-2 custom-queue-icon\" src=\"static/img/queue.svg\" width=\"90%\"/>\r\n                            </Col>\r\n                            <Col className=\"col-10 col-lg-5\">\r\n                                <Row>\r\n                                    <Col className=\"col-12\">\r\n                                        <div className=\"mt-2\">\r\n                                            <div\r\n                                                className=\"mb-2 text-secondary font-weight-bold\">{this.state.configs.date} {this.state.configs.time}</div>\r\n                                            <h5 className=\"mb-0 d-flex align-items-center\">\r\n                                                <span\r\n                                                    className=\"badge custom-badge badge-primary mr-2 mb-1\">{this.state.configs.discipline}</span>\r\n                                                <b className=\"mb-1\">{this.state.configs.description}</b>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col className=\"col-10 col-lg-5 d-flex flex-column justify-content-center\">\r\n                                <Row>\r\n                                    <Col className=\"col-12 d-flex\">\r\n                                        <div className=\"text-muted mr-2\">Преподаватель:</div>\r\n                                        {this.state.configs.teacher}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className=\"col-12  d-flex\">\r\n                                        <div className=\"text-muted mr-2\">Группы:</div>\r\n                                        {this.state.configs.groups.join(', ')}\r\n                                    </Col>\r\n                                </Row>\r\n                                {\r\n                                    this.state.configs.custom_start &&\r\n                                    <Row>\r\n                                        <Col className=\"col-12  d-flex\">\r\n                                            <div className=\"text-muted mr-2\">Открытие:</div>\r\n                                            <b className=\"text-info\">{this.state.configs.start_date} {this.state.configs.start_time}</b>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Dropdown.Toggle>\r\n                {this.props.user.role !== 'student' &&\r\n                <Dropdown.Menu className=\"drop-menu ml-4\">\r\n                    <Popover.Title as=\"h4\"><b>Опции</b></Popover.Title>\r\n                    <Dropdown.Item className=\"drop-item mt-2\" onClick={this.redirectWithConfigs}>\r\n                        Создать копию <Image src=\"/static/img/copy.svg\" className=\"big-icon ml-1\" width=\"24\"/>\r\n                    </Dropdown.Item>\r\n                </Dropdown.Menu>}\r\n\r\n            </Dropdown>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n        user:state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut:(data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(QueueInfoContainer);\r\n","import React from 'react';\r\nimport {Dropdown, Image, Popover} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport headersDefault from '../../../../fetchDefault'\r\n\r\nfunction StudentActionsContainer(props) {\r\n\r\n    function action(actionType) {\r\n        console.log(actionType)\r\n        fetch('/queue/action',\r\n            {\r\n                method:\"POST\",\r\n                headers:headersDefault(),\r\n\r\n                body:JSON.stringify({\r\n                    action:actionType,\r\n                    queue_id:window.location.hash.split('/')[2],\r\n                    record_id:props.record_id\r\n                })\r\n            })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                props.updateStudentList()\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.allowMove &&\r\n                <Dropdown className={\"mr-2\"}>\r\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\"\r\n                                     className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                        <Image src=\"static/img/arrowBoth.svg\" width=\"28\"/>\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu className=\"drop-menu\">\r\n                        <Dropdown.Item className=\"drop-item\" onClick={() => action(1)}>\r\n                            В начало <Image src=\"/static/img/arrowTop.svg\" width=\"25\"/>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"drop-item\" onClick={() => action(2)}>\r\n                            Выше на 1 <Image src=\"/static/img/arrowUp.svg\" width=\"20\"/>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"drop-item\" onClick={() => action(3)}>\r\n                            Ниже на 1 <Image src=\"/static/img/arrowDown.svg\" width=\"20\"/>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"drop-item\" onClick={() => action(4)}>\r\n                            В конец <Image src=\"/static/img/arrowLast.svg\" width=\"23\"/>\r\n                        </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            }\r\n            {\r\n                props.allowDelete &&\r\n                <Dropdown className={\"mr-2\"}>\r\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\"\r\n                                     className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                        <Image src=\"static/img/delete.svg\" className=\"big-icon\" width=\"26\"/>\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu className=\"drop-menu\">\r\n                        <Popover.Title as=\"h4\"><b>Подтвердите действие</b></Popover.Title>\r\n                        <Dropdown.Item className=\"drop-item mt-2\" onClick={() => action(5)}>\r\n                            Удалить запись <Image src=\"/static/img/delete.svg\" className=\"big-icon\" width=\"20\"/>\r\n                        </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default StudentActionsContainer;\r\n","import React, { Component, useState } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Image,\r\n    Button,\r\n    DropdownButton,\r\n    Dropdown,\r\n    Popover,\r\n    OverlayTrigger,\r\n    Form\r\n} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { connect } from 'react-redux'\r\nimport StudentModalActionsContainer from './StudentModalActionsContainer'\r\nimport StudentActionsContainer from './StudentActionsContainer'\r\nimport headersDefault from \"../../../../fetchDefault\";\r\nimport socket from \"../../../../WebSocket\";\r\nimport { sign_out } from \"../../../../actions/user\";\r\n\r\n\r\nclass StudentPreview extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.action = this.action.bind(this)\r\n        this.updateCommentList = this.updateCommentList.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.state = {\r\n            commentValue: \"\",\r\n            comments: []\r\n        }\r\n        console.log(\"constr\")\r\n    }\r\n\r\n    updateCommentList() {\r\n        fetch('/comments', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n            body: JSON.stringify({\r\n                queue_id: window.location.hash.split('/')[2],\r\n                record_id: this.props.id,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                this.setState({ comments: data })\r\n                console.log(this.state.comments)\r\n            })\r\n    }\r\n\r\n    action() {\r\n        fetch('/queue/comment',\r\n            {\r\n                method: \"POST\",\r\n                headers: headersDefault(),\r\n\r\n                body: JSON.stringify({\r\n                    queue_id: window.location.hash.split('/')[2],\r\n                    record_id: this.props.id,\r\n                    value: this.state.commentValue,\r\n                    author: this.props.user.id\r\n                })\r\n            })\r\n            .then(data => data.json())\r\n            .then(this.updateCommentList)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.updateCommentList()\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        const value = event.target.value\r\n        this.setState({ commentValue: value })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"0-----------0\")\r\n        return (\r\n            <Container className=\"bg-white col-12 custom-block queue-element p-2 mb-2\">\r\n                <Row>\r\n                    <Col className=\"col-12 col-lg-4 d-flex align-items-center\">\r\n                        <div>\r\n                            <span className=\"badge custom-badge badge-primary mr-1 mr-lg-3 ml-0 ml-lg-2\">\r\n                                <big className=\"font-weight-bold\">{this.props.index || \"0\"}</big>\r\n                            </span>\r\n                            {this.props.group && <>\r\n                                <span className=\"badge custom-badge badge-info mr-1 mr-lg-2\">\r\n                                    <big className=\"font-weight-lighter\">{this.props.group}</big>\r\n                                </span>\r\n                            </>}\r\n                            <big className=\"align-middle\">\r\n                                {this.props.name} {this.props.surname}\r\n                            </big>\r\n\r\n                        </div>\r\n                    </Col>\r\n                    <Col className=\"col-auto mt-2 mb-2 mt-lg-0 mb-lg-0 col-lg-4 d-flex align-items-center\">\r\n                        <big className=\"ml-2\"><b>{this.props.task}</b></big>\r\n                    </Col>\r\n                    <Col className=\"col-12 col-lg-3 d-flex justify-content-start align-items-center\">\r\n                        <Dropdown className=\"mr-1 mr-lg-2\">\r\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\"\r\n                                className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                                <Image src=\"static/img/dots.svg\" className=\"big-icon\" width=\"26\" />\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu className=\"drop-menu\">\r\n                                <Container>\r\n                                    <div>\r\n                                        <span className=\"text-muted\">Дата:</span> {this.props.date}\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className=\"text-muted\">Кол-во записей:</span> {this.props.count}\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className=\"text-muted\">Логин:</span> {this.props.login}\r\n                                    </div>\r\n                                </Container>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        {\r\n                            (this.props.user.role !== 'student' || this.props.user.id === this.props.author) &&\r\n                            <Dropdown className=\"mr-1 mr-lg-2\">\r\n                                <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\"\r\n                                    className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                                    <Image src=\"static/img/comments.svg\" className=\"big-icon\" width=\"26\" />\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu className=\"comments\">\r\n                                    <Container className=\"mt-2\">\r\n                                        {\r\n                                            this.state.comments && this.state.comments.map(comment =>\r\n                                                <div className=\"mb-1 custom-card border bg-light p-2\">\r\n                                                    <div className=\"text-info m-0 p-0\">{comment.author}</div>\r\n                                                    <div>{comment.text}</div>\r\n                                                    <small className=\"text-muted\">{comment.date}</small>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n\r\n                                        <hr />\r\n                                        <Form.Group controlId=\"formGridDescription\"\r\n                                            className=\"d-flex align-items-center\">\r\n                                            <Form.Control\r\n                                                name={\"description\"}\r\n                                                as=\"textarea\"\r\n                                                className=\"custom-form locked-height form-control-sm\"\r\n                                                rows=\"2\"\r\n                                                placeholder=\"Оставьте комментарий...\"\r\n                                                value={this.state.taskValue}\r\n                                                onChange={this.handleOnChange}\r\n                                            />\r\n                                            <Button className=\"ml-2 btn btn-light custom-btn icon-btn\"\r\n                                                onClick={this.action}>\r\n                                                <Image src=\"static/img/send.svg\" className=\"big-icon\" width=\"28\" />\r\n                                            </Button>\r\n                                        </Form.Group>\r\n                                    </Container>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        }\r\n\r\n                        {\r\n                            <StudentActionsContainer\r\n                                record_id={this.props.id}\r\n                                updateStudentList={this.props.updateStudentList}\r\n                                allowDelete={this.props.user.role !== 'student' || this.props.user.id === this.props.author}\r\n                                allowMove={this.props.user.role !== 'student'}\r\n                            />\r\n                        }\r\n                        {/* <Dropdown className={\"mr-2\"}>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\"\r\n                            className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                            <Image src=\"static/img/arrowBoth.svg\" width=\"28\" />\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu className=\"drop-menu\">\r\n                            <Dropdown.Item className=\"drop-item\">\r\n                                В начало <Image src=\"/static/img/arrowTop.svg\" width=\"25\" />\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"drop-item\">\r\n                                Выше на 1 <Image src=\"/static/img/arrowUp.svg\" width=\"20\" />\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"drop-item\">\r\n                                Ниже на 1 <Image src=\"/static/img/arrowDown.svg\" width=\"20\" />\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item className=\"drop-item\">\r\n                                В конец <Image src=\"/static/img/arrowLast.svg\" width=\"23\" />\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    */}\r\n                        {\r\n                            /*\r\n                            <Button\r\n                            className=\"btn custom-btn icon-btn mr-2\"\r\n                            variant=\"link\"\r\n                            onClick={() => setModalShow(true)}>\r\n                            <Image src=\"static/img/caretRight.svg\"/>\r\n                        </Button>\r\n                        <StudentModalActionsContainer\r\n                            login={props.login}\r\n                            show={modalShow}\r\n                            onHide={() => {\r\n                                setModalShow(false)\r\n                            }}\r\n                            />\r\n                            */\r\n                        }\r\n\r\n                    </Col>\r\n\r\n                    {/*<Col>\r\n                    {props.tags && props.tags.map(elem =>\r\n                        <span\r\n                            className=\"badge custom-badge badge-primary\"\r\n                            key={\"spanStudentTag_\" + elem}\r\n                        >\r\n                            {elem}\r\n                        </span>\r\n                    )}\r\n                </Col>*/}\r\n                </Row>\r\n            </Container >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default StudentPreview;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(StudentPreview)\r\n","import React, { Component, useState } from 'react';\r\nimport { Col, Row, Container, Spinner } from 'react-bootstrap'\r\nimport StudentPreview from \"./StudentPreview\"\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nclass ListQueues extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        };\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        console.log(result)\r\n        console.log(\"item id\", result.draggableId)\r\n        console.log(\"from\", result.source.index)\r\n        console.log(\"to\", result.destination.index)\r\n        this.moved(result.draggableId, result.destination.index)\r\n    }\r\n\r\n    moved(record_id, to) {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        fetch('/queue/action',\r\n            {\r\n                method: \"POST\",\r\n                headers: headersDefault(),\r\n                body: JSON.stringify({\r\n                    action: 6,\r\n                    queue_id: window.location.hash.split('/')[2],\r\n                    record_id,\r\n                    to\r\n                })\r\n            })\r\n            .then(data => {\r\n                this.props.updateStudentList()\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            }\r\n            )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.loading)\r\n            return (\r\n                <Container className=\"col-12 d-flex justify-content-center align-items-center\">\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </Container>\r\n            )\r\n        else\r\n            return (\r\n                <Container className=\"p-3 col-12\">\r\n                    <DragDropContext onDragEnd={this.onDragEnd}>\r\n                        <Droppable\r\n                            droppableId=\"droppable\">\r\n                            {provided => (\r\n                                <Col\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}\r\n                                >\r\n                                    {this.props.studentList && this.props.studentList.map((item, index) => (\r\n                                        <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                            {provided => (\r\n                                                <Row\r\n                                                    ref={provided.innerRef}\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                >\r\n\r\n                                                    <StudentPreview\r\n                                                        key={`QueueContainer_${item.id}`}\r\n                                                        id={item.id}\r\n                                                        name={item.name}\r\n                                                        surname={item.surname}\r\n                                                        login={item.login}\r\n                                                        task={item.task}\r\n                                                        index={item.index}\r\n                                                        tags={item.tags}\r\n                                                        author={item.author}\r\n                                                        group={item.group}\r\n                                                        count={item.count}\r\n                                                        date={item.date}\r\n                                                        updateStudentList={this.updateStudentList}\r\n                                                    />\r\n                                                </Row>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </Col>\r\n                            )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                </Container>\r\n\r\n            );\r\n    }\r\n}\r\n\r\n\r\nexport default ListQueues;","import React from 'react';\r\nimport { Col, Row, Container } from 'react-bootstrap'\r\nimport StudentPreview from \"./StudentPreview\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction ListQueues(props) {\r\n    return (\r\n        <Container className=\"p-3 col-12\" >\r\n            <Col>\r\n                {props.studentList && props.studentList.map(elem =>\r\n                    <Row\r\n                        key={`RowQueueContainer_${elem.id}`}\r\n                    >\r\n                        <StudentPreview\r\n                            key={`QueueContainer_${elem.id}`}\r\n                            id={elem.id}\r\n                            name={elem.name}\r\n                            surname={elem.surname}\r\n                            login={elem.login}\r\n                            task={elem.task}\r\n                            index={elem.index}\r\n                            tags={elem.tags}\r\n                            author={elem.author}\r\n                            group={elem.group}\r\n                            count={elem.count}\r\n                            date={elem.date}\r\n                            updateStudentList={props.updateStudentList}\r\n                        />\r\n                    </Row>\r\n                )}\r\n            </Col>\r\n\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default ListQueues;","import React, {Component} from 'react';\r\nimport {Row, Col, Container, Image, Button, Form, Dropdown, Popover} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {connect} from 'react-redux'\r\n\r\nclass JoinQueueContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.joinQueue = this.joinQueue.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.taskCheck = this.taskCheck.bind(this)\r\n        this.state = {\r\n            taskValue:\"\",\r\n            taskError:false,\r\n            taskRule:[\r\n                v => !!v || \"Введите значение.\",\r\n                v => v.length > 2 || \"Миниальная длина: 2 символа\",\r\n            ]\r\n        }\r\n\r\n    }\r\n\r\n    async joinQueue() {\r\n        await this.taskCheck(this.state.taskValue)\r\n        if (!this.state.taskError)\r\n            this.props.joinQueue(this.props.user.id, this.state.taskValue)\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        const value = event.target.value\r\n        this.taskCheck(value)\r\n        this.setState({taskValue:value})\r\n    }\r\n\r\n    taskCheck(value) {\r\n        this.setState(prevState => {\r\n            const errors = prevState.taskRule.map(e => {\r\n                let err = e(value)\r\n                return err !== true ? err : null\r\n            })\r\n                .filter(function (e) {\r\n                    return e !== null\r\n                })\r\n                .map(e => <p className=\"p-0 m-0\">{e}</p>)\r\n            prevState.taskError = errors.length === 0 ? false : errors\r\n            return prevState\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"p-2 p-lg-4 col-12 col-lg-6\">\r\n                <Container className=\"p-3 custom-paper bg-light\">\r\n\r\n                    {\r\n                        this.props.started ?\r\n                            <Row>\r\n                                <Col className=\"d-flex align-items-end col-12 col-lg-3\">\r\n                                    <h5> Записаться </h5>\r\n                                </Col>\r\n                                <Col className=\"d-flex flex-row align-items-end col-12 col-lg-7\">\r\n                                    <Form.Label className=\"mr-3 d-none d-lg-block\"> Работа: </Form.Label>\r\n                                    <Form.Group controlId=\"exampleForm.ControlSelect2\" className=\"p-0 m-0 w-100\">\r\n                                        <Form.Control\r\n                                            isInvalid={!!this.state.taskError}\r\n                                            placeholder=\"Введите значение\"\r\n                                            className=\"custom-textform\"\r\n                                            type=\"text\"\r\n                                            value={this.state.taskValue}\r\n                                            onChange={this.handleOnChange}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {this.state.taskError}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col className=\"d-flex align-items-center justify-content-center mt-2 mt-lg-0\">\r\n                                    <Dropdown className={\"mr-2 mr-lg-3\"}>\r\n                                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-down\"\r\n                                                         className=\"btn btn-light custom-btn icon-btn drop\" as=\"Button\">\r\n                                            <Image src=\"static/img/plusBlack.svg\" className=\"big-icon\" width=\"28\"/>\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu className=\"drop-menu\">\r\n                                            <Popover.Title as=\"h4\"><b>Подтвердите действие</b></Popover.Title>\r\n                                            <Dropdown.Item className=\"drop-item mt-2\" onClick={this.joinQueue}>\r\n                                                Записаться <Image src=\"/static/img/accept.svg\" width=\"24\"/>\r\n                                            </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </Col>\r\n                            </Row>\r\n                            :\r\n                            <Row>\r\n                                <Col className=\"d-flex align-items-end col-12\">\r\n                                    <h5> Запись в очередь еще не доступна </h5>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                </Container>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default JoinQueueContainer;\r\nexport default connect(\r\n    state => ({\r\n        user:state.user\r\n    }),\r\n    dispatch => ({})\r\n)(JoinQueueContainer)\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Row, Container } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport ListStudentsDND from './ListStudentsDND'\r\nimport ListStudents from './ListStudents'\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport JoinQueueContainer from './JoinQueueContainer'\r\nimport socket from '../../../../WebSocket'\r\nimport { sign_out } from \"../../../../actions/user\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass StudentsListContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.updateStudentList = this.updateStudentList.bind(this)\r\n        this.joinQueue = this.joinQueue.bind(this)\r\n        this.state = {\r\n            studentList: [],\r\n            started: false\r\n        }\r\n    }\r\n\r\n    joinQueue(user_id, task) {\r\n        fetch('/joinqueue', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n            body: JSON.stringify({\r\n                user_id,\r\n                task,\r\n                queue_id: this.props.curr_id,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.success === \"false\")\r\n                    alert(data.causeOfError)\r\n            })\r\n            .then(this.updateStudentList)\r\n    }\r\n\r\n    updateStudentList() {\r\n        fetch('/queuestudents', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n            body: JSON.stringify({ id: this.props.curr_id })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({ studentList: data.list, started: data.started })\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        socket.emit(\"join\", { room: this.props.curr_id })\r\n        socket.on(\"queue updated\", (data) => {\r\n            this.updateStudentList()\r\n        })\r\n        this.updateStudentList()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        socket.emit(\"leave\", { room: this.props.curr_id })\r\n        socket.off(\"queue updated\")\r\n        if (prevProps.curr_id !== this.props.curr_id)\r\n            this.updateStudentList()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <JoinQueueContainer joinQueue={this.joinQueue} started={this.state.started} />\r\n                <Container className=\"p-2 p-lg-4 col-12\">\r\n                    <Container className=\"p-3 custom-paper bg-light col-12\">\r\n                        <Row>\r\n                            {this.props.user.role === \"student\" &&\r\n                                < ListStudents\r\n                                    studentList={this.state.studentList}\r\n                                    updateStudentList={this.updateStudentList}\r\n                                />}\r\n                            {(this.props.user.role === \"admin\" || this.props.user.role === \"teacher\") &&\r\n                                < ListStudentsDND\r\n                                    studentList={this.state.studentList}\r\n                                    updateStudentList={this.updateStudentList}\r\n                                />}\r\n                        </Row>\r\n\r\n                    </Container>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(StudentsListContainer);\r\n","import React, { Component } from 'react';\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport QueueInfoContainer from './QueueInfoContainer'\r\nimport StudentsListContainer from './StudentsListContainer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\nclass QueueContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Container className=\"p-3 col-12\">\r\n                <Row>\r\n                    <QueueInfoContainer curr_id={this.props.curr_id} />\r\n                    <StudentsListContainer curr_id={this.props.curr_id} />\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default QueueContainer;\r\n","\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport QueueContainer from './containers/QueueContainer'\r\n\r\nclass Queue extends Component {\r\n    render() {\r\n        return (\r\n            <QueueContainer curr_id={this.props.match.params.curr_id}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Queue;\r\n","import React, {Component} from \"react\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport headersDefault from \"../../../fetchDefault\";\r\nimport QueuesFilterContainer from \"../../containers/QueuesFilterContainer\";\r\n\r\nclass Stats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateStats = this.updateStats.bind(this)\r\n        this.formatSeconds = this.formatSeconds.bind(this)\r\n        this.state = {\r\n            statsInfo: {\r\n                avgQueueTime: '',\r\n                avgRecords: '',\r\n                avgRecordTime: '',\r\n                error: false\r\n            },\r\n            filterConfig: {\r\n                discipline: '',\r\n                teacher: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    updateStats(data) {\r\n        this.setState({\r\n            filterConfig: data\r\n        })\r\n        fetch('/stats', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n            body: JSON.stringify({\r\n                ...data\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                let stats = {...data};\r\n                stats.avgQueueTime = this.formatSeconds(data.avgQueueTime)\r\n                stats.avgRecordTime = this.formatSeconds(data.avgRecordTime)\r\n                stats.avgRecords = Math.round(data.avgRecords)\r\n                this.setState({ ...this.state, statsInfo: stats})\r\n            })\r\n    }\r\n\r\n    formatSeconds(timestamp) {\r\n        timestamp = Math.round(timestamp)\r\n        let hours = Math.floor(timestamp / 60 / 60);\r\n        let minutes = Math.floor(timestamp / 60) - (hours * 60);\r\n        let seconds = timestamp % 60;\r\n        return [\r\n            hours.toString().padStart(2, '0'),\r\n            minutes.toString().padStart(2, '0'),\r\n            seconds.toString().padStart(2, '0')\r\n        ].join(':');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateStats(this.state.filterConfig)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"p-3 col-12\">\r\n                <QueuesFilterContainer\r\n                    discipline={true}\r\n                    teacher={true}\r\n                    sendConfig={this.updateStats}\r\n                />\r\n                {this.state.statsInfo.error === true &&\r\n                <div className=\"p-3 col-12 mt-3\">\r\n                    <div className=\"h4\"> Данных для данного запроса не найдено </div>\r\n                </div>}\r\n                <div className=\"p-3 col-12 mt-3 custom-paper\">\r\n                    <div className=\"h5\">\r\n                        <b>Средняя продолжительность очередей:</b> {this.state.statsInfo.avgQueueTime}\r\n                    </div>\r\n                    <div className=\"h5\">\r\n                        <b>Среднее количество закрытых записей:</b> {this.state.statsInfo.avgRecords}\r\n                    </div>\r\n                    <div className=\"h5\">\r\n                        <b>Средняя продолжительность сдачи:</b> {this.state.statsInfo.avgRecordTime}\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stats;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Container, Image } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass ProfileInfoContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Container className=\"mb-3 p-0 col-12\">\r\n                <Container className=\"custom-paper p-3 bg-light\">\r\n                    <Row>\r\n                        <Col className=\"col-10 col-lg-8\">\r\n                            <Row>\r\n                                <Col className=\"col-12\">\r\n                                    <div className=\"mt-2 mb-2\">\r\n                                        <h4 className=\"mb-0\">{this.props.userInfo.name} {this.props.userInfo.surname} {this.props.userInfo.patronymic}</h4>\r\n                                        <div className=\"text-muted\">{this.props.userInfo.login}</div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mb-2\">\r\n                                <Col className=\"col-12 d-flex\">\r\n                                    <div className=\"text-muted mr-2\">Роль:</div>\r\n                                    {this.props.userInfo.role}\r\n                                </Col>\r\n                                {\r\n                                    this.props.user.role === \"student\" &&\r\n                                    < Col className=\"col-12  d-flex\">\r\n                                        <div className=\"text-muted mr-2\">Группа:</div>\r\n                                        {this.props.userInfo.group}\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className=\"col-12  d-flex mb-1\">\r\n                                    <Image src=\"static/img/profile/github.png\" width=\"20\" height=\"20\" />\r\n                                    <div className=\"text-muted mr-2 ml-1\">Github:</div>\r\n                                    {this.props.userInfo.GitID}\r\n                                </Col>\r\n                                <Col className=\"col-12 d-flex\">\r\n                                    <Image src=\"static/img/profile/moodle.png\" className=\"\" width=\"24\" height=\"24\" />\r\n                                    <div className=\"text-muted mr-2\">oodle:</div>\r\n                                    {this.props.userInfo.moodleID}\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col className=\"col-2 col-lg-4\">\r\n                            <Image className=\"mt-2\" src=\"static/img/profile/avatar.png\" width=\"90%\" />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Container >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default ProfileInfoContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(ProfileInfoContainer)\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Col, Row, Container } from 'react-bootstrap'\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport QueuesFilterContainer from \"../../../containers/QueuesFilterContainer\"\r\nimport ListQueues from '../../../containers/ListQueues'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux'\r\nimport { sign_out } from \"../../../../actions/user\";\r\n\r\n\r\nclass ProfileListQueuesContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.sendConfig = this.sendConfig.bind(this)\r\n        this.state = {\r\n            queuesList: [],\r\n            queuesFlag: false,\r\n        }\r\n\r\n    }\r\n    handleClick() {\r\n        this.setState(({ queuesFlag }) => ({ queuesFlag: !queuesFlag }))\r\n    }\r\n\r\n    sendConfig(data) {\r\n        fetch('/profilequeues', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n\r\n            body: JSON.stringify({\r\n                ...data,\r\n                login: this.props.curr_login,\r\n                role: this.props.user.role,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({ queuesList: data })\r\n            })\r\n\r\n    }\r\n\r\n    deleteQueue(user_id, queue_id) {\r\n        fetch('/deletequeue', {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n\r\n            body: JSON.stringify({\r\n                queue_id: queue_id,\r\n                user_id: user_id,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(this.componentDidMount)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.sendConfig({ teacher: '' })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container className=\"p-0\">\r\n                    <Container className=\"p-3 bg-light custom-paper\" >\r\n                        <Row>\r\n                            <Col>\r\n                                <h5 className=\"mb-1\">\r\n                                    Список активных очередей\r\n                                </h5>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"p-1 p-lg-3\">\r\n\r\n                            <QueuesFilterContainer\r\n                                discipline={true}\r\n                                teacher={this.props.user.role === \"admin\"}\r\n                                sendConfig={this.sendConfig} />\r\n\r\n                            <ListQueues queuesList={this.state.queuesList} user={this.props.user} deleteQueue={this.deleteQueue} />\r\n                        </Row>\r\n\r\n                    </Container >\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default ProfileListQueuesContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(ProfileListQueuesContainer)\r\n","import React from 'react';\r\nimport { Container, Image, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { sign_out } from '../../../../actions/user';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction ProfileActionsContainer(props) {\r\n\r\n    return (\r\n        <Container className=\"mb-3 p-0 col-12\">\r\n            <Container className=\"custom-paper p-3 bg-light\">\r\n                <p className=\"h5 mb-3 text-center\">Панель управления</p>\r\n                <Row>\r\n                    <Col className=\"col-12 m-2 d-flex flex-column align-items-center\">\r\n                        <Link className=\"mr-3\" to=\"/enqueue\">\r\n                            <div className=\"btn custom-btn  p-2\">\r\n                                Cписок очередей\r\n                                <Image src=\"static/img/list.svg\" width=\"26\" className=\"ml-3 custom-icon\" />\r\n                            </div>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col className=\"col-12 m-2 d-flex flex-column align-items-center\">\r\n                        <Link className=\"mr-3\" to=\"/profile/editor\">\r\n                            <div className=\"btn custom-btn p-2\">\r\n                                Редактировать профиль\r\n                                <Image src=\"static/img/edit.svg\" width=\"26\" className=\"ml-3 custom-icon\" />\r\n                            </div>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col className=\"col-12 m-2 d-flex flex-column align-items-center\">\r\n                        <Link onClick={props.onSignOut} to=\"/auth/signin\">\r\n                            <div className=\"btn custom-btn  p-2\">\r\n                                Выйти\r\n                                <Image src=\"static/img/logout.svg\" width=\"26\" className=\"ml-3 custom-icon\" />\r\n                            </div>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(ProfileActionsContainer);\r\n","import React, { Component } from 'react';\r\nimport { Row, Container, Col } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ProfileInfoContainer from './ProfileInfoContainer'\r\nimport ProfileQueuesListContainer from './ProfileListQueuesContainer'\r\nimport ProfileActionsContainer from \"./ProfileActionsContainer\";\r\nimport headersDefault from \"../../../../fetchDefault\"\r\nimport { sign_out } from \"../../../../actions/user\";\r\n\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getInfo = this.getInfo.bind(this)\r\n        this.state = {\r\n            userInfo: {\r\n                login: \"\",\r\n                role: \"\",\r\n                name: \"\",\r\n                patronymic: \"\",\r\n                surname: \"\",\r\n                GitID: \"\",\r\n                moodleID: \"\",\r\n                group: \"\",\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getInfo() {\r\n        this.setState({ URLlogin: this.props.curr_login })\r\n        fetch(\"/profile\", {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n            body: JSON.stringify({ login: this.props.curr_login })\r\n        })\r\n            .then(data => data.json())\r\n            .then(res => {\r\n                console.log(res)\r\n                this.setState(prevState => {\r\n                    prevState.userInfo = res\r\n                    return prevState\r\n                })\r\n                if (res === \"NotFounded\") {\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getInfo()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.curr_login !== this.props.curr_login)\r\n            this.getInfo()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"col-12 mt-3 mt-lg-0 p-lg-4\">\r\n                <Row>\r\n                    <Col className=\"col-12 col-lg-4\">\r\n                        <ProfileInfoContainer\r\n                            userInfo={this.state.userInfo}\r\n                        />\r\n                        {(this.props.curr_login === this.props.user.login) &&\r\n                            <ProfileActionsContainer />}\r\n                    </Col>\r\n                    <Col className=\"col-12 col-lg-8\">\r\n                        {\r\n                            (this.props.curr_login === this.props.user.login || this.props.user.role === \"admin\" || this.props.user.role === \"student\") &&\r\n                            <ProfileQueuesListContainer curr_login={this.props.curr_login} />\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default ProfileContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(ProfileContainer)\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ProfileContainer from './containers/ProfileContainer'\r\n\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n        return (\r\n            <ProfileContainer curr_login={this.props.match.params.curr_login} />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Profile;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Container, Button, FormControl, InputGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux'\r\nimport { info_upd } from '../../../../actions/user';\r\nimport headersDefault from \"../../../../fetchDefault\"\r\n\r\n\r\n\r\nclass ProfileEditorContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.handleOnClick = this.handleOnClick.bind(this)\r\n        this.handleVerify = this.handleVerify.bind(this)\r\n        this.handleFullVerify = this.handleFullVerify.bind(this)\r\n\r\n        this.state = {\r\n            values: {\r\n                email: '',\r\n                login: '',\r\n                name: '',\r\n                surname: '',\r\n                patronymic: '',\r\n                GithubLogin: '',\r\n                MoodleLogin: '',\r\n            },\r\n            errors: {\r\n                login: false,\r\n                email: false,\r\n                name: false,\r\n                surname: false,\r\n                patronymic: '',\r\n                GithubLogin: false,\r\n                MoodleLogin: false,\r\n\r\n            },\r\n            rules: {\r\n                email: [\r\n                    v => !v || v.search(/^(([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6})$/g) !== -1 || \"Формат почты не верный\"\r\n                ],\r\n                login: [\r\n                    v => !v || v.length > 5 || \"Логин должен быть длиннее 5 символов.\",\r\n                    v => !v || v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"Логин может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => !v || v.search(/^[a-zA-Z]/) !== -1 || \"Логин может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                name: [\r\n                    v => !v || v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Имя может содержать только символы - а-я А-Я a-z A-Z\"\r\n                ],\r\n                surname: [\r\n                    v => !v || v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Фамилия может содержать только символы - а-я А-Я a-z A-Z\"\r\n                ],\r\n                patronymic: [\r\n                    v => !v || v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Отчество может содержать только символы - а-я А-Я a-z A-Z\"\r\n                ],\r\n                GithubLogin: [\r\n                    v => !v || v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"GithubLogin может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => !v || v.search(/^[a-zA-Z]/) !== -1 || \"GithubLogin может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                MoodleLogin: [\r\n                    v => !v || v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"MoodleLogin может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => !v || v.search(/^[a-zA-Z]/) !== -1 || \"MoodleLogin может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n            },\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleOnChange(event) {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState(prevState => {\r\n            prevState.values[name] = value\r\n            return prevState\r\n        })\r\n        this.handleVerify(name, value)\r\n    }\r\n\r\n    handleVerify(name, value) {\r\n        this.setState(prevState => {\r\n            const errors = prevState.rules[name].map(e => {\r\n                let err = e(value)\r\n                return err !== true ? err : null\r\n            })\r\n                .filter(function (e) {\r\n                    return e !== null\r\n                })\r\n                .map(e => <p className=\"p-0 m-0\">{e}</p>)\r\n            prevState.errors[name] = errors.length === 0 ? false : errors\r\n            return prevState\r\n        })\r\n    }\r\n    async handleFullVerify() {\r\n\r\n        await Object.entries(this.state.values).forEach(([key, value]) => {\r\n            this.handleVerify(key, value)\r\n        })\r\n        console.log(JSON.stringify(this.state.errors))\r\n        return Object.values(this.state.errors).every(e => !e)\r\n    }\r\n    handleOnClick() {\r\n        this.handleFullVerify()\r\n            .then(data => {\r\n                if (data)\r\n                    fetch(\"/profile/editor/updateinfo\", {\r\n                        method: 'POST',\r\n                        headers: headersDefault(),\r\n\r\n                        body: JSON.stringify({\r\n                            user_id: this.props.user.id,\r\n                            newData: {\r\n                                ...this.state.values\r\n                            }\r\n                        })\r\n                    })\r\n                        .then(data => data.json())\r\n                        .then(data => {\r\n                            if (data.success === true) {\r\n                                this.props.onInfoUpd(data.newInfo)\r\n                            }\r\n                            console.log(data)\r\n                        })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"m-3 p-0 col-12\">\r\n                <Container className=\"custom-paper p-3 bg-light\">\r\n                    <Col className=\"col-12 m-2 d-flex flex-column align-items-center\">\r\n                        <h5> Редактировать профиль</h5>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <p className=\"mb-0\">Сейчас ФИО: <b> {this.props.userInfo.name} {this.props.userInfo.surname} {this.props.userInfo.patronymic}</b></p>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новое Имя</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.name}\r\n                                    name={\"name\"}\r\n                                    value={this.state.values.name}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Новое имя\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.name}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новая Фамилия</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.surname}\r\n                                    name={\"surname\"}\r\n                                    value={this.state.values.surname}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Новая фамилия\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.surname}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новое Отчество</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.patronymic}\r\n                                    name={\"patronymic\"}\r\n                                    value={this.state.values.patronymic}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Новое отчество\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.patronymic}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <p className=\"mb-0\">Сейчас Почта: <b>{this.props.userInfo.email}</b></p>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новая Почта</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.email}\r\n                                    name={\"email\"}\r\n                                    value={this.state.values.email}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"email\"\r\n                                    placeholder=\"Новая почта\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.email}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <p className=\"mb-0\">Сейчас Логин: <b>{this.props.userInfo.login}</b> </p>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новый Логин</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.login}\r\n                                    name={\"login\"}\r\n                                    value={this.state.values.login}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Новый логин\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.login}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <p className=\"mb-0\">Сейчас GithubLogin: <b>{this.props.userInfo.GithubLogin}</b></p>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новый GithubLogin</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.GithubLogin}\r\n                                    name={\"GithubLogin\"}\r\n                                    value={this.state.values.GithubLogin}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Новый GithubLogin\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.GithubLogin}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <p className=\"mb-0\">Сейчас MoodleLogin: <b> {this.props.userInfo.MoodleLogin}</b> </p>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"custom-form\">Новый MoodleLogin</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    isInvalid={!!this.state.errors.MoodleLogin}\r\n                                    name={\"MoodleLogin\"}\r\n                                    value={this.state.values.MoodleLogin}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Новый MoodleLogin\"\r\n                                    className=\"custom-endform\"\r\n                                />\r\n                                <FormControl.Feedback type=\"invalid\">\r\n                                    {this.state.errors.MoodleLogin}\r\n                                </FormControl.Feedback>\r\n                            </InputGroup>\r\n                        </Row>\r\n                    </Col>\r\n                    <Link\r\n                        className=\"btn icon-btn mr-3\"\r\n                        to={`/profile/${this.props.user.login}`}>\r\n                        <Button\r\n                            variant=\"danger\"\r\n                            className=\"custom-btn mr-3 mb-2\"\r\n                        >\r\n                            Отмена\r\n                        </Button>\r\n                    </Link>\r\n                    <Link\r\n                        className=\"btn icon-btn mr-3\"\r\n                        to={`/profile/${this.props.user.login}`}>\r\n                        <Button\r\n                            variant=\"success\"\r\n                            className=\"custom-btn mr-3 mb-2\"\r\n                            onClick={this.handleOnClick}\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                    </Link>\r\n\r\n                </Container>\r\n            </Container >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default ProfileEditorContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onInfoUpd: (data) => {\r\n            dispatch(info_upd(data))\r\n        }\r\n    })\r\n)(ProfileEditorContainer)\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ProfileEditorForm from './ProfileEditorForm'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux'\r\nimport headersDefault from \"../../../../fetchDefault\"\r\n\r\n\r\nclass ProfileEditorContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.getInfo = this.getInfo.bind(this)\r\n        this.state = {\r\n            userInfo: {}\r\n        }\r\n    }\r\n\r\n    getInfo() {\r\n        fetch(\"/profile/editor/needinfo\", {\r\n            method: 'POST',\r\n            headers: headersDefault(),\r\n\r\n            body: JSON.stringify({\r\n                user_id: this.props.user.id,\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                if (data.error)\r\n                    console.error(data.error)\r\n                else {\r\n                    this.setState({ userInfo: data.userInfo })\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getInfo()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ProfileEditorForm userInfo={this.state.userInfo} />\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default ProfileEditorContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({})\r\n)(ProfileEditorContainer)\r\n\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ProfileEditorContainer from './containers/ProfileEditorContainer'\r\n\r\n\r\nclass ProfileEditor extends Component {\r\n    render() {\r\n        return (\r\n            <ProfileEditorContainer />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileEditor;\r\n\r\n","\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { sign_out } from '../../actions/user';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, Image, Nav } from 'react-bootstrap'\r\n\r\nimport \"../styles/styles.css\"\r\n// import NavDropdown from 'react-bootstrap/NavDropdown'\r\n\r\n\r\n\r\nfunction CustomNavbar(props) {\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" variant=\"light\" className=\"custom-nav\">\r\n            <Link to=\"/\" >\r\n                <Navbar.Brand className=\"p-0\">\r\n                    <Image src=\"static/img/logo.png\" width=\"45\" height=\"45\" className=\"p-0 mr-3\" />\r\n                    <b className=\"custom-logoname mr-1\">El Queue</b>\r\n                </Navbar.Brand>\r\n            </Link>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                {\r\n                    props.user.isAuth ?\r\n                        <>\r\n                            <Nav className=\"mr-auto\">\r\n                                <Nav.Link className=\"mr-2\" href=\"#/\">Очереди</Nav.Link>\r\n                                {props.user.role !== \"student\" && <Nav.Link className=\"mr-2\" href=\"#/addqueue\">Создать очередь</Nav.Link>}\r\n                                {props.user.role === \"admin\" && <Nav.Link className=\"mr-2\" href=\"#/admindb\">Администрирование</Nav.Link>}\r\n                                <Nav.Link className=\"mr-2\" href=\"#/stats\">Статистика</Nav.Link>\r\n                            </Nav>\r\n                            <Nav>\r\n                                <Nav.Link href={`#/profile/${props.user.login}`}>Профиль: {props.user.login}</Nav.Link>\r\n                            </Nav>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Nav className=\"mr-auto\" />\r\n                            <Nav>\r\n                                <Nav.Link href=\"#/auth/signin\">Вход</Nav.Link>\r\n                                <Nav.Link href=\"#/auth/signup\">Регистрация</Nav.Link>\r\n                            </Nav>\r\n                        </>\r\n                }\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\n\r\n// export default CustomNavbar;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        }\r\n    })\r\n)(CustomNavbar)\r\n","import { Col, Container, Form, Button } from 'react-bootstrap'\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport { sign_in } from '../../../../actions/user';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import socket from '../../../WebSocket'\r\n\r\n\r\nclass SignInForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleFullVerify = this.handleFullVerify.bind(this)\r\n        this.handleVerify = this.handleVerify.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.state = {\r\n            values: {\r\n                login: '',\r\n                password: '',\r\n            },\r\n            errors: {\r\n                login: false,\r\n                password: false,\r\n\r\n            },\r\n            rules: {\r\n                login: [\r\n                    v => !!v || \"Введите логин.\",\r\n                ],\r\n                password: [\r\n                    v => !!v || \"Введите пароль.\",\r\n                ],\r\n\r\n            }\r\n        }\r\n    }\r\n    handleOnChange(event) {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState(prevState => {\r\n            prevState.values[name] = value\r\n            return prevState\r\n        })\r\n        this.handleVerify(name, value)\r\n    }\r\n    async handleFullVerify() {\r\n\r\n        await Object.entries(this.state.values).forEach(([key, value]) => {\r\n            if (key === \"secretKey\")\r\n                if (this.state.values.role === \"Студент\")\r\n                    return\r\n            if (key === \"group\")\r\n                if (this.state.values.role !== \"Студент\")\r\n                    return\r\n\r\n            this.handleVerify(key, value)\r\n        })\r\n        console.log(JSON.stringify(this.state.errors))\r\n        return Object.values(this.state.errors).every(e => !e)\r\n    }\r\n\r\n    handleVerify(name, value) {\r\n        this.setState(prevState => {\r\n            const errors = prevState.rules[name].map(e => {\r\n                let err = e(value)\r\n                return err !== true ? err : null\r\n            })\r\n                .filter(function (e) {\r\n                    return e !== null\r\n                })\r\n                .map(e => <p className=\"p-0 m-0\">{e}</p>)\r\n            prevState.errors[name] = errors.length === 0 ? false : errors\r\n            return prevState\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        this.handleFullVerify()\r\n            .then((data) => {\r\n                if (data) {\r\n                    fetch('/signin', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            Authorization:\"JWT \" + localStorage.getItem(\"accesstoken\"),\r\n                            'Content-Type':'application/json;charset=utf-8'\r\n                        },\r\n                        body: JSON.stringify(this.state.values)\r\n                    })\r\n                        .then(data => data.json())\r\n                        .then(data => {\r\n                            console.log(data)\r\n                            if (data.isAuth) {\r\n                                this.props.onSignIn(data)\r\n                                window.location.hash = \"#/\"\r\n                            }\r\n                            else {\r\n                                alert(\"Неверный логин или пароль\")\r\n                            }\r\n\r\n                        })\r\n                    event.preventDefault();\r\n                }\r\n            })\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"col-12 col-lg-6 p-3 \">\r\n                <Container className=\"custom-paper bg-light p-3\">\r\n                    <p className=\"h5 mb-3 text-center\">Авторизация</p>\r\n                    <Col>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"formBasicLogin\">\r\n                                <Form.Label>Логин</Form.Label>\r\n                                <Form.Control\r\n                                    isInvalid={!!this.state.errors.login}\r\n                                    name={\"login\"}\r\n                                    value={this.state.values.login}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Введите логин\"\r\n                                    className=\"custom-textform\"\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.errors.login}\r\n                                </Form.Control.Feedback>\r\n                                <Form.Text className=\"text-muted\">\r\n                                    Ваш логин не будет передан третьим лицам.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Пароль</Form.Label>\r\n                                <Form.Control\r\n                                    isInvalid={!!this.state.errors.password}\r\n                                    name={\"password\"}\r\n                                    value={this.state.values.password}\r\n                                    onChange={this.handleOnChange}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Введите пароль\"\r\n                                    className=\"custom-textform\"\r\n                                    ref={(input) => this.passwordInput = input}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.errors.password}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" className=\"custom-btn mr-3 mb-2\">\r\n                                Войти\r\n                            </Button>\r\n                            <Link className=\"btn custom-btn icon-btn mr-3\" to=\"/auth/signup\">\r\n                                <Button variant=\"secondary\" className=\"custom-btn mr-3 mb-2\">\r\n                                    Регистрация\r\n                                </Button>\r\n                            </Link>\r\n                        </Form>\r\n                    </Col>\r\n                </Container>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default SignInForm;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignIn: (data) => {\r\n            dispatch(sign_in(data))\r\n        }\r\n    })\r\n)(SignInForm)\r\n","import { Container, Button, Image } from 'react-bootstrap'\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import socket from '../../../WebSocket'\r\n\r\n\r\nclass OAuthContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleGitLogIn = this.handleGitLogIn.bind(this)\r\n        this.state = {\r\n        }\r\n    }\r\n    handleGitLogIn() {\r\n        fetch('/githubauth', { mode: \"no-cors\" })\r\n            .then(data => {\r\n                if (data.status === 302)\r\n                    return data.json()\r\n            })\r\n            .then(data => {\r\n                document.location = data.auth_url;\r\n            })\r\n        // not completed\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"col-12 col-lg-3 p-3 \" >\r\n                <Container className=\"p-3 d-flex justify-content-center\">\r\n                    <Button className=\"custom-btn bg-white text-secondary custom-block pr-3 pl-3\" onClick={this.handleGitLogIn}>\r\n                        <Image src=\"static/img/profile/github.png\" className=\"mr-2\" width=\"30\" height=\"30\" />\r\n                        Войти через GitHub\r\n                    </Button>\r\n                </Container>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default OAuthContainer;\r\n","\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SignInForm from './SignInForm'\r\nimport OAuthContainer from '../oauth/OAuthContainer'\r\n\r\n\r\nclass SignIn extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <SignInForm />\r\n                <OAuthContainer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignIn;\r\n","import {Col, Container, Form, Button} from 'react-bootstrap'\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import socket from '../../../WebSocket'\r\n\r\n\r\nclass SignUpForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleFullVerify = this.handleFullVerify.bind(this)\r\n        this.handleVerify = this.handleVerify.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.state = {\r\n            values:{\r\n                login:'',\r\n                email:'',\r\n                password1:'',\r\n                password2:'',\r\n                name:'',\r\n                surname:'',\r\n                role:(props.curr_key && props.curr_key.match(/^curr_key/)) ? 'Преподаватель' : 'Студент',\r\n                group:'',\r\n                secretKey:(props.curr_key && props.curr_key.match(/^curr_key/)) ? props.curr_key.replace(/curr_key/, '') : '',\r\n                GithubLogin:'',\r\n                MoodleLogin:'',\r\n                recaptcha:'',\r\n            },\r\n            errors:{\r\n                login:false,\r\n                email:false,\r\n                password1:false,\r\n                password2:false,\r\n                name:false,\r\n                surname:false,\r\n                role:false,\r\n                group:false,\r\n                secretKey:false,\r\n                GithubLogin:false,\r\n                MoodleLogin:false,\r\n                recaptcha:false,\r\n            },\r\n            rules:{\r\n                email:[v => v.search(/^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/g) !== -1 || \"Формат почты не верный\"],\r\n                login:[\r\n                    v => !!v || \"Введите логин.\",\r\n                    v => v.length > 5 || \"Логин должен быть длиннее 5 символов.\",\r\n                    v => v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"Логин может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => v.search(/^[a-zA-Z]/) !== -1 || \"Логин может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                password1:[\r\n                    v => !!v || \"Введите пароль.\",\r\n                    v => v.length > 8 || \"Пароль должен быть длиннее 8 символов.\",\r\n                    v => v.search(/(?=.*[0-9])/g) !== -1 || \"Пароль должен содержать хотя бы одну цифру.\",\r\n                    v => v.search(/(?=.*[!@#$%^&*])/g) !== -1 || \"Пароль должен содержать хотя бы один специмвол (!@#$%^&*).\",\r\n                    v => v.search(/(?=.*[a-z])/g) !== -1 || \"Пароль должен содержать хотя бы одну латинскую букву в нижнем регистре.\",\r\n                    v => v.search(/(?=.*[A-Z])/g) !== -1 || \"Пароль должен содержать хотя бы одну латинскую букву в верхнем регистре.\",\r\n                    v => v.search(/[!@#$%^&*0-9a-zA-Z]/g) !== -1 || \"Пароль может содержать только !@#$%^&*0-9a-zA-Z.\"],\r\n                password2:[\r\n                    v => !!v || \"Введите пароль.\",\r\n                    v => v === this.password1Input.value || \"Пароли не соовпадают.\"],\r\n                name:[\r\n                    v => !!v || \"Введите имя.\",\r\n                    v => v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Имя может содержать только символы - а-я А-Я a-z A-Z\"],\r\n                surname:[\r\n                    v => v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Фамилия может содержать только символы - а-я А-Я a-z A-Z\",\r\n                    v => !!v || \"Введите имя.\"],\r\n                role:[v => !!v || \"Выберите тип.\"],\r\n                group:[\r\n                    v => !!v || \"Выберите группу.\",\r\n                    v => v.search(/^[0-9]{4}$/) !== -1 || \"Группа должна состоять только из 4 цифр\",\r\n\r\n                ],\r\n                secretKey:[v => !!v || \"Введите секретный ключ.\"],\r\n                GithubLogin:[\r\n                    v => !!v || \"Введите GithubLogin.\",\r\n                    v => v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"GithubLogin может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => v.search(/^[a-zA-Z]/) !== -1 || \"GithubLogin может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                MoodleLogin:[\r\n                    v => !!v || \"Введите MoodleLogin.\",\r\n                    v => v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"MoodleLogin может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => v.search(/^[a-zA-Z]/) !== -1 || \"MoodleLogin может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                recaptcha:[v => !!v || \"Введите recaptcha.\"],\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState(prevState => {\r\n            prevState.values[name] = value\r\n            return prevState\r\n        })\r\n        this.handleVerify(name, value)\r\n    }\r\n\r\n    async handleFullVerify() {\r\n\r\n        await Object.entries(this.state.values).forEach(([key, value]) => {\r\n            if (key === \"secretKey\")\r\n                if (this.state.values.role === \"Студент\")\r\n                    return\r\n            if (key === \"group\")\r\n                if (this.state.values.role !== \"Студент\")\r\n                    return\r\n\r\n            this.handleVerify(key, value)\r\n        })\r\n        console.log(JSON.stringify(this.state.errors))\r\n        return Object.values(this.state.errors).every(e => !e)\r\n    }\r\n\r\n    handleVerify(name, value) {\r\n\r\n        this.setState(prevState => {\r\n            const errors = prevState.rules[name].map(e => {\r\n                let err = e(value)\r\n                return err !== true ? err : null\r\n            })\r\n                .filter(function (e) {\r\n                    return e !== null\r\n                })\r\n                .map(e => <p className=\"p-0 m-0\">{e}</p>)\r\n            prevState.errors[name] = errors.length === 0 ? false : errors\r\n            return prevState\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        console.log(this.state.values)\r\n        this.handleFullVerify()\r\n            .then((data) => {\r\n                if (data) {\r\n                    fetch('/signup', {\r\n                        method:'POST',\r\n                        headers:headersDefault(),\r\n\r\n                        body:JSON.stringify({\r\n                            ...this.state.values,\r\n                            regType:\"USUAL\"\r\n                        })\r\n                    })\r\n                        .then(data => data.json())\r\n                        .then(data => {\r\n                            console.log(data)\r\n                            if (data.isReg) {\r\n                                window.location.hash = \"#/auth/signin\"\r\n                            } else {\r\n                                alert(data.causeOfError)\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"col-12 col-lg-6 p-3 \">\r\n                <Container className=\"custom-paper bg-light p-3\">\r\n                    <Col>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridLogin\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Логин</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.login}\r\n                                        name={\"login\"}\r\n                                        value={this.state.values.login}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите логин\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.login}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Почта</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.email}\r\n                                        name={\"email\"}\r\n                                        value={this.state.values.email}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"email\"\r\n                                        placeholder=\"Введите почту\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.email}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridPassword1\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Пароль</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.password1}\r\n                                        name={\"password1\"}\r\n                                        value={this.state.values.password1}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Введите пароль\"\r\n                                        className=\"custom-textform\"\r\n                                        ref={(input) => this.password1Input = input}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.password1}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridPassword2\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Повторить пароль</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.password2}\r\n                                        name={\"password2\"}\r\n                                        value={this.state.values.password2}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Повторите пароль\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.password2}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridName\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Имя</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.name}\r\n                                        name={\"name\"}\r\n                                        value={this.state.values.name}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите полное имя\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.name}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridSurname\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Фамилия</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.surname}\r\n                                        name={\"surname\"}\r\n                                        value={this.state.values.surname}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите фамилию\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.surname}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridRole\">\r\n                                    <Form.Label>Тип пользователя</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.role}\r\n                                        name={\"role\"}\r\n                                        value={this.state.values.role}\r\n                                        as=\"select\"\r\n                                        className=\"custom-select\"\r\n                                        onChange={event => {\r\n                                            const curr_role = event.target.value\r\n                                            this.setState(prevState => {\r\n                                                if (!([\"Преподаватель\", \"Администратор\"].includes(prevState.role) &&\r\n                                                    [\"Преподаватель\", \"Администратор\"].includes(curr_role))) {\r\n                                                    prevState.errors.secretKey = false\r\n                                                    prevState.errors.group = false\r\n                                                }\r\n                                                return prevState\r\n                                            })\r\n                                            this.handleOnChange(event)\r\n\r\n                                        }}\r\n                                    >\r\n                                        <option className=\"custom-option\">Студент</option>\r\n                                        <option className=\"custom-option\">Преподаватель</option>\r\n                                        <option className=\"custom-option\">Администратор</option>\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.role}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            {\r\n                                this.state.values.role === \"Студент\" &&\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridGroup\">\r\n                                        <Form.Label>Группа</Form.Label>\r\n                                        <Form.Control\r\n                                            isInvalid={!!this.state.errors.group}\r\n                                            name={\"group\"}\r\n                                            value={this.state.values.group}\r\n                                            onChange={this.handleOnChange}\r\n                                            className=\"custom-textform\"\r\n                                        >\r\n                                        </Form.Control>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {this.state.errors.group}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            }\r\n                            < Form.Group controlId=\"formGridSecretKey\">\r\n                                <Form.Label>Секретный код</Form.Label>\r\n                                <Form.Control\r\n                                    isInvalid={!!this.state.errors.secretKey}\r\n                                    name={\"secretKey\"}\r\n                                    value={this.state.values.secretKey}\r\n                                    onChange={this.handleOnChange}\r\n                                    placeholder=\"Введите секретный код\"\r\n                                    className=\"custom-textform\"\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.errors.secretKey}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridGithubLogin\">\r\n                                    <Form.Label>GithubLogin</Form.Label>\r\n                                    <Form.Control\r\n                                        className=\"custom-textform\"\r\n                                        placeholder=\"Введите GithubLogin\"\r\n                                        isInvalid={!!this.state.errors.GithubLogin}\r\n                                        name={\"GithubLogin\"}\r\n                                        value={this.state.values.GithubLogin}\r\n                                        onChange={this.handleOnChange}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.GithubLogin}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridMoodleLogin\">\r\n                                    <Form.Label>MoodleLogin</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.MoodleLogin}\r\n                                        name={\"MoodleLogin\"}\r\n                                        value={this.state.values.MoodleLogin}\r\n                                        onChange={this.handleOnChange}\r\n                                        placeholder=\"Введите MoodleLogin\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.MoodleLogin}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row className=\"mb-3\">\r\n\r\n                                <ReCAPTCHA\r\n                                    sitekey=\"6LctlLAZAAAAAHE2Zj-yKvioQcPNa1ZBOhqujNdK\"\r\n                                    onChange={(value) => {\r\n                                        this.setState(prevState => {\r\n                                            prevState.values.recaptcha = value\r\n                                            return prevState\r\n                                        })\r\n                                        this.handleVerify(\"recaptcha\", value)\r\n                                    }}\r\n                                />\r\n                                {this.state.errors.recaptcha && <label>{this.state.errors.recaptcha}</label>}\r\n\r\n\r\n                            </Form.Row>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                type=\"submit\"\r\n                                className=\"custom-btn mr-3 mb-2\"\r\n                            >\r\n                                Зарегистрироваться\r\n                            </Button>\r\n                            <Link\r\n                                className=\"mr-3\"\r\n                                to=\"/auth/signin\">\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    className=\"custom-btn mr-3 mb-2\"\r\n                                >\r\n                                    Вход\r\n                                </Button>\r\n                            </Link>\r\n                        </Form>\r\n                    </Col>\r\n                </Container>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignUpForm;\r\n","import {Col, Container, Form, Button} from 'react-bootstrap'\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import socket from '../../../WebSocket'\r\n\r\n\r\nclass SignUpGitForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleFullVerify = this.handleFullVerify.bind(this)\r\n        this.handleVerify = this.handleVerify.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.state = {\r\n            values:{\r\n                email:props.email,\r\n                login:'',\r\n                name:'',\r\n                surname:'',\r\n                role:(props.curr_key && props.curr_key.match(/^curr_key/)) ? 'Преподаватель' : 'Студент',\r\n                group:'',\r\n                secretKey:(props.curr_key && props.curr_key.match(/^curr_key/)) ? props.curr_key.replace(/curr_key/, '') : '',\r\n                GithubLogin:props.gitLogin,\r\n                GithubId:props.gitId,\r\n                MoodleLogin:'',\r\n                recaptcha:'',\r\n            },\r\n            errors:{\r\n                email:false,\r\n                login:false,\r\n                name:false,\r\n                surname:false,\r\n                role:false,\r\n                group:false,\r\n                secretKey:false,\r\n                MoodleLogin:false,\r\n                recaptcha:false,\r\n            },\r\n            rules:{\r\n                email:[v => v.search(/^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/g) !== -1 || \"Формат почты не верный\"],\r\n                login:[\r\n                    v => !!v || \"Введите логин.\",\r\n                    v => v.length > 5 || \"Логин должен быть длиннее 5 символов.\",\r\n                    v => v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"Логин может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => v.search(/^[a-zA-Z]/) !== -1 || \"Логин может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                name:[\r\n                    v => !!v || \"Введите имя.\",\r\n                    v => v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Имя может содержать только символы - а-я А-Я a-z A-Z\"],\r\n                surname:[\r\n                    v => v.search(/^[а-яА-Яa-zA-Z]+$/) !== -1 || \"Фамилия может содержать только символы - а-я А-Я a-z A-Z\",\r\n                    v => !!v || \"Введите имя.\"],\r\n                role:[v => !!v || \"Выберите тип.\"],\r\n                group:[v => !!v || \"Выберите группу.\"],\r\n                secretKey:[v => !!v || \"Введите секретный ключ.\"],\r\n                MoodleLogin:[\r\n                    v => !!v || \"Введите MoodleLogin.\",\r\n                    v => v.search(/^[a-zA-Z0-9_-]*$/) !== -1 || \"MoodleLogin может содержать только символы _ - 0-9 a-z A-Z.\",\r\n                    v => v.search(/^[a-zA-Z]/) !== -1 || \"MoodleLogin может начинаться только на символы a-z A-Z.\",\r\n                ],\r\n                recaptcha:[v => !!v || \"Введите recaptcha.\"],\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        console.log(event)\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState(prevState => {\r\n            prevState.values[name] = value\r\n            return prevState\r\n        })\r\n        this.handleVerify(name, value)\r\n    }\r\n\r\n    async handleFullVerify() {\r\n\r\n        await Object.keys(this.state.errors).forEach(key => {\r\n            if (key === \"secretKey\")\r\n                if (this.state.values.role === \"Студент\")\r\n                    return\r\n            if (key === \"group\")\r\n                if (this.state.values.role !== \"Студент\")\r\n                    return\r\n\r\n            this.handleVerify(key, this.state.values[key])\r\n        })\r\n        console.log(JSON.stringify(this.state.errors))\r\n        return Object.values(this.state.errors).every(e => !e)\r\n    }\r\n\r\n    handleVerify(name, value) {\r\n\r\n        this.setState(prevState => {\r\n            const errors = prevState.rules[name].map(e => {\r\n                let err = e(value)\r\n                return err !== true ? err : null\r\n            })\r\n                .filter(function (e) {\r\n                    return e !== null\r\n                })\r\n                .map(e => <p className=\"p-0 m-0\">{e}</p>)\r\n            prevState.errors[name] = errors.length === 0 ? false : errors\r\n            return prevState\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        console.log(this.state.values)\r\n        this.handleFullVerify()\r\n            .then((data) => {\r\n                if (data) {\r\n                    fetch('/signup', {\r\n                        method:'POST',\r\n                        headers:headersDefault(),\r\n\r\n                        body:JSON.stringify({\r\n                            ...this.state.values,\r\n                            regType:\"GIT\"\r\n                        })\r\n                    })\r\n                        .then(data => data.json())\r\n                        .then(data => {\r\n                            console.log(data)\r\n                            if (data.isReg) {\r\n                                window.location.hash = \"#/auth/signin\"\r\n                            } else {\r\n                                alert(data.causeOfError)\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"col-12 col-lg-6 p-3 \">\r\n                <Container className=\"custom-paper bg-light p-3\">\r\n                    <Col>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridLogin\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Логин</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.login}\r\n                                        name={\"login\"}\r\n                                        value={this.state.values.login}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите логин\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.login}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Почта</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.email}\r\n                                        name={\"email\"}\r\n                                        value={this.state.values.email}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"email\"\r\n                                        placeholder=\"Введите почту\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.email}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridName\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Имя</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.name}\r\n                                        name={\"name\"}\r\n                                        value={this.state.values.name}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите полное имя\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.name}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridSurname\" className=\"col-12 col-lg-6\">\r\n                                    <Form.Label>Фамилия</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.surname}\r\n                                        name={\"surname\"}\r\n                                        value={this.state.values.surname}\r\n                                        onChange={this.handleOnChange}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Введите фамилию\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.surname}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridRole\">\r\n                                    <Form.Label>Тип пользователя</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.role}\r\n                                        name={\"role\"}\r\n                                        value={this.state.values.role}\r\n                                        as=\"select\"\r\n                                        className=\"custom-select\"\r\n                                        onChange={event => {\r\n                                            const curr_role = event.target.value\r\n                                            this.setState(prevState => {\r\n                                                if (!([\"Преподаватель\", \"Администратор\"].includes(prevState.role) &&\r\n                                                    [\"Преподаватель\", \"Администратор\"].includes(curr_role))) {\r\n                                                    prevState.errors.secretKey = false\r\n                                                    prevState.errors.group = false\r\n                                                }\r\n                                                return prevState\r\n                                            })\r\n                                            this.handleOnChange(event)\r\n\r\n                                        }}\r\n                                    >\r\n                                        <option className=\"custom-option\">Студент</option>\r\n                                        <option className=\"custom-option\">Преподаватель</option>\r\n                                        <option className=\"custom-option\">Администратор</option>\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.role}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            {\r\n                                this.state.values.role === \"Студент\" &&\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridGroup\">\r\n                                        <Form.Label>Группа</Form.Label>\r\n                                        <Form.Control\r\n                                            isInvalid={!!this.state.errors.group}\r\n                                            name={\"group\"}\r\n                                            value={this.state.values.group}\r\n                                            onChange={this.handleOnChange}\r\n                                            className=\"custom-textform\"\r\n                                        >\r\n                                        </Form.Control>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {this.state.errors.group}\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            }\r\n                            <Form.Group controlId=\"formGridSecretKey\">\r\n                                <Form.Label>Секретный код</Form.Label>\r\n                                <Form.Control\r\n                                    isInvalid={!!this.state.errors.secretKey}\r\n                                    name={\"secretKey\"}\r\n                                    value={this.state.values.secretKey}\r\n                                    onChange={this.handleOnChange}\r\n                                    placeholder=\"Введите секретный код\"\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.errors.secretKey}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridMoodleLogin\">\r\n                                    <Form.Label>MoodleLogin</Form.Label>\r\n                                    <Form.Control\r\n                                        isInvalid={!!this.state.errors.MoodleLogin}\r\n                                        name={\"MoodleLogin\"}\r\n                                        value={this.state.values.MoodleLogin}\r\n                                        onChange={this.handleOnChange}\r\n                                        placeholder=\"Введите MoodleLogin\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.errors.MoodleLogin}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n\r\n                                <ReCAPTCHA\r\n                                    sitekey=\"6LctlLAZAAAAAHE2Zj-yKvioQcPNa1ZBOhqujNdK\"\r\n                                    onChange={(value) => {\r\n                                        this.setState(prevState => {\r\n                                            prevState.values.recaptcha = value\r\n                                            return prevState\r\n                                        })\r\n                                        this.handleVerify(\"recaptcha\", value)\r\n                                    }}\r\n                                />\r\n                                {this.state.errors.recaptcha && <label>{this.state.errors.recaptcha}</label>}\r\n\r\n\r\n                            </Form.Row>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                type=\"submit\"\r\n                                className=\"custom-btn mr-3 mb-2\"\r\n                            >\r\n                                Зарегистрироваться\r\n                            </Button>\r\n                            <Link\r\n                                className=\"btn icon-btn mr-3\"\r\n                                to=\"/auth/signin\">\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    className=\"custom-btn mr-3 mb-2\"\r\n                                >\r\n                                    Вход\r\n                                </Button>\r\n                            </Link>\r\n                        </Form>\r\n                    </Col>\r\n                </Container>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignUpGitForm;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Spinner, Container, Alert } from 'react-bootstrap'\r\nimport headersDefault from '../../../../fetchDefault'\r\nimport { sign_in } from '../../../../actions/user';\r\nimport { connect } from 'react-redux'\r\nimport SignUpForm from './SignUpForm'\r\nimport SignUpGitForm from './SignUpGitForm'\r\nimport OAuthContainer from '../oauth/OAuthContainer'\r\n\r\n\r\n// import socket from '../../../WebSocket'\r\n\r\n\r\nclass SignUpContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleGitChecker = this.handleGitChecker.bind(this)\r\n        this.state = {\r\n            currForm:\r\n                <>\r\n                    <SignUpForm curr_key={this.props.curr_key} />\r\n                    <OAuthContainer />\r\n                </>\r\n        }\r\n    }\r\n\r\n    handleGitChecker() {\r\n\r\n        let queryString = window.location.search\r\n        let urlParams = new URLSearchParams(queryString);\r\n        let code = urlParams.get(\"code\")\r\n        if (code) {\r\n            this.setState({\r\n                currForm:\r\n                    <Container className=\"d-flex justify-content-center m-5 p-5\">\r\n                        <Spinner animation=\"border\" />\r\n                    </Container>\r\n            })\r\n            window.history.pushState({}, null, '/' + window.location.hash)\r\n            fetch('/authenticate', {\r\n                method: \"POST\",\r\n                headers: headersDefault(),\r\n\r\n                body: JSON.stringify({ code })\r\n            })\r\n                .then(data => data.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    if (data.error) {\r\n                        console.error(data.error)\r\n                        this.setState({\r\n                            currForm:\r\n                                <Container className=\"col-12 col-lg-6 p-3 \">\r\n                                    <Alert variant=\"danger\">\r\n                                        Ошибка: {data.error}. Нажмите\r\n                                        <Alert.Link href=\"#/auth/signin\"> тут </Alert.Link>\r\n                                        чтобы перейти на страницу авторизации.\r\n                                    </Alert>\r\n                                </Container>\r\n                        })\r\n                    }\r\n                    else if (data.needReg)\r\n                        this.setState({\r\n                            currForm: <SignUpGitForm\r\n                                email={data.email}\r\n                                gitLogin={data.gitLogin}\r\n                                gitId={data.gitId}\r\n                            />\r\n                        })\r\n                    else if (data.isAuth) {\r\n                        delete data.needReg\r\n                        fetch('/signin', {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                Authorization:\"JWT \" + localStorage.getItem(\"accesstoken\"),\r\n                                'Content-Type':'application/json;charset=utf-8'\r\n                            },\r\n                            body: JSON.stringify({\r\n                                login:data.login,\r\n                                password:\"github\"\r\n                            })\r\n                        })\r\n                            .then(data => data.json())\r\n                            .then(data => {\r\n                                console.log(\"SSS\" + data)\r\n                                if (data.isAuth) {\r\n                                    this.props.onSignIn(data)\r\n                                    window.location.hash = \"#/\"\r\n                                }\r\n                                else {\r\n                                    alert(data.causeOfError)\r\n                                }\r\n                            })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGitChecker();\r\n    }\r\n    render() {\r\n        return this.state.currForm\r\n    }\r\n}\r\n// export default SignUpContainer;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onSignIn: (data) => {\r\n            dispatch(sign_in(data))\r\n        }\r\n    })\r\n)(SignUpContainer)\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SignUpContainer from './SignUpContainer'\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n    render() {\r\n        console.log(\"111111111111\")\r\n        return (\r\n            <>\r\n                <SignUpContainer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp;\r\n","import React, {useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Row, Col, Toast, Image} from 'react-bootstrap'\r\n\r\nimport \"../styles/styles.css\"\r\n\r\n\r\nfunction Notification(props) {\r\n    const [show, setShow] = useState(true);\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => {\r\n                    setShow(false)\r\n                }}\r\n                       className=\"custom-paper m-3\"\r\n                       show={show}\r\n                       delay={3000}\r\n                       autohide\r\n                >\r\n                    <Toast.Header>\r\n                        <img\r\n                            className=\"rounded mr-2\"\r\n                            alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">{props.head}</strong>\r\n                        <small>{props.type}</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>\r\n                        <Col>\r\n                            {props.message}\r\n                            <Row>\r\n                                {props.tags && props.tags.map((elem, index) =>\r\n                                        <span\r\n                                            key={\"nottag_\" + index}\r\n                                            className=\"badge badge-secondary custom-badge mr-1 mb-1\"\r\n                                        >\r\n                    {elem}\r\n                  </span>\r\n                                )}\r\n                                {props.link &&\r\n                                < a href={props.link} className=\"btn custom-btn icon-btn mr-3\">\r\n                                    <Image src=\"static/img/arrowRight.svg\" width=\"28\"/>\r\n                                </a>\r\n                                }\r\n                            </Row>\r\n                        </Col>\r\n                    </Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Notification","\r\nimport React, { Component } from 'react';\r\nimport Notification from './Notification'\r\nimport socket from '../../WebSocket'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nimport \"../styles/styles.css\"\r\n\r\n\r\nclass NotificationManager extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            notifications: [],\r\n            count: 0,\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        socket.on(\"notification\", (data) => {\r\n            this.setState(prevState => {\r\n                prevState.notifications.unshift(\r\n                    <Notification\r\n                        key={\"Notification\" + prevState.count}\r\n                        type={data.type || false}\r\n                        message={data.message || false}\r\n                        tags={data.tags || false}\r\n                        link={data.link || false}\r\n                        head={data.head || false}\r\n                    />\r\n                )\r\n                prevState.count++\r\n                return prevState\r\n            })\r\n            var t = setTimeout(() => {\r\n                this.setState(prevState => {\r\n                    prevState.notifications.pop()\r\n                    return prevState\r\n                })\r\n                clearTimeout(t)\r\n            }, 3500)\r\n        }\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.removeAllListeners(\"notification\");\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.notifications}\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NotificationManager;","import React, { Component, Suspense } from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport {\r\n    local_auth_check,\r\n    info_upd,\r\n    sign_out\r\n} from './actions/user';\r\nimport { connect } from 'react-redux'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport AddQueue from './components/routes/addqueue/AddQueue'\r\nimport AllQueues from './components/routes/allqueues/AllQueues'\r\nimport Queue from './components/routes/queue/Queue'\r\nimport Stats from './components/routes/stats/Stats'\r\nimport Profile from './components/routes/profile/Profile'\r\nimport ProfileEditor from './components/routes/profile/ProfileEditor'\r\nimport CustomNavbar from \"./components/nav/CustomNavbar\"\r\nimport SignIn from './components/routes/auth/signIn/SignIn'\r\nimport SignUp from './components/routes/auth/signUp/SignUp'\r\nimport NotificationManager from './components/notification/NotificationManager';\r\nimport headersDefault from './fetchDefault'\r\n\r\nconst AdminDB = React.lazy(() => import('./components/routes/admindb/AdminDB'));\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        /*this.props.onLocalAuthCheck()\r\n        fetch('/auth/check',\r\n            {\r\n                headers: headersDefault(),\r\n            })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                if (data.isAuth === true)\r\n                    this.props.onInfoUpdate(data)\r\n                else if (data.isAuth === false)\r\n                    this.props.sign_out()\r\n                else\r\n                    console.log(\"hm hmm... error... but why?\")\r\n                    \r\n            })*/\r\n\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <Router basename='/'  >\r\n                <CustomNavbar />\r\n                {this.props.user.isAuth ?\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <AllQueues />\r\n                        </Route>\r\n                        {\r\n                            this.props.user.role !== \"student\" &&\r\n                            < Route path=\"/addqueue\" component={AddQueue} />\r\n                        }\r\n                        <Route path=\"/queue/:curr_id\" component={Queue} />\r\n                        <Route path=\"/profile/editor/\" component={ProfileEditor} />\r\n                        <Route path=\"/profile/:curr_login\" component={Profile} />\r\n                        <Route path=\"/stats\" component={Stats} />\r\n                        <Route path=\"/admindb\">\r\n                            {\r\n                                this.props.user.role === \"admin\" &&\r\n                                <Suspense\r\n                                    fallback={\r\n                                        <div></div>\r\n                                    }\r\n                                >\r\n                                    <AdminDB />\r\n                                </Suspense>\r\n                            }\r\n                        </Route>\r\n                        <Redirect strict to=\"/\" />\r\n                    </Switch >\r\n                    :\r\n                    <>\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <Redirect strict to=\"auth/signin\" />\r\n                            </Route>\r\n                            <Route path=\"/auth/signin\" component={SignIn} />\r\n                            <Route path=\"/auth/signup/:curr_key\" component={SignUp} />\r\n                            <Route path=\"/auth/signup/\" component={SignUp} />\r\n                            <Redirect strict to=\"/\" />\r\n                        </Switch >\r\n                    </>\r\n                }\r\n\r\n                <NotificationManager />\r\n            </Router >\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n// export default App;\r\nexport default connect(\r\n    state => ({\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        onLocalAuthCheck: (data) => {\r\n            dispatch(local_auth_check(data))\r\n        },\r\n        onInfoUpdate: (data) => {\r\n            dispatch(info_upd(data))\r\n        },\r\n        onSignOut: (data) => {\r\n            dispatch(sign_out(data))\r\n        },\r\n    })\r\n)(App)\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { Provider } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './Store'\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}