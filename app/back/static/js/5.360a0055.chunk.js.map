{"version":3,"sources":["components/routes/admindb/containers/DescriptionContainer.js","components/routes/admindb/containers/ListOfTables.js","components/routes/admindb/containers/ListOfTablesContainer.js","components/routes/admindb/containers/ConfiguredTable.js","components/routes/admindb/containers/TableContainer.js","components/routes/admindb/containers/KeysContainer.js","components/routes/admindb/AdminDB.js"],"names":["DescriptionContainer","props","Col","md","class","className","header","description","map","e","to","Button","ListOfTables","handleDownload","bind","uploadDisciplines","fetch","headers","headersDefault","then","data","json","console","log","blob","Blob","JSON","stringify","type","saveAs","input","document","getElementById","formData","FormData","append","files","method","Authorization","localStorage","getItem","body","Container","Row","id","accept","onClick","this","Image","src","width","Component","ListOfTablesContainer","local","localizer","moment","allViews","Object","keys","Views","k","localization","emptyDataSourceMessage","addTooltip","deleteTooltip","editTooltip","filterRow","filterTooltip","editRow","deleteText","cancelTooltip","saveTooltip","grouping","placeholder","groupedBy","actions","pagination","labelDisplayedRows","labelRowsSelect","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","toolbar","addRemoveColumns","nRowsSelected","showColumnsTitle","showColumnsAriaLabel","exportTitle","exportAriaLabel","exportName","searchTooltip","searchPlaceholder","getManyDates","classes","idx","forEach","el","i","start","Date","datetime","setDate","getDate","repeatTime","push","title","disciplineName","end","ConfiguredTable","table_name","style","fontFamily","borderRadius","boxShadow","animation","isLoading","toUpperCase","options","filtering","columns","detailPanel","rowData","telemetry","timestamp","editable","onRowAdd","newData","Promise","resolve","editTable","onRowUpdate","prevData","prevData_","assign","tableData","onRowDelete","step","views","events","TableContainer","updateTable","state","table","setState","match","params","success","alert","causeOfError","task","Form","onSubmit","event","num","currentTarget","value","preventDefault","stopPropagation","Group","Control","name","min","defaultValue","variant","KeysContainer","AdminDB","basename","exact","path","component","strict"],"mappings":"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","file":"static/js/5.360a0055.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { Col, Button } from 'react-bootstrap';\r\n\r\n\r\nfunction DescriptionContainer(props) {\r\n    return (\r\n        <Col md={4}>\r\n            <div class=\"custom-card mb-4 shadow-sm\">\r\n                <center className=\"pt-3\">\r\n                    <h4>{props.header}</h4>\r\n                </center>\r\n                <hr />\r\n                <div class=\"card-body\">\r\n                    {props.description.map(e => <p className=\"card-text\">{e}</p>)}\r\n                    <Link to={props.to}>\r\n                        <Button className=\"custom-btn\" >Перейти</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default DescriptionContainer\r\n","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Container, Row, Col, Button, Form, Tooltip, Image, OverlayTrigger} from 'react-bootstrap';\r\nimport DescriptionContainer from './DescriptionContainer'\r\nimport {saveAs} from \"file-saver\";\r\nimport headersDefault from \"../../../../fetchDefault\";\r\n\r\nclass ListOfTables extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleDownload = this.handleDownload.bind(this)\r\n        this.uploadDisciplines = this.uploadDisciplines.bind(this)\r\n    }\r\n\r\n    handleDownload() {\r\n        fetch(`/db/download`, {\r\n            headers:headersDefault(),\r\n        })\r\n            .then(data => data.json())\r\n            .then(json => {\r\n                console.log(json)\r\n                let blob = new Blob([JSON.stringify(json, null, 2)], {type:\"text/json\"})\r\n                saveAs(blob, \"elqueue_db.json\")\r\n            })\r\n    }\r\n\r\n    uploadDisciplines() {\r\n        const input = document.getElementById('fileinput')\r\n        const formData = new FormData();\r\n        formData.append(\"file\", input.files[0]);\r\n        fetch(`/db/upload/disciplines`, {\r\n            method:\"POST\",\r\n            headers:{\r\n                Authorization:\"JWT \" + localStorage.getItem(\"accesstoken\"),\r\n            },\r\n            body:formData\r\n        })\r\n            .then(data => data.json())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container className=\"custom-paper bg-light p-3 col-12 col-lg-10\">\r\n                    <Row>\r\n                        <DescriptionContainer\r\n                            header={\"Список созданных пользователей\"}\r\n                            description={[\r\n                                \"Просмотр списка созданных пользователей\",\r\n                                \"Удаление\",\r\n                                \"Добавление\",\r\n                                \"Редактирование\",\r\n                            ]}\r\n                            to=\"/users\"\r\n                        />\r\n                        <DescriptionContainer\r\n                            header={\"Список занятий\"}\r\n                            description={[\r\n                                \"Просмотр списка занятий\",\r\n                                \"Удаление\",\r\n                                \"Добавление\",\r\n                            ]}\r\n                            to=\"/classes\"\r\n                            className=\"custom-block\"\r\n                        />\r\n                        <DescriptionContainer\r\n                            header={\"Список доступных дисциплин\"}\r\n                            description={[\r\n                                \"Просмотр списка возможных дисциплин\",\r\n                                \"Удаление\",\r\n                                \"Добавление\",\r\n                                \"Редактирование\",\r\n                            ]}\r\n                            to=\"/disciplines\"\r\n                        />\r\n                        <DescriptionContainer\r\n                            header={\"Секретные ключи\"}\r\n                            description={[\r\n                                \"Управение ключами\",\r\n                                \"Удаление\",\r\n                                \"Добавление\",\r\n                            ]}\r\n                            to=\"/secretkeys\"\r\n                        />\r\n                        <Col md={4}>\r\n                            <div className=\"custom-card mb-4 shadow-sm\">\r\n                                <center className=\"pt-3\">\r\n                                    <h4>Импорт Базы Данных</h4>\r\n                                </center>\r\n                                <hr/>\r\n                                <div className=\"card-body\">\r\n                                    <input type=\"file\" id=\"fileinput\" className=\"mb-3 p-3 custom-card bg-white\"\r\n                                           accept=\".json\"/>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <Button className=\"custom-btn btn-info\"\r\n                                                onClick={this.uploadDisciplines}>Загрузить</Button>\r\n                                        <div className=\"mr-0 mr-lg-3\">\r\n                                            <Image src=\"static/img/info.svg\" width=\"24\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <div className=\"custom-card mb-4 shadow-sm\">\r\n                                <center className=\"pt-3\">\r\n                                    <h4>Скачать базу данных</h4>\r\n                                </center>\r\n                                <hr/>\r\n                                <div className=\"card-body\">\r\n                                    <Button onClick={this.handleDownload} className=\"custom-btn btn-info\">JSON</Button>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ListOfTables;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport ListOfTables from './ListOfTables'\r\nimport { Container } from 'react-bootstrap';\r\n\r\n\r\nclass ListOfTablesContainer extends Component {\r\n    render() {\r\n        return (\r\n        <Container className=\"p-3 col-12\">\r\n            <ListOfTables />\r\n        </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ListOfTablesContainer;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport MaterialTable from 'material-table';\r\nimport { Calendar, Views } from 'react-big-calendar';\r\nimport localizer from 'react-big-calendar/lib/localizers/moment'\r\nimport moment from \"moment\";\r\n\r\nlet local = localizer(moment)\r\n\r\nlet allViews = Object.keys(Views).map(k => Views[k])\r\n\r\nconst localization = {\r\n    body:{\r\n        emptyDataSourceMessage:'Нет записей',\r\n        addTooltip:'Добавить',\r\n        deleteTooltip:'Удалить',\r\n        editTooltip:'Изменить',\r\n        filterRow:{\r\n            filterTooltip:'Фильтр'\r\n        },\r\n        editRow:{\r\n            deleteText:'Вы действительно хотите удалить запись?',\r\n            cancelTooltip:'Отменить',\r\n            saveTooltip:'Подтвердить'\r\n        }\r\n    },\r\n    grouping:{\r\n        placeholder:'Перемещение колонок ...',\r\n        groupedBy:'Сгруппирован по:'\r\n    },\r\n    header:{\r\n        actions:'Действия'\r\n    },\r\n    pagination:{\r\n        labelDisplayedRows:'{from}-{to} из {count}',\r\n        labelRowsSelect:'Строк',\r\n        labelRowsPerPage:'Строк на странице:',\r\n        firstAriaLabel:'Первая страница',\r\n        firstTooltip:'Первая страница',\r\n        previousAriaLabel:'Предыдущая страница',\r\n        previousTooltip:'Предыдущая страница',\r\n        nextAriaLabel:'Следующая страница',\r\n        nextTooltip:'Следующая страница',\r\n        lastAriaLabel:'Последняя страница',\r\n        lastTooltip:'Последняя страница'\r\n    },\r\n    toolbar:{\r\n        addRemoveColumns:'Добавить/удалить столбец',\r\n        nRowsSelected:'{0} Строк выбрано',\r\n        showColumnsTitle:'Показать колонки',\r\n        showColumnsAriaLabel:'Показать колонки',\r\n        exportTitle:'Экспортировать',\r\n        exportAriaLabel:'Экспортировать',\r\n        exportName:'Экспортировать как CSV',\r\n        searchTooltip:'Поиск',\r\n        searchPlaceholder:'Поиск'\r\n    }\r\n}\r\n\r\nfunction getManyDates(data) {\r\n    let classes = []\r\n    let idx = 0;\r\n    data.forEach(el => {\r\n        for (let i = 0; i < 150; i ++) {\r\n            let start = new Date(el.datetime)\r\n            start.setDate(start.getDate() + i * el.repeatTime)\r\n            classes.push({\r\n                id: i * idx + idx,\r\n                title: el.disciplineName + \" \" + el.description,\r\n                start: start,\r\n                end: new Date(start + 60000 * 90)\r\n            })\r\n        }\r\n        idx++;\r\n    })\r\n    return classes;\r\n}\r\n\r\n\r\nfunction ConfiguredTable(props) {\r\n\r\n    return (\r\n        <>\r\n            {props.table_name === 'users' ?\r\n                <MaterialTable\r\n                    style={{\r\n                        fontFamily:'Nunito',\r\n                        borderRadius:20,\r\n                        boxShadow:\"0px 3px 5px rgb(224, 224, 224)\",\r\n                        animation:'appear .6s'\r\n                    }}\r\n                    isLoading={props.isLoading}\r\n                    localization={localization}\r\n                    title={props.table_name.toUpperCase()}\r\n                    options={{\r\n                        filtering:true\r\n                    }}\r\n                    columns={props.columns}\r\n                    data={props.data}\r\n                    detailPanel={rowData => {\r\n                        return (\r\n                            <>\r\n                                <div className=\"p-3\">\r\n                                    <table className=\"table\">\r\n                                        <tr>\r\n                                            <th>Действие</th>\r\n                                            <th>Дата</th>\r\n                                        </tr>\r\n                                        {rowData.telemetry.map(el => <tr>\r\n                                            <td>{el.description}</td>\r\n                                            <td>{el.timestamp}</td>\r\n                                        </tr>)}\r\n                                    </table>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }}\r\n                    editable={{\r\n                        onRowAdd:(newData) =>\r\n                            new Promise((resolve) => {\r\n                                resolve();\r\n                                props.editTable(\"ADD_RECORD\", newData)\r\n                            }),\r\n                        onRowUpdate:(newData, prevData) =>\r\n                            new Promise((resolve) => {\r\n                                resolve();\r\n                                let prevData_ = Object.assign({}, prevData)\r\n                                delete prevData_.tableData\r\n                                if (JSON.stringify(newData) !== JSON.stringify(prevData_))\r\n                                    props.editTable(\"UPD_RECORD\", newData)\r\n\r\n                            }),\r\n                        onRowDelete:(newData) =>\r\n                            new Promise((resolve) => {\r\n                                resolve();\r\n                                let newData_ = Object.assign({}, newData)\r\n                                delete newData_.tableData\r\n                                props.editTable(\"DEL_RECORD\", newData)\r\n                            }),\r\n                    }}\r\n                />\r\n                :\r\n                <MaterialTable\r\n                    style={{\r\n                        fontFamily:'Nunito',\r\n                        borderRadius:20,\r\n                        boxShadow:\"0px 3px 5px rgb(224, 224, 224)\",\r\n                        animation:'appear .6s'\r\n                    }}\r\n                    isLoading={props.isLoading}\r\n                    localization={localization}\r\n                    title={props.table_name.toUpperCase()}\r\n                    options={{\r\n                        filtering:true\r\n                    }}\r\n                    columns={props.columns}\r\n                    data={props.data}\r\n                    editable={{\r\n                        onRowAdd:(newData) =>\r\n                            new Promise((resolve) => {\r\n                                resolve();\r\n                                props.editTable(\"ADD_RECORD\", newData)\r\n                            }),\r\n                        onRowUpdate:(newData, prevData) =>\r\n                            new Promise((resolve) => {\r\n                                resolve();\r\n                                let prevData_ = Object.assign({}, prevData)\r\n                                delete prevData_.tableData\r\n                                if (JSON.stringify(newData) !== JSON.stringify(prevData_))\r\n                                    props.editTable(\"UPD_RECORD\", newData)\r\n\r\n                            }),\r\n                        onRowDelete:(newData) =>\r\n                            new Promise((resolve) => {\r\n                                resolve();\r\n                                let newData_ = Object.assign({}, newData)\r\n                                delete newData_.tableData\r\n                                props.editTable(\"DEL_RECORD\", newData)\r\n                            }),\r\n                    }}\r\n                />\r\n            }\r\n            {(props.table_name === \"classes\" && props.data) &&\r\n                <div className=\"custom-paper p-3 col-12 mt-3\">\r\n                    <Calendar\r\n                        step={60}\r\n                        views={allViews}\r\n                        events={getManyDates(props.data)}\r\n                        localizer={local}\r\n                    >\r\n                    </Calendar>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ConfiguredTable;\r\n","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Container, Button, Row, Form} from 'react-bootstrap';\r\nimport ConfiguredTable from './ConfiguredTable'\r\nimport headersDefault from '../../../../fetchDefault'\r\n\r\n\r\nclass TableContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.updateTable = this.updateTable.bind(this)\r\n        this.editTable = this.editTable.bind(this)\r\n        this.state = {\r\n            table:{},\r\n            isLoading:true\r\n        }\r\n    }\r\n\r\n    updateTable() {\r\n        this.setState({isLoading:true})\r\n        fetch(`/db/${this.props.match.params.table_name}`, {\r\n            headers:headersDefault(),\r\n\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({isLoading:false})\r\n                if (data.success) {\r\n                    this.setState({table:{columns:data.table.columns, data:data.table.data}})\r\n                } else {\r\n                    alert(data.causeOfError)\r\n                }\r\n            })\r\n    }\r\n\r\n    editTable(task, data) {\r\n        this.setState({isLoading:true})\r\n        fetch(`/db/${this.props.match.params.table_name}`, {\r\n            method:\"POST\",\r\n            headers:headersDefault(),\r\n\r\n            body:JSON.stringify({\r\n                task,\r\n                data\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({isLoading:false})\r\n\r\n                if (data.success) {\r\n                    this.updateTable()\r\n                } else {\r\n                    alert(data.causeOfError)\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateTable()\r\n        console.log(111)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container className=\"p-3 col-12\">\r\n                    {\r\n\r\n                        this.props.match.params.table_name === \"secretkeys\" &&\r\n                        <Container className=\"custom-paper mb-2 p-3\">\r\n                            <Form className=\"mb-0\" onSubmit={(event) => {\r\n                                this.editTable(\"GEN_RECORD\", {num:event.currentTarget.num.value})\r\n                                event.preventDefault();\r\n                                event.stopPropagation();\r\n\r\n                            }}><Form.Row>\r\n\r\n                                <Form.Group className=\"mb-0\">\r\n                                    <Form.Control\r\n                                        name=\"num\"\r\n                                        type=\"number\"\r\n                                        placeholder=\"Введите количество\"\r\n                                        min=\"0\"\r\n                                        defaultValue=\"0\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\" className=\"btn custom-btn ml-3 mb-auto\">\r\n                                    Сгенерировать\r\n                                </Button>\r\n                            </Form.Row>\r\n                            </Form>\r\n                        </Container>\r\n                    }\r\n                    <ConfiguredTable\r\n                        isLoading={this.state.isLoading}\r\n                        editTable={this.editTable}\r\n                        table_name={this.props.match.params.table_name}\r\n                        columns={this.state.table.columns}\r\n                        data={this.state.table.data}\r\n                    />\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableContainer;\r\n","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { Col, Button, Container } from 'react-bootstrap';\r\nimport TableContainer from './TableContainer'\r\n\r\n\r\nfunction KeysContainer(props) {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <TableContainer />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default KeysContainer","import React, { Component } from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport ListOfTablesContainer from './containers/ListOfTablesContainer'\r\nimport TableContainer from './containers/TableContainer'\r\nimport KeysContainer from './containers/KeysContainer'\r\n\r\n\r\n\r\nclass AdminDB extends Component {\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <Router basename='/admindb'  >\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={ListOfTablesContainer} />\r\n                    <Route path=\"/:table_name\" component={TableContainer} />\r\n                    <Redirect strict to=\"/\" />\r\n                </Switch >\r\n            </Router >\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default AdminDB;\r\n\r\n\r\n"],"sourceRoot":""}