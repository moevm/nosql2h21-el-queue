{"version":3,"sources":["components/routes/admindb/containers/DescriptionContainer.js","components/routes/admindb/containers/ListOfTables.js","components/routes/admindb/containers/ListOfTablesContainer.js","components/routes/admindb/containers/ConfiguredTable.js","components/routes/admindb/containers/TableContainer.js","components/routes/admindb/containers/KeysContainer.js","components/routes/admindb/AdminDB.js"],"names":["DescriptionContainer","props","Col","md","class","className","header","description","map","e","to","Button","ListOfTables","handleDownload","bind","uploadDisciplines","fetch","headers","headersDefault","then","data","json","console","log","blob","Blob","JSON","stringify","type","saveAs","input","document","getElementById","formData","FormData","append","files","method","Authorization","localStorage","getItem","body","Container","Row","id","accept","onClick","this","Image","src","width","Component","ListOfTablesContainer","localization","emptyDataSourceMessage","addTooltip","deleteTooltip","editTooltip","filterRow","filterTooltip","editRow","deleteText","cancelTooltip","saveTooltip","grouping","placeholder","groupedBy","actions","pagination","labelDisplayedRows","labelRowsSelect","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","toolbar","addRemoveColumns","nRowsSelected","showColumnsTitle","showColumnsAriaLabel","exportTitle","exportAriaLabel","exportName","searchTooltip","searchPlaceholder","ConfiguredTable","style","fontFamily","borderRadius","boxShadow","animation","isLoading","title","table_name","toUpperCase","options","filtering","columns","editable","onRowAdd","newData","Promise","resolve","editTable","onRowUpdate","prevData","prevData_","Object","assign","tableData","onRowDelete","TableContainer","updateTable","state","table","setState","match","params","success","alert","causeOfError","task","Form","onSubmit","event","num","currentTarget","value","preventDefault","stopPropagation","Group","Control","name","min","defaultValue","variant","KeysContainer","AdminDB","basename","exact","path","component","strict"],"mappings":"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","file":"static/js/5.3abca86e.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { Col, Button } from 'react-bootstrap';\r\n\r\n\r\nfunction DescriptionContainer(props) {\r\n    return (\r\n        <Col md={4}>\r\n            <div class=\"custom-card mb-4 shadow-sm\">\r\n                <center className=\"pt-3\">\r\n                    <h4>{props.header}</h4>\r\n                </center>\r\n                <hr />\r\n                <div class=\"card-body\">\r\n                    {props.description.map(e => <p className=\"card-text\">{e}</p>)}\r\n                    <Link to={props.to}>\r\n                        <Button className=\"custom-btn\" >Перейти</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default DescriptionContainer\r\n","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Container, Row, Col, Button, Form, Tooltip, Image, OverlayTrigger} from 'react-bootstrap';\r\nimport DescriptionContainer from './DescriptionContainer'\r\nimport {saveAs} from \"file-saver\";\r\nimport headersDefault from \"../../../../fetchDefault\";\r\n\r\nclass ListOfTables extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleDownload = this.handleDownload.bind(this)\r\n        this.uploadDisciplines = this.uploadDisciplines.bind(this)\r\n    }\r\n\r\n    handleDownload() {\r\n        fetch(`/db/download`, {\r\n            headers:headersDefault(),\r\n        })\r\n            .then(data => data.json())\r\n            .then(json => {\r\n                console.log(json)\r\n                let blob = new Blob([JSON.stringify(json, null, 2)], {type:\"text/json\"})\r\n                saveAs(blob, \"elqueue_db.json\")\r\n            })\r\n    }\r\n\r\n    uploadDisciplines() {\r\n        const input = document.getElementById('fileinput')\r\n        const formData = new FormData();\r\n        formData.append(\"file\", input.files[0]);\r\n        fetch(`/db/upload/disciplines`, {\r\n            method:\"POST\",\r\n            headers:{\r\n                Authorization:\"JWT \" + localStorage.getItem(\"accesstoken\"),\r\n            },\r\n            body:formData\r\n        })\r\n            .then(data => data.json())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container className=\"custom-paper bg-light p-3 col-12 col-lg-10\">\r\n                    <Row>\r\n                        <DescriptionContainer\r\n                            header={\"Список созданных пользователей\"}\r\n                            description={[\r\n                                \"Просмотр списка созданных пользователей\",\r\n                                \"Удаление\",\r\n                                \"Добавление\",\r\n                                \"Редактирование\",\r\n                            ]}\r\n                            to=\"/users\"\r\n                        />\r\n                        <DescriptionContainer\r\n                            header={\"Список занятий\"}\r\n                            description={[\r\n                                \"Просмотр списка занятий\",\r\n                                \"Удаление\",\r\n                                \"Добавление\",\r\n                            ]}\r\n                            to=\"/classes\"\r\n                            className=\"custom-block\"\r\n                        />\r\n                        <DescriptionContainer\r\n                            header={\"Список доступных дисциплин\"}\r\n                            description={[\r\n                                \"Просмотр списка возможных дисциплин\",\r\n                                \"Удаление\",\r\n                                \"Добавление\",\r\n                                \"Редактирование\",\r\n                            ]}\r\n                            to=\"/disciplines\"\r\n                        />\r\n                        <DescriptionContainer\r\n                            header={\"Секретные ключи\"}\r\n                            description={[\r\n                                \"Управение ключами\",\r\n                                \"Удаление\",\r\n                                \"Добавление\",\r\n                            ]}\r\n                            to=\"/secretkeys\"\r\n                        />\r\n                        <Col md={4}>\r\n                            <div className=\"custom-card mb-4 shadow-sm\">\r\n                                <center className=\"pt-3\">\r\n                                    <h4>Импорт Базы Данных</h4>\r\n                                </center>\r\n                                <hr/>\r\n                                <div className=\"card-body\">\r\n                                    <input type=\"file\" id=\"fileinput\" className=\"mb-3 p-3 custom-card bg-white\"\r\n                                           accept=\".json\"/>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <Button className=\"custom-btn btn-info\"\r\n                                                onClick={this.uploadDisciplines}>Загрузить</Button>\r\n                                        <div className=\"mr-0 mr-lg-3\">\r\n                                            <Image src=\"static/img/info.svg\" width=\"24\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <div className=\"custom-card mb-4 shadow-sm\">\r\n                                <center className=\"pt-3\">\r\n                                    <h4>Скачать базу данных</h4>\r\n                                </center>\r\n                                <hr/>\r\n                                <div className=\"card-body\">\r\n                                    <Button onClick={this.handleDownload} className=\"custom-btn btn-info\">JSON</Button>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ListOfTables;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport ListOfTables from './ListOfTables'\r\nimport { Container } from 'react-bootstrap';\r\n\r\n\r\nclass ListOfTablesContainer extends Component {\r\n    render() {\r\n        return (\r\n        <Container className=\"p-3 col-12\">\r\n            <ListOfTables />\r\n        </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ListOfTablesContainer;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport MaterialTable from 'material-table';\r\n\r\n\r\nconst localization = {\r\n    body:{\r\n        emptyDataSourceMessage:'Нет записей',\r\n        addTooltip:'Добавить',\r\n        deleteTooltip:'Удалить',\r\n        editTooltip:'Изменить',\r\n        filterRow:{\r\n            filterTooltip:'Фильтр'\r\n        },\r\n        editRow:{\r\n            deleteText:'Вы действительно хотите удалить запись?',\r\n            cancelTooltip:'Отменить',\r\n            saveTooltip:'Подтвердить'\r\n        }\r\n    },\r\n    grouping:{\r\n        placeholder:'Перемещение колонок ...',\r\n        groupedBy:'Сгруппирован по:'\r\n    },\r\n    header:{\r\n        actions:'Действия'\r\n    },\r\n    pagination:{\r\n        labelDisplayedRows:'{from}-{to} из {count}',\r\n        labelRowsSelect:'Строк',\r\n        labelRowsPerPage:'Строк на странице:',\r\n        firstAriaLabel:'Первая страница',\r\n        firstTooltip:'Первая страница',\r\n        previousAriaLabel:'Предыдущая страница',\r\n        previousTooltip:'Предыдущая страница',\r\n        nextAriaLabel:'Следующая страница',\r\n        nextTooltip:'Следующая страница',\r\n        lastAriaLabel:'Последняя страница',\r\n        lastTooltip:'Последняя страница'\r\n    },\r\n    toolbar:{\r\n        addRemoveColumns:'Добавить/удалить столбец',\r\n        nRowsSelected:'{0} Строк выбрано',\r\n        showColumnsTitle:'Показать колонки',\r\n        showColumnsAriaLabel:'Показать колонки',\r\n        exportTitle:'Экспортировать',\r\n        exportAriaLabel:'Экспортировать',\r\n        exportName:'Экспортировать как CSV',\r\n        searchTooltip:'Поиск',\r\n        searchPlaceholder:'Поиск'\r\n    }\r\n}\r\n\r\n\r\nfunction ConfiguredTable(props) {\r\n\r\n    return (\r\n        <>\r\n            <MaterialTable\r\n                style={{\r\n                    fontFamily:'Nunito',\r\n                    borderRadius:20,\r\n                    boxShadow:\"0px 3px 5px rgb(224, 224, 224)\",\r\n                    animation:'appear .6s'\r\n                }}\r\n                isLoading={props.isLoading}\r\n                localization={localization}\r\n                title={props.table_name.toUpperCase()}\r\n                options={{\r\n                    filtering: true\r\n                }}\r\n                columns={props.columns}\r\n                data={props.data}\r\n                editable={{\r\n                    onRowAdd:(newData) =>\r\n                        new Promise((resolve) => {\r\n                            resolve();\r\n                            props.editTable(\"ADD_RECORD\", newData)\r\n                        }),\r\n                    onRowUpdate:(newData, prevData) =>\r\n                        new Promise((resolve) => {\r\n                            resolve();\r\n                            let prevData_ = Object.assign({}, prevData)\r\n                            delete prevData_.tableData\r\n                            if (JSON.stringify(newData) !== JSON.stringify(prevData_))\r\n                                props.editTable(\"UPD_RECORD\", newData)\r\n\r\n                        }),\r\n                    onRowDelete:(newData) =>\r\n                        new Promise((resolve) => {\r\n                            resolve();\r\n                            let newData_ = Object.assign({}, newData)\r\n                            delete newData_.tableData\r\n                            props.editTable(\"DEL_RECORD\", newData)\r\n                        }),\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ConfiguredTable;\r\n","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Container, Button, Row, Form} from 'react-bootstrap';\r\nimport ConfiguredTable from './ConfiguredTable'\r\nimport headersDefault from '../../../../fetchDefault'\r\n\r\n\r\nclass TableContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.updateTable = this.updateTable.bind(this)\r\n        this.editTable = this.editTable.bind(this)\r\n        this.state = {\r\n            table:{},\r\n            isLoading:true\r\n        }\r\n    }\r\n\r\n    updateTable() {\r\n        this.setState({isLoading:true})\r\n        fetch(`/db/${this.props.match.params.table_name}`, {\r\n            headers:headersDefault(),\r\n\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({isLoading:false})\r\n                if (data.success) {\r\n                    this.setState({table:{columns:data.table.columns, data:data.table.data}})\r\n                } else {\r\n                    alert(data.causeOfError)\r\n                }\r\n            })\r\n    }\r\n\r\n    editTable(task, data) {\r\n        this.setState({isLoading:true})\r\n        fetch(`/db/${this.props.match.params.table_name}`, {\r\n            method:\"POST\",\r\n            headers:headersDefault(),\r\n\r\n            body:JSON.stringify({\r\n                task,\r\n                data\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({isLoading:false})\r\n\r\n                if (data.success) {\r\n                    this.updateTable()\r\n                } else {\r\n                    alert(data.causeOfError)\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateTable()\r\n        console.log(111)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container className=\"p-3 col-12\">\r\n                    {\r\n\r\n                        this.props.match.params.table_name === \"secretkeys\" &&\r\n                        <Container className=\"custom-paper mb-2 p-3\">\r\n                            <Form className=\"mb-0\" onSubmit={(event) => {\r\n                                this.editTable(\"GEN_RECORD\", {num:event.currentTarget.num.value})\r\n                                event.preventDefault();\r\n                                event.stopPropagation();\r\n\r\n                            }}><Form.Row>\r\n\r\n                                <Form.Group className=\"mb-0\">\r\n                                    <Form.Control\r\n                                        name=\"num\"\r\n                                        type=\"number\"\r\n                                        placeholder=\"Введите количество\"\r\n                                        min=\"0\"\r\n                                        defaultValue=\"0\"\r\n                                        className=\"custom-textform\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\" className=\"btn custom-btn ml-3 mb-auto\">\r\n                                    Сгенерировать\r\n                                </Button>\r\n                            </Form.Row>\r\n                            </Form>\r\n                        </Container>\r\n                    }\r\n                    <ConfiguredTable\r\n                        isLoading={this.state.isLoading}\r\n                        editTable={this.editTable}\r\n                        table_name={this.props.match.params.table_name}\r\n                        columns={this.state.table.columns}\r\n                        data={this.state.table.data}\r\n                    />\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableContainer;\r\n","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { Col, Button, Container } from 'react-bootstrap';\r\nimport TableContainer from './TableContainer'\r\n\r\n\r\nfunction KeysContainer(props) {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <TableContainer />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default KeysContainer","import React, { Component } from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport ListOfTablesContainer from './containers/ListOfTablesContainer'\r\nimport TableContainer from './containers/TableContainer'\r\nimport KeysContainer from './containers/KeysContainer'\r\n\r\n\r\n\r\nclass AdminDB extends Component {\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <Router basename='/admindb'  >\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={ListOfTablesContainer} />\r\n                    <Route path=\"/:table_name\" component={TableContainer} />\r\n                    <Redirect strict to=\"/\" />\r\n                </Switch >\r\n            </Router >\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default AdminDB;\r\n\r\n\r\n"],"sourceRoot":""}